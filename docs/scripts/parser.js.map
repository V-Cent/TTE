{
  "version": 3,
  "sources": ["../../node_modules/github-slugger/regex.js", "../../node_modules/github-slugger/index.js", "../../node_modules/extend/index.js", "../../node_modules/@sindresorhus/is/dist/index.js", "../../node_modules/emojilib/emojis.json", "../../node_modules/emojilib/ordered.json", "../../node_modules/emojilib/index.js", "../../node_modules/char-regex/index.js", "../../node_modules/unicode-emoji-modifier-base/index.js", "../../node_modules/skin-tone/index.js", "../../node_modules/is-url/index.js", "../../node_modules/mdast-util-from-markdown/node_modules/mdast-util-to-string/lib/index.js", "../../node_modules/micromark-util-chunked/index.js", "../../node_modules/micromark-util-combine-extensions/index.js", "../../node_modules/micromark-factory-space/node_modules/micromark-util-character/lib/unicode-punctuation-regex.js", "../../node_modules/micromark-factory-space/node_modules/micromark-util-character/index.js", "../../node_modules/micromark-factory-space/index.js", "../../node_modules/micromark/node_modules/micromark-util-character/lib/unicode-punctuation-regex.js", "../../node_modules/micromark/node_modules/micromark-util-character/index.js", "../../node_modules/micromark/lib/initialize/content.js", "../../node_modules/micromark/lib/initialize/document.js", "../../node_modules/micromark-util-classify-character/node_modules/micromark-util-character/lib/unicode-punctuation-regex.js", "../../node_modules/micromark-util-classify-character/node_modules/micromark-util-character/index.js", "../../node_modules/micromark-util-classify-character/index.js", "../../node_modules/micromark-util-resolve-all/index.js", "../../node_modules/micromark-core-commonmark/lib/attention.js", "../../node_modules/micromark-core-commonmark/node_modules/micromark-util-character/lib/unicode-punctuation-regex.js", "../../node_modules/micromark-core-commonmark/node_modules/micromark-util-character/index.js", "../../node_modules/micromark-core-commonmark/lib/autolink.js", "../../node_modules/micromark-core-commonmark/lib/blank-line.js", "../../node_modules/micromark-core-commonmark/lib/block-quote.js", "../../node_modules/micromark-core-commonmark/lib/character-escape.js", "../../node_modules/decode-named-character-reference/index.dom.js", "../../node_modules/micromark-core-commonmark/lib/character-reference.js", "../../node_modules/micromark-core-commonmark/lib/code-fenced.js", "../../node_modules/micromark-core-commonmark/lib/code-indented.js", "../../node_modules/micromark-core-commonmark/lib/code-text.js", "../../node_modules/micromark-util-subtokenize/index.js", "../../node_modules/micromark-core-commonmark/lib/content.js", "../../node_modules/micromark-factory-destination/node_modules/micromark-util-character/lib/unicode-punctuation-regex.js", "../../node_modules/micromark-factory-destination/node_modules/micromark-util-character/index.js", "../../node_modules/micromark-factory-destination/index.js", "../../node_modules/micromark-factory-label/node_modules/micromark-util-character/lib/unicode-punctuation-regex.js", "../../node_modules/micromark-factory-label/node_modules/micromark-util-character/index.js", "../../node_modules/micromark-factory-label/index.js", "../../node_modules/micromark-factory-title/node_modules/micromark-util-character/lib/unicode-punctuation-regex.js", "../../node_modules/micromark-factory-title/node_modules/micromark-util-character/index.js", "../../node_modules/micromark-factory-title/index.js", "../../node_modules/micromark-factory-whitespace/node_modules/micromark-util-character/lib/unicode-punctuation-regex.js", "../../node_modules/micromark-factory-whitespace/node_modules/micromark-util-character/index.js", "../../node_modules/micromark-factory-whitespace/index.js", "../../node_modules/micromark-util-normalize-identifier/index.js", "../../node_modules/micromark-core-commonmark/lib/definition.js", "../../node_modules/micromark-core-commonmark/lib/hard-break-escape.js", "../../node_modules/micromark-core-commonmark/lib/heading-atx.js", "../../node_modules/micromark-util-html-tag-name/index.js", "../../node_modules/micromark-core-commonmark/lib/html-flow.js", "../../node_modules/micromark-core-commonmark/lib/html-text.js", "../../node_modules/micromark-core-commonmark/lib/label-end.js", "../../node_modules/micromark-core-commonmark/lib/label-start-image.js", "../../node_modules/micromark-core-commonmark/lib/label-start-link.js", "../../node_modules/micromark-core-commonmark/lib/line-ending.js", "../../node_modules/micromark-core-commonmark/lib/thematic-break.js", "../../node_modules/micromark-core-commonmark/lib/list.js", "../../node_modules/micromark-core-commonmark/lib/setext-underline.js", "../../node_modules/micromark/lib/initialize/flow.js", "../../node_modules/micromark/lib/initialize/text.js", "../../node_modules/micromark/lib/create-tokenizer.js", "../../node_modules/micromark/lib/constructs.js", "../../node_modules/micromark/lib/parse.js", "../../node_modules/micromark/lib/preprocess.js", "../../node_modules/micromark/lib/postprocess.js", "../../node_modules/micromark-util-decode-numeric-character-reference/index.js", "../../node_modules/micromark-util-decode-string/index.js", "../../node_modules/unist-util-stringify-position/lib/index.js", "../../node_modules/mdast-util-from-markdown/lib/index.js", "../../node_modules/remark-parse/lib/index.js", "../../node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/blockquote.js", "../../node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/break.js", "../../node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/code.js", "../../node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/delete.js", "../../node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/emphasis.js", "../../node_modules/remark-rehype/node_modules/micromark-util-character/lib/unicode-punctuation-regex.js", "../../node_modules/remark-rehype/node_modules/micromark-util-character/index.js", "../../node_modules/remark-rehype/node_modules/micromark-util-sanitize-uri/index.js", "../../node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js", "../../node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/footnote.js", "../../node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/heading.js", "../../node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/html.js", "../../node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/revert.js", "../../node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/image-reference.js", "../../node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/image.js", "../../node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/inline-code.js", "../../node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/link-reference.js", "../../node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/link.js", "../../node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/list-item.js", "../../node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/list.js", "../../node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/paragraph.js", "../../node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/root.js", "../../node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/strong.js", "../../node_modules/remark-rehype/node_modules/unist-util-position/lib/index.js", "../../node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/table.js", "../../node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/table-row.js", "../../node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/table-cell.js", "../../node_modules/trim-lines/index.js", "../../node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/text.js", "../../node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js", "../../node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/handlers/index.js", "../../node_modules/unist-util-is/lib/index.js", "../../node_modules/unist-util-visit-parents/lib/index.js", "../../node_modules/remark-rehype/node_modules/unist-util-visit/lib/index.js", "../../node_modules/unist-util-generated/lib/index.js", "../../node_modules/mdast-util-definitions/node_modules/unist-util-visit/lib/index.js", "../../node_modules/mdast-util-definitions/lib/index.js", "../../node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/state.js", "../../node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/footer.js", "../../node_modules/remark-rehype/node_modules/mdast-util-to-hast/lib/index.js", "../../node_modules/remark-rehype/lib/index.js", "../../node_modules/html-void-elements/index.js", "../../node_modules/property-information/lib/util/schema.js", "../../node_modules/property-information/lib/util/merge.js", "../../node_modules/property-information/lib/normalize.js", "../../node_modules/property-information/lib/util/info.js", "../../node_modules/property-information/lib/util/types.js", "../../node_modules/property-information/lib/util/defined-info.js", "../../node_modules/property-information/lib/util/create.js", "../../node_modules/property-information/lib/xlink.js", "../../node_modules/property-information/lib/xml.js", "../../node_modules/property-information/lib/util/case-sensitive-transform.js", "../../node_modules/property-information/lib/util/case-insensitive-transform.js", "../../node_modules/property-information/lib/xmlns.js", "../../node_modules/property-information/lib/aria.js", "../../node_modules/property-information/lib/html.js", "../../node_modules/property-information/lib/svg.js", "../../node_modules/property-information/lib/find.js", "../../node_modules/property-information/index.js", "../../node_modules/zwitch/index.js", "../../node_modules/stringify-entities/lib/core.js", "../../node_modules/stringify-entities/lib/util/to-hexadecimal.js", "../../node_modules/stringify-entities/lib/util/to-decimal.js", "../../node_modules/character-entities-legacy/index.js", "../../node_modules/character-entities-html4/index.js", "../../node_modules/stringify-entities/lib/constant/dangerous.js", "../../node_modules/stringify-entities/lib/util/to-named.js", "../../node_modules/stringify-entities/lib/util/format-smart.js", "../../node_modules/stringify-entities/lib/util/format-basic.js", "../../node_modules/stringify-entities/lib/index.js", "../../node_modules/hast-util-to-html/lib/handle/comment.js", "../../node_modules/hast-util-to-html/lib/handle/doctype.js", "../../node_modules/ccount/index.js", "../../node_modules/comma-separated-tokens/index.js", "../../node_modules/space-separated-tokens/index.js", "../../node_modules/hast-util-whitespace/lib/index.js", "../../node_modules/hast-util-to-html/lib/omission/util/siblings.js", "../../node_modules/hast-util-to-html/lib/omission/omission.js", "../../node_modules/hast-util-to-html/lib/omission/closing.js", "../../node_modules/hast-util-to-html/lib/omission/opening.js", "../../node_modules/hast-util-to-html/lib/handle/element.js", "../../node_modules/hast-util-to-html/lib/handle/text.js", "../../node_modules/hast-util-to-html/lib/handle/raw.js", "../../node_modules/hast-util-to-html/lib/handle/root.js", "../../node_modules/hast-util-to-html/lib/handle/index.js", "../../node_modules/hast-util-to-html/lib/index.js", "../../node_modules/rehype-stringify/lib/index.js", "../../node_modules/micromark-extension-gfm-autolink-literal/node_modules/micromark-util-character/lib/unicode-punctuation-regex.js", "../../node_modules/micromark-extension-gfm-autolink-literal/node_modules/micromark-util-character/index.js", "../../node_modules/micromark-extension-gfm-autolink-literal/lib/syntax.js", "../../node_modules/micromark-extension-gfm-footnote/node_modules/micromark-util-character/lib/unicode-punctuation-regex.js", "../../node_modules/micromark-extension-gfm-footnote/node_modules/micromark-util-character/index.js", "../../node_modules/micromark-extension-gfm-footnote/lib/syntax.js", "../../node_modules/micromark-extension-gfm-strikethrough/lib/syntax.js", "../../node_modules/micromark-extension-gfm-table/node_modules/micromark-util-character/lib/unicode-punctuation-regex.js", "../../node_modules/micromark-extension-gfm-table/node_modules/micromark-util-character/index.js", "../../node_modules/micromark-extension-gfm-table/lib/edit-map.js", "../../node_modules/micromark-extension-gfm-table/lib/infer.js", "../../node_modules/micromark-extension-gfm-table/lib/syntax.js", "../../node_modules/micromark-extension-gfm-task-list-item/node_modules/micromark-util-character/lib/unicode-punctuation-regex.js", "../../node_modules/micromark-extension-gfm-task-list-item/node_modules/micromark-util-character/index.js", "../../node_modules/micromark-extension-gfm-task-list-item/lib/syntax.js", "../../node_modules/micromark-extension-gfm/index.js", "../../node_modules/escape-string-regexp/index.js", "../../node_modules/mdast-util-gfm-autolink-literal/node_modules/mdast-util-find-and-replace/lib/index.js", "../../node_modules/mdast-util-gfm-autolink-literal/node_modules/micromark-util-character/lib/unicode-punctuation-regex.js", "../../node_modules/mdast-util-gfm-autolink-literal/node_modules/micromark-util-character/index.js", "../../node_modules/mdast-util-gfm-autolink-literal/lib/index.js", "../../node_modules/mdast-util-to-markdown/lib/util/association.js", "../../node_modules/mdast-util-to-markdown/lib/util/container-flow.js", "../../node_modules/mdast-util-to-markdown/lib/util/indent-lines.js", "../../node_modules/mdast-util-to-markdown/lib/util/pattern-compile.js", "../../node_modules/mdast-util-to-markdown/lib/util/pattern-in-scope.js", "../../node_modules/mdast-util-to-markdown/lib/util/safe.js", "../../node_modules/mdast-util-to-markdown/lib/util/track.js", "../../node_modules/mdast-util-gfm-footnote/lib/index.js", "../../node_modules/mdast-util-to-markdown/lib/util/container-phrasing.js", "../../node_modules/mdast-util-gfm-strikethrough/lib/index.js", "../../node_modules/mdast-util-to-markdown/lib/handle/inline-code.js", "../../node_modules/markdown-table/index.js", "../../node_modules/mdast-util-gfm-table/lib/index.js", "../../node_modules/mdast-util-to-markdown/lib/util/check-bullet.js", "../../node_modules/mdast-util-to-markdown/lib/util/check-list-item-indent.js", "../../node_modules/mdast-util-to-markdown/lib/handle/list-item.js", "../../node_modules/mdast-util-gfm-task-list-item/lib/index.js", "../../node_modules/mdast-util-gfm/lib/index.js", "../../node_modules/remark-gfm/index.js", "../../node_modules/remark-slug/node_modules/mdast-util-to-string/lib/index.js", "../../node_modules/remark-slug/node_modules/unist-util-visit/lib/index.js", "../../node_modules/remark-slug/index.js", "../../node_modules/mdast-util-toc/node_modules/github-slugger/regex.js", "../../node_modules/mdast-util-toc/node_modules/github-slugger/index.js", "../../node_modules/mdast-util-toc/node_modules/mdast-util-to-string/lib/index.js", "../../node_modules/mdast-util-toc/node_modules/unist-util-visit/lib/index.js", "../../node_modules/mdast-util-toc/lib/to-expression.js", "../../node_modules/mdast-util-toc/lib/search.js", "../../node_modules/mdast-util-toc/lib/contents.js", "../../node_modules/mdast-util-toc/lib/index.js", "../../node_modules/remark-toc/index.js", "../../node_modules/node-emoji/lib/index.js", "../../node_modules/emoticon/index.js", "../../node_modules/mdast-util-find-and-replace/node_modules/unist-util-is/lib/index.js", "../../node_modules/mdast-util-find-and-replace/node_modules/unist-util-visit-parents/lib/index.js", "../../node_modules/mdast-util-find-and-replace/lib/index.js", "../../node_modules/remark-emoji/index.js", "../../node_modules/remark-images/index.js", "../../node_modules/micromark-extension-directive/node_modules/micromark-util-character/lib/unicode-punctuation-regex.js", "../../node_modules/micromark-extension-directive/node_modules/micromark-util-character/index.js", "../../node_modules/micromark-extension-directive/lib/factory-attributes.js", "../../node_modules/micromark-extension-directive/lib/factory-label.js", "../../node_modules/micromark-extension-directive/lib/factory-name.js", "../../node_modules/micromark-extension-directive/lib/directive-container.js", "../../node_modules/micromark-extension-directive/lib/directive-leaf.js", "../../node_modules/micromark-extension-directive/lib/directive-text.js", "../../node_modules/micromark-extension-directive/lib/syntax.js", "../../node_modules/character-reference-invalid/index.js", "../../node_modules/is-decimal/index.js", "../../node_modules/is-hexadecimal/index.js", "../../node_modules/is-alphabetical/index.js", "../../node_modules/is-alphanumerical/index.js", "../../node_modules/parse-entities/lib/index.js", "../../node_modules/mdast-util-to-markdown/lib/util/check-quote.js", "../../node_modules/mdast-util-directive/lib/index.js", "../../node_modules/remark-directive/index.js", "../../node_modules/@ungap/structured-clone/esm/deserialize.js", "../../node_modules/@ungap/structured-clone/esm/serialize.js", "../../node_modules/@ungap/structured-clone/esm/index.js", "../../node_modules/bail/index.js", "../../node_modules/is-plain-obj/index.js", "../../node_modules/trough/index.js", "../../node_modules/unified/node_modules/unist-util-stringify-position/lib/index.js", "../../node_modules/unified/node_modules/vfile-message/lib/index.js", "../../node_modules/unified/node_modules/vfile/lib/minpath.browser.js", "../../node_modules/unified/node_modules/vfile/lib/minproc.browser.js", "../../node_modules/unified/node_modules/vfile/lib/minurl.shared.js", "../../node_modules/unified/node_modules/vfile/lib/minurl.browser.js", "../../node_modules/unified/node_modules/vfile/lib/index.js", "../../node_modules/unified/lib/callable-instance.js", "../../node_modules/unified/lib/index.js", "../../node_modules/unist-util-visit/node_modules/unist-util-is/lib/index.js", "../../node_modules/unist-util-visit/node_modules/unist-util-visit-parents/lib/index.js", "../../node_modules/unist-util-visit/lib/index.js", "../../node_modules/hast-util-parse-selector/lib/index.js", "../../node_modules/hastscript/lib/create-h.js", "../../node_modules/hastscript/lib/svg-case-sensitive-tag-names.js", "../../node_modules/hastscript/lib/index.js", "../../src/parser.js"],
  "sourcesContent": ["// This module is generated by `script/`.\n/* eslint-disable no-control-regex, no-misleading-character-class, no-useless-escape */\nmodule.exports = /[\\0-\\x1F!-,\\.\\/:-@\\[-\\^`\\{-\\xA9\\xAB-\\xB4\\xB6-\\xB9\\xBB-\\xBF\\xD7\\xF7\\u02C2-\\u02C5\\u02D2-\\u02DF\\u02E5-\\u02EB\\u02ED\\u02EF-\\u02FF\\u0375\\u0378\\u0379\\u037E\\u0380-\\u0385\\u0387\\u038B\\u038D\\u03A2\\u03F6\\u0482\\u0530\\u0557\\u0558\\u055A-\\u055F\\u0589-\\u0590\\u05BE\\u05C0\\u05C3\\u05C6\\u05C8-\\u05CF\\u05EB-\\u05EE\\u05F3-\\u060F\\u061B-\\u061F\\u066A-\\u066D\\u06D4\\u06DD\\u06DE\\u06E9\\u06FD\\u06FE\\u0700-\\u070F\\u074B\\u074C\\u07B2-\\u07BF\\u07F6-\\u07F9\\u07FB\\u07FC\\u07FE\\u07FF\\u082E-\\u083F\\u085C-\\u085F\\u086B-\\u089F\\u08B5\\u08C8-\\u08D2\\u08E2\\u0964\\u0965\\u0970\\u0984\\u098D\\u098E\\u0991\\u0992\\u09A9\\u09B1\\u09B3-\\u09B5\\u09BA\\u09BB\\u09C5\\u09C6\\u09C9\\u09CA\\u09CF-\\u09D6\\u09D8-\\u09DB\\u09DE\\u09E4\\u09E5\\u09F2-\\u09FB\\u09FD\\u09FF\\u0A00\\u0A04\\u0A0B-\\u0A0E\\u0A11\\u0A12\\u0A29\\u0A31\\u0A34\\u0A37\\u0A3A\\u0A3B\\u0A3D\\u0A43-\\u0A46\\u0A49\\u0A4A\\u0A4E-\\u0A50\\u0A52-\\u0A58\\u0A5D\\u0A5F-\\u0A65\\u0A76-\\u0A80\\u0A84\\u0A8E\\u0A92\\u0AA9\\u0AB1\\u0AB4\\u0ABA\\u0ABB\\u0AC6\\u0ACA\\u0ACE\\u0ACF\\u0AD1-\\u0ADF\\u0AE4\\u0AE5\\u0AF0-\\u0AF8\\u0B00\\u0B04\\u0B0D\\u0B0E\\u0B11\\u0B12\\u0B29\\u0B31\\u0B34\\u0B3A\\u0B3B\\u0B45\\u0B46\\u0B49\\u0B4A\\u0B4E-\\u0B54\\u0B58-\\u0B5B\\u0B5E\\u0B64\\u0B65\\u0B70\\u0B72-\\u0B81\\u0B84\\u0B8B-\\u0B8D\\u0B91\\u0B96-\\u0B98\\u0B9B\\u0B9D\\u0BA0-\\u0BA2\\u0BA5-\\u0BA7\\u0BAB-\\u0BAD\\u0BBA-\\u0BBD\\u0BC3-\\u0BC5\\u0BC9\\u0BCE\\u0BCF\\u0BD1-\\u0BD6\\u0BD8-\\u0BE5\\u0BF0-\\u0BFF\\u0C0D\\u0C11\\u0C29\\u0C3A-\\u0C3C\\u0C45\\u0C49\\u0C4E-\\u0C54\\u0C57\\u0C5B-\\u0C5F\\u0C64\\u0C65\\u0C70-\\u0C7F\\u0C84\\u0C8D\\u0C91\\u0CA9\\u0CB4\\u0CBA\\u0CBB\\u0CC5\\u0CC9\\u0CCE-\\u0CD4\\u0CD7-\\u0CDD\\u0CDF\\u0CE4\\u0CE5\\u0CF0\\u0CF3-\\u0CFF\\u0D0D\\u0D11\\u0D45\\u0D49\\u0D4F-\\u0D53\\u0D58-\\u0D5E\\u0D64\\u0D65\\u0D70-\\u0D79\\u0D80\\u0D84\\u0D97-\\u0D99\\u0DB2\\u0DBC\\u0DBE\\u0DBF\\u0DC7-\\u0DC9\\u0DCB-\\u0DCE\\u0DD5\\u0DD7\\u0DE0-\\u0DE5\\u0DF0\\u0DF1\\u0DF4-\\u0E00\\u0E3B-\\u0E3F\\u0E4F\\u0E5A-\\u0E80\\u0E83\\u0E85\\u0E8B\\u0EA4\\u0EA6\\u0EBE\\u0EBF\\u0EC5\\u0EC7\\u0ECE\\u0ECF\\u0EDA\\u0EDB\\u0EE0-\\u0EFF\\u0F01-\\u0F17\\u0F1A-\\u0F1F\\u0F2A-\\u0F34\\u0F36\\u0F38\\u0F3A-\\u0F3D\\u0F48\\u0F6D-\\u0F70\\u0F85\\u0F98\\u0FBD-\\u0FC5\\u0FC7-\\u0FFF\\u104A-\\u104F\\u109E\\u109F\\u10C6\\u10C8-\\u10CC\\u10CE\\u10CF\\u10FB\\u1249\\u124E\\u124F\\u1257\\u1259\\u125E\\u125F\\u1289\\u128E\\u128F\\u12B1\\u12B6\\u12B7\\u12BF\\u12C1\\u12C6\\u12C7\\u12D7\\u1311\\u1316\\u1317\\u135B\\u135C\\u1360-\\u137F\\u1390-\\u139F\\u13F6\\u13F7\\u13FE-\\u1400\\u166D\\u166E\\u1680\\u169B-\\u169F\\u16EB-\\u16ED\\u16F9-\\u16FF\\u170D\\u1715-\\u171F\\u1735-\\u173F\\u1754-\\u175F\\u176D\\u1771\\u1774-\\u177F\\u17D4-\\u17D6\\u17D8-\\u17DB\\u17DE\\u17DF\\u17EA-\\u180A\\u180E\\u180F\\u181A-\\u181F\\u1879-\\u187F\\u18AB-\\u18AF\\u18F6-\\u18FF\\u191F\\u192C-\\u192F\\u193C-\\u1945\\u196E\\u196F\\u1975-\\u197F\\u19AC-\\u19AF\\u19CA-\\u19CF\\u19DA-\\u19FF\\u1A1C-\\u1A1F\\u1A5F\\u1A7D\\u1A7E\\u1A8A-\\u1A8F\\u1A9A-\\u1AA6\\u1AA8-\\u1AAF\\u1AC1-\\u1AFF\\u1B4C-\\u1B4F\\u1B5A-\\u1B6A\\u1B74-\\u1B7F\\u1BF4-\\u1BFF\\u1C38-\\u1C3F\\u1C4A-\\u1C4C\\u1C7E\\u1C7F\\u1C89-\\u1C8F\\u1CBB\\u1CBC\\u1CC0-\\u1CCF\\u1CD3\\u1CFB-\\u1CFF\\u1DFA\\u1F16\\u1F17\\u1F1E\\u1F1F\\u1F46\\u1F47\\u1F4E\\u1F4F\\u1F58\\u1F5A\\u1F5C\\u1F5E\\u1F7E\\u1F7F\\u1FB5\\u1FBD\\u1FBF-\\u1FC1\\u1FC5\\u1FCD-\\u1FCF\\u1FD4\\u1FD5\\u1FDC-\\u1FDF\\u1FED-\\u1FF1\\u1FF5\\u1FFD-\\u203E\\u2041-\\u2053\\u2055-\\u2070\\u2072-\\u207E\\u2080-\\u208F\\u209D-\\u20CF\\u20F1-\\u2101\\u2103-\\u2106\\u2108\\u2109\\u2114\\u2116-\\u2118\\u211E-\\u2123\\u2125\\u2127\\u2129\\u212E\\u213A\\u213B\\u2140-\\u2144\\u214A-\\u214D\\u214F-\\u215F\\u2189-\\u24B5\\u24EA-\\u2BFF\\u2C2F\\u2C5F\\u2CE5-\\u2CEA\\u2CF4-\\u2CFF\\u2D26\\u2D28-\\u2D2C\\u2D2E\\u2D2F\\u2D68-\\u2D6E\\u2D70-\\u2D7E\\u2D97-\\u2D9F\\u2DA7\\u2DAF\\u2DB7\\u2DBF\\u2DC7\\u2DCF\\u2DD7\\u2DDF\\u2E00-\\u2E2E\\u2E30-\\u3004\\u3008-\\u3020\\u3030\\u3036\\u3037\\u303D-\\u3040\\u3097\\u3098\\u309B\\u309C\\u30A0\\u30FB\\u3100-\\u3104\\u3130\\u318F-\\u319F\\u31C0-\\u31EF\\u3200-\\u33FF\\u4DC0-\\u4DFF\\u9FFD-\\u9FFF\\uA48D-\\uA4CF\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA62C-\\uA63F\\uA673\\uA67E\\uA6F2-\\uA716\\uA720\\uA721\\uA789\\uA78A\\uA7C0\\uA7C1\\uA7CB-\\uA7F4\\uA828-\\uA82B\\uA82D-\\uA83F\\uA874-\\uA87F\\uA8C6-\\uA8CF\\uA8DA-\\uA8DF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA954-\\uA95F\\uA97D-\\uA97F\\uA9C1-\\uA9CE\\uA9DA-\\uA9DF\\uA9FF\\uAA37-\\uAA3F\\uAA4E\\uAA4F\\uAA5A-\\uAA5F\\uAA77-\\uAA79\\uAAC3-\\uAADA\\uAADE\\uAADF\\uAAF0\\uAAF1\\uAAF7-\\uAB00\\uAB07\\uAB08\\uAB0F\\uAB10\\uAB17-\\uAB1F\\uAB27\\uAB2F\\uAB5B\\uAB6A-\\uAB6F\\uABEB\\uABEE\\uABEF\\uABFA-\\uABFF\\uD7A4-\\uD7AF\\uD7C7-\\uD7CA\\uD7FC-\\uD7FF\\uE000-\\uF8FF\\uFA6E\\uFA6F\\uFADA-\\uFAFF\\uFB07-\\uFB12\\uFB18-\\uFB1C\\uFB29\\uFB37\\uFB3D\\uFB3F\\uFB42\\uFB45\\uFBB2-\\uFBD2\\uFD3E-\\uFD4F\\uFD90\\uFD91\\uFDC8-\\uFDEF\\uFDFC-\\uFDFF\\uFE10-\\uFE1F\\uFE30-\\uFE32\\uFE35-\\uFE4C\\uFE50-\\uFE6F\\uFE75\\uFEFD-\\uFF0F\\uFF1A-\\uFF20\\uFF3B-\\uFF3E\\uFF40\\uFF5B-\\uFF65\\uFFBF-\\uFFC1\\uFFC8\\uFFC9\\uFFD0\\uFFD1\\uFFD8\\uFFD9\\uFFDD-\\uFFFF]|\\uD800[\\uDC0C\\uDC27\\uDC3B\\uDC3E\\uDC4E\\uDC4F\\uDC5E-\\uDC7F\\uDCFB-\\uDD3F\\uDD75-\\uDDFC\\uDDFE-\\uDE7F\\uDE9D-\\uDE9F\\uDED1-\\uDEDF\\uDEE1-\\uDEFF\\uDF20-\\uDF2C\\uDF4B-\\uDF4F\\uDF7B-\\uDF7F\\uDF9E\\uDF9F\\uDFC4-\\uDFC7\\uDFD0\\uDFD6-\\uDFFF]|\\uD801[\\uDC9E\\uDC9F\\uDCAA-\\uDCAF\\uDCD4-\\uDCD7\\uDCFC-\\uDCFF\\uDD28-\\uDD2F\\uDD64-\\uDDFF\\uDF37-\\uDF3F\\uDF56-\\uDF5F\\uDF68-\\uDFFF]|\\uD802[\\uDC06\\uDC07\\uDC09\\uDC36\\uDC39-\\uDC3B\\uDC3D\\uDC3E\\uDC56-\\uDC5F\\uDC77-\\uDC7F\\uDC9F-\\uDCDF\\uDCF3\\uDCF6-\\uDCFF\\uDD16-\\uDD1F\\uDD3A-\\uDD7F\\uDDB8-\\uDDBD\\uDDC0-\\uDDFF\\uDE04\\uDE07-\\uDE0B\\uDE14\\uDE18\\uDE36\\uDE37\\uDE3B-\\uDE3E\\uDE40-\\uDE5F\\uDE7D-\\uDE7F\\uDE9D-\\uDEBF\\uDEC8\\uDEE7-\\uDEFF\\uDF36-\\uDF3F\\uDF56-\\uDF5F\\uDF73-\\uDF7F\\uDF92-\\uDFFF]|\\uD803[\\uDC49-\\uDC7F\\uDCB3-\\uDCBF\\uDCF3-\\uDCFF\\uDD28-\\uDD2F\\uDD3A-\\uDE7F\\uDEAA\\uDEAD-\\uDEAF\\uDEB2-\\uDEFF\\uDF1D-\\uDF26\\uDF28-\\uDF2F\\uDF51-\\uDFAF\\uDFC5-\\uDFDF\\uDFF7-\\uDFFF]|\\uD804[\\uDC47-\\uDC65\\uDC70-\\uDC7E\\uDCBB-\\uDCCF\\uDCE9-\\uDCEF\\uDCFA-\\uDCFF\\uDD35\\uDD40-\\uDD43\\uDD48-\\uDD4F\\uDD74\\uDD75\\uDD77-\\uDD7F\\uDDC5-\\uDDC8\\uDDCD\\uDDDB\\uDDDD-\\uDDFF\\uDE12\\uDE38-\\uDE3D\\uDE3F-\\uDE7F\\uDE87\\uDE89\\uDE8E\\uDE9E\\uDEA9-\\uDEAF\\uDEEB-\\uDEEF\\uDEFA-\\uDEFF\\uDF04\\uDF0D\\uDF0E\\uDF11\\uDF12\\uDF29\\uDF31\\uDF34\\uDF3A\\uDF45\\uDF46\\uDF49\\uDF4A\\uDF4E\\uDF4F\\uDF51-\\uDF56\\uDF58-\\uDF5C\\uDF64\\uDF65\\uDF6D-\\uDF6F\\uDF75-\\uDFFF]|\\uD805[\\uDC4B-\\uDC4F\\uDC5A-\\uDC5D\\uDC62-\\uDC7F\\uDCC6\\uDCC8-\\uDCCF\\uDCDA-\\uDD7F\\uDDB6\\uDDB7\\uDDC1-\\uDDD7\\uDDDE-\\uDDFF\\uDE41-\\uDE43\\uDE45-\\uDE4F\\uDE5A-\\uDE7F\\uDEB9-\\uDEBF\\uDECA-\\uDEFF\\uDF1B\\uDF1C\\uDF2C-\\uDF2F\\uDF3A-\\uDFFF]|\\uD806[\\uDC3B-\\uDC9F\\uDCEA-\\uDCFE\\uDD07\\uDD08\\uDD0A\\uDD0B\\uDD14\\uDD17\\uDD36\\uDD39\\uDD3A\\uDD44-\\uDD4F\\uDD5A-\\uDD9F\\uDDA8\\uDDA9\\uDDD8\\uDDD9\\uDDE2\\uDDE5-\\uDDFF\\uDE3F-\\uDE46\\uDE48-\\uDE4F\\uDE9A-\\uDE9C\\uDE9E-\\uDEBF\\uDEF9-\\uDFFF]|\\uD807[\\uDC09\\uDC37\\uDC41-\\uDC4F\\uDC5A-\\uDC71\\uDC90\\uDC91\\uDCA8\\uDCB7-\\uDCFF\\uDD07\\uDD0A\\uDD37-\\uDD39\\uDD3B\\uDD3E\\uDD48-\\uDD4F\\uDD5A-\\uDD5F\\uDD66\\uDD69\\uDD8F\\uDD92\\uDD99-\\uDD9F\\uDDAA-\\uDEDF\\uDEF7-\\uDFAF\\uDFB1-\\uDFFF]|\\uD808[\\uDF9A-\\uDFFF]|\\uD809[\\uDC6F-\\uDC7F\\uDD44-\\uDFFF]|[\\uD80A\\uD80B\\uD80E-\\uD810\\uD812-\\uD819\\uD824-\\uD82B\\uD82D\\uD82E\\uD830-\\uD833\\uD837\\uD839\\uD83D\\uD83F\\uD87B-\\uD87D\\uD87F\\uD885-\\uDB3F\\uDB41-\\uDBFF][\\uDC00-\\uDFFF]|\\uD80D[\\uDC2F-\\uDFFF]|\\uD811[\\uDE47-\\uDFFF]|\\uD81A[\\uDE39-\\uDE3F\\uDE5F\\uDE6A-\\uDECF\\uDEEE\\uDEEF\\uDEF5-\\uDEFF\\uDF37-\\uDF3F\\uDF44-\\uDF4F\\uDF5A-\\uDF62\\uDF78-\\uDF7C\\uDF90-\\uDFFF]|\\uD81B[\\uDC00-\\uDE3F\\uDE80-\\uDEFF\\uDF4B-\\uDF4E\\uDF88-\\uDF8E\\uDFA0-\\uDFDF\\uDFE2\\uDFE5-\\uDFEF\\uDFF2-\\uDFFF]|\\uD821[\\uDFF8-\\uDFFF]|\\uD823[\\uDCD6-\\uDCFF\\uDD09-\\uDFFF]|\\uD82C[\\uDD1F-\\uDD4F\\uDD53-\\uDD63\\uDD68-\\uDD6F\\uDEFC-\\uDFFF]|\\uD82F[\\uDC6B-\\uDC6F\\uDC7D-\\uDC7F\\uDC89-\\uDC8F\\uDC9A-\\uDC9C\\uDC9F-\\uDFFF]|\\uD834[\\uDC00-\\uDD64\\uDD6A-\\uDD6C\\uDD73-\\uDD7A\\uDD83\\uDD84\\uDD8C-\\uDDA9\\uDDAE-\\uDE41\\uDE45-\\uDFFF]|\\uD835[\\uDC55\\uDC9D\\uDCA0\\uDCA1\\uDCA3\\uDCA4\\uDCA7\\uDCA8\\uDCAD\\uDCBA\\uDCBC\\uDCC4\\uDD06\\uDD0B\\uDD0C\\uDD15\\uDD1D\\uDD3A\\uDD3F\\uDD45\\uDD47-\\uDD49\\uDD51\\uDEA6\\uDEA7\\uDEC1\\uDEDB\\uDEFB\\uDF15\\uDF35\\uDF4F\\uDF6F\\uDF89\\uDFA9\\uDFC3\\uDFCC\\uDFCD]|\\uD836[\\uDC00-\\uDDFF\\uDE37-\\uDE3A\\uDE6D-\\uDE74\\uDE76-\\uDE83\\uDE85-\\uDE9A\\uDEA0\\uDEB0-\\uDFFF]|\\uD838[\\uDC07\\uDC19\\uDC1A\\uDC22\\uDC25\\uDC2B-\\uDCFF\\uDD2D-\\uDD2F\\uDD3E\\uDD3F\\uDD4A-\\uDD4D\\uDD4F-\\uDEBF\\uDEFA-\\uDFFF]|\\uD83A[\\uDCC5-\\uDCCF\\uDCD7-\\uDCFF\\uDD4C-\\uDD4F\\uDD5A-\\uDFFF]|\\uD83B[\\uDC00-\\uDDFF\\uDE04\\uDE20\\uDE23\\uDE25\\uDE26\\uDE28\\uDE33\\uDE38\\uDE3A\\uDE3C-\\uDE41\\uDE43-\\uDE46\\uDE48\\uDE4A\\uDE4C\\uDE50\\uDE53\\uDE55\\uDE56\\uDE58\\uDE5A\\uDE5C\\uDE5E\\uDE60\\uDE63\\uDE65\\uDE66\\uDE6B\\uDE73\\uDE78\\uDE7D\\uDE7F\\uDE8A\\uDE9C-\\uDEA0\\uDEA4\\uDEAA\\uDEBC-\\uDFFF]|\\uD83C[\\uDC00-\\uDD2F\\uDD4A-\\uDD4F\\uDD6A-\\uDD6F\\uDD8A-\\uDFFF]|\\uD83E[\\uDC00-\\uDFEF\\uDFFA-\\uDFFF]|\\uD869[\\uDEDE-\\uDEFF]|\\uD86D[\\uDF35-\\uDF3F]|\\uD86E[\\uDC1E\\uDC1F]|\\uD873[\\uDEA2-\\uDEAF]|\\uD87A[\\uDFE1-\\uDFFF]|\\uD87E[\\uDE1E-\\uDFFF]|\\uD884[\\uDF4B-\\uDFFF]|\\uDB40[\\uDC00-\\uDCFF\\uDDF0-\\uDFFF]/g\n", "const regex = require('./regex.js')\n\nmodule.exports = BananaSlug\n\nconst own = Object.hasOwnProperty\n\nfunction BananaSlug () {\n  const self = this\n\n  if (!(self instanceof BananaSlug)) return new BananaSlug()\n\n  self.reset()\n}\n\n/**\n * Generate a unique slug.\n * @param  {string} value String of text to slugify\n * @param  {boolean} [false] Keep the current case, otherwise make all lowercase\n * @return {string}       A unique slug string\n */\nBananaSlug.prototype.slug = function (value, maintainCase) {\n  const self = this\n  let slug = slugger(value, maintainCase === true)\n  const originalSlug = slug\n\n  while (own.call(self.occurrences, slug)) {\n    self.occurrences[originalSlug]++\n    slug = originalSlug + '-' + self.occurrences[originalSlug]\n  }\n\n  self.occurrences[slug] = 0\n\n  return slug\n}\n\n/**\n * Reset - Forget all previous slugs\n * @return void\n */\nBananaSlug.prototype.reset = function () {\n  this.occurrences = Object.create(null)\n}\n\nfunction slugger (string, maintainCase) {\n  if (typeof string !== 'string') return ''\n  if (!maintainCase) string = string.toLowerCase()\n  return string.replace(regex, '').replace(/ /g, '-')\n}\n\nBananaSlug.slug = slugger\n", "'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n", "\"use strict\";\n/// <reference lib=\"es2018\"/>\n/// <reference lib=\"dom\"/>\n/// <reference types=\"node\"/>\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst typedArrayTypeNames = [\n    'Int8Array',\n    'Uint8Array',\n    'Uint8ClampedArray',\n    'Int16Array',\n    'Uint16Array',\n    'Int32Array',\n    'Uint32Array',\n    'Float32Array',\n    'Float64Array',\n    'BigInt64Array',\n    'BigUint64Array'\n];\nfunction isTypedArrayName(name) {\n    return typedArrayTypeNames.includes(name);\n}\nconst objectTypeNames = [\n    'Function',\n    'Generator',\n    'AsyncGenerator',\n    'GeneratorFunction',\n    'AsyncGeneratorFunction',\n    'AsyncFunction',\n    'Observable',\n    'Array',\n    'Buffer',\n    'Object',\n    'RegExp',\n    'Date',\n    'Error',\n    'Map',\n    'Set',\n    'WeakMap',\n    'WeakSet',\n    'ArrayBuffer',\n    'SharedArrayBuffer',\n    'DataView',\n    'Promise',\n    'URL',\n    'HTMLElement',\n    ...typedArrayTypeNames\n];\nfunction isObjectTypeName(name) {\n    return objectTypeNames.includes(name);\n}\nconst primitiveTypeNames = [\n    'null',\n    'undefined',\n    'string',\n    'number',\n    'bigint',\n    'boolean',\n    'symbol'\n];\nfunction isPrimitiveTypeName(name) {\n    return primitiveTypeNames.includes(name);\n}\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction isOfType(type) {\n    return (value) => typeof value === type;\n}\nconst { toString } = Object.prototype;\nconst getObjectType = (value) => {\n    const objectTypeName = toString.call(value).slice(8, -1);\n    if (/HTML\\w+Element/.test(objectTypeName) && is.domElement(value)) {\n        return 'HTMLElement';\n    }\n    if (isObjectTypeName(objectTypeName)) {\n        return objectTypeName;\n    }\n    return undefined;\n};\nconst isObjectOfType = (type) => (value) => getObjectType(value) === type;\nfunction is(value) {\n    if (value === null) {\n        return 'null';\n    }\n    switch (typeof value) {\n        case 'undefined':\n            return 'undefined';\n        case 'string':\n            return 'string';\n        case 'number':\n            return 'number';\n        case 'boolean':\n            return 'boolean';\n        case 'function':\n            return 'Function';\n        case 'bigint':\n            return 'bigint';\n        case 'symbol':\n            return 'symbol';\n        default:\n    }\n    if (is.observable(value)) {\n        return 'Observable';\n    }\n    if (is.array(value)) {\n        return 'Array';\n    }\n    if (is.buffer(value)) {\n        return 'Buffer';\n    }\n    const tagType = getObjectType(value);\n    if (tagType) {\n        return tagType;\n    }\n    if (value instanceof String || value instanceof Boolean || value instanceof Number) {\n        throw new TypeError('Please don\\'t use object wrappers for primitive types');\n    }\n    return 'Object';\n}\nis.undefined = isOfType('undefined');\nis.string = isOfType('string');\nconst isNumberType = isOfType('number');\nis.number = (value) => isNumberType(value) && !is.nan(value);\nis.bigint = isOfType('bigint');\n// eslint-disable-next-line @typescript-eslint/ban-types\nis.function_ = isOfType('function');\nis.null_ = (value) => value === null;\nis.class_ = (value) => is.function_(value) && value.toString().startsWith('class ');\nis.boolean = (value) => value === true || value === false;\nis.symbol = isOfType('symbol');\nis.numericString = (value) => is.string(value) && !is.emptyStringOrWhitespace(value) && !Number.isNaN(Number(value));\nis.array = (value, assertion) => {\n    if (!Array.isArray(value)) {\n        return false;\n    }\n    if (!is.function_(assertion)) {\n        return true;\n    }\n    return value.every(assertion);\n};\nis.buffer = (value) => { var _a, _b, _c, _d; return (_d = (_c = (_b = (_a = value) === null || _a === void 0 ? void 0 : _a.constructor) === null || _b === void 0 ? void 0 : _b.isBuffer) === null || _c === void 0 ? void 0 : _c.call(_b, value)) !== null && _d !== void 0 ? _d : false; };\nis.nullOrUndefined = (value) => is.null_(value) || is.undefined(value);\nis.object = (value) => !is.null_(value) && (typeof value === 'object' || is.function_(value));\nis.iterable = (value) => { var _a; return is.function_((_a = value) === null || _a === void 0 ? void 0 : _a[Symbol.iterator]); };\nis.asyncIterable = (value) => { var _a; return is.function_((_a = value) === null || _a === void 0 ? void 0 : _a[Symbol.asyncIterator]); };\nis.generator = (value) => is.iterable(value) && is.function_(value.next) && is.function_(value.throw);\nis.asyncGenerator = (value) => is.asyncIterable(value) && is.function_(value.next) && is.function_(value.throw);\nis.nativePromise = (value) => isObjectOfType('Promise')(value);\nconst hasPromiseAPI = (value) => {\n    var _a, _b;\n    return is.function_((_a = value) === null || _a === void 0 ? void 0 : _a.then) &&\n        is.function_((_b = value) === null || _b === void 0 ? void 0 : _b.catch);\n};\nis.promise = (value) => is.nativePromise(value) || hasPromiseAPI(value);\nis.generatorFunction = isObjectOfType('GeneratorFunction');\nis.asyncGeneratorFunction = (value) => getObjectType(value) === 'AsyncGeneratorFunction';\nis.asyncFunction = (value) => getObjectType(value) === 'AsyncFunction';\n// eslint-disable-next-line no-prototype-builtins, @typescript-eslint/ban-types\nis.boundFunction = (value) => is.function_(value) && !value.hasOwnProperty('prototype');\nis.regExp = isObjectOfType('RegExp');\nis.date = isObjectOfType('Date');\nis.error = isObjectOfType('Error');\nis.map = (value) => isObjectOfType('Map')(value);\nis.set = (value) => isObjectOfType('Set')(value);\nis.weakMap = (value) => isObjectOfType('WeakMap')(value);\nis.weakSet = (value) => isObjectOfType('WeakSet')(value);\nis.int8Array = isObjectOfType('Int8Array');\nis.uint8Array = isObjectOfType('Uint8Array');\nis.uint8ClampedArray = isObjectOfType('Uint8ClampedArray');\nis.int16Array = isObjectOfType('Int16Array');\nis.uint16Array = isObjectOfType('Uint16Array');\nis.int32Array = isObjectOfType('Int32Array');\nis.uint32Array = isObjectOfType('Uint32Array');\nis.float32Array = isObjectOfType('Float32Array');\nis.float64Array = isObjectOfType('Float64Array');\nis.bigInt64Array = isObjectOfType('BigInt64Array');\nis.bigUint64Array = isObjectOfType('BigUint64Array');\nis.arrayBuffer = isObjectOfType('ArrayBuffer');\nis.sharedArrayBuffer = isObjectOfType('SharedArrayBuffer');\nis.dataView = isObjectOfType('DataView');\nis.directInstanceOf = (instance, class_) => Object.getPrototypeOf(instance) === class_.prototype;\nis.urlInstance = (value) => isObjectOfType('URL')(value);\nis.urlString = (value) => {\n    if (!is.string(value)) {\n        return false;\n    }\n    try {\n        new URL(value); // eslint-disable-line no-new\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n};\n// TODO: Use the `not` operator with a type guard here when it's available.\n// Example: `is.truthy = (value: unknown): value is (not false | not 0 | not '' | not undefined | not null) => Boolean(value);`\nis.truthy = (value) => Boolean(value);\n// Example: `is.falsy = (value: unknown): value is (not true | 0 | '' | undefined | null) => Boolean(value);`\nis.falsy = (value) => !value;\nis.nan = (value) => Number.isNaN(value);\nis.primitive = (value) => is.null_(value) || isPrimitiveTypeName(typeof value);\nis.integer = (value) => Number.isInteger(value);\nis.safeInteger = (value) => Number.isSafeInteger(value);\nis.plainObject = (value) => {\n    // From: https://github.com/sindresorhus/is-plain-obj/blob/master/index.js\n    if (toString.call(value) !== '[object Object]') {\n        return false;\n    }\n    const prototype = Object.getPrototypeOf(value);\n    return prototype === null || prototype === Object.getPrototypeOf({});\n};\nis.typedArray = (value) => isTypedArrayName(getObjectType(value));\nconst isValidLength = (value) => is.safeInteger(value) && value >= 0;\nis.arrayLike = (value) => !is.nullOrUndefined(value) && !is.function_(value) && isValidLength(value.length);\nis.inRange = (value, range) => {\n    if (is.number(range)) {\n        return value >= Math.min(0, range) && value <= Math.max(range, 0);\n    }\n    if (is.array(range) && range.length === 2) {\n        return value >= Math.min(...range) && value <= Math.max(...range);\n    }\n    throw new TypeError(`Invalid range: ${JSON.stringify(range)}`);\n};\nconst NODE_TYPE_ELEMENT = 1;\nconst DOM_PROPERTIES_TO_CHECK = [\n    'innerHTML',\n    'ownerDocument',\n    'style',\n    'attributes',\n    'nodeValue'\n];\nis.domElement = (value) => {\n    return is.object(value) &&\n        value.nodeType === NODE_TYPE_ELEMENT &&\n        is.string(value.nodeName) &&\n        !is.plainObject(value) &&\n        DOM_PROPERTIES_TO_CHECK.every(property => property in value);\n};\nis.observable = (value) => {\n    var _a, _b, _c, _d;\n    if (!value) {\n        return false;\n    }\n    // eslint-disable-next-line no-use-extend-native/no-use-extend-native\n    if (value === ((_b = (_a = value)[Symbol.observable]) === null || _b === void 0 ? void 0 : _b.call(_a))) {\n        return true;\n    }\n    if (value === ((_d = (_c = value)['@@observable']) === null || _d === void 0 ? void 0 : _d.call(_c))) {\n        return true;\n    }\n    return false;\n};\nis.nodeStream = (value) => is.object(value) && is.function_(value.pipe) && !is.observable(value);\nis.infinite = (value) => value === Infinity || value === -Infinity;\nconst isAbsoluteMod2 = (remainder) => (value) => is.integer(value) && Math.abs(value % 2) === remainder;\nis.evenInteger = isAbsoluteMod2(0);\nis.oddInteger = isAbsoluteMod2(1);\nis.emptyArray = (value) => is.array(value) && value.length === 0;\nis.nonEmptyArray = (value) => is.array(value) && value.length > 0;\nis.emptyString = (value) => is.string(value) && value.length === 0;\n// TODO: Use `not ''` when the `not` operator is available.\nis.nonEmptyString = (value) => is.string(value) && value.length > 0;\nconst isWhiteSpaceString = (value) => is.string(value) && !/\\S/.test(value);\nis.emptyStringOrWhitespace = (value) => is.emptyString(value) || isWhiteSpaceString(value);\nis.emptyObject = (value) => is.object(value) && !is.map(value) && !is.set(value) && Object.keys(value).length === 0;\n// TODO: Use `not` operator here to remove `Map` and `Set` from type guard:\n// - https://github.com/Microsoft/TypeScript/pull/29317\nis.nonEmptyObject = (value) => is.object(value) && !is.map(value) && !is.set(value) && Object.keys(value).length > 0;\nis.emptySet = (value) => is.set(value) && value.size === 0;\nis.nonEmptySet = (value) => is.set(value) && value.size > 0;\nis.emptyMap = (value) => is.map(value) && value.size === 0;\nis.nonEmptyMap = (value) => is.map(value) && value.size > 0;\nconst predicateOnArray = (method, predicate, values) => {\n    if (!is.function_(predicate)) {\n        throw new TypeError(`Invalid predicate: ${JSON.stringify(predicate)}`);\n    }\n    if (values.length === 0) {\n        throw new TypeError('Invalid number of values');\n    }\n    return method.call(values, predicate);\n};\nis.any = (predicate, ...values) => {\n    const predicates = is.array(predicate) ? predicate : [predicate];\n    return predicates.some(singlePredicate => predicateOnArray(Array.prototype.some, singlePredicate, values));\n};\nis.all = (predicate, ...values) => predicateOnArray(Array.prototype.every, predicate, values);\nconst assertType = (condition, description, value) => {\n    if (!condition) {\n        throw new TypeError(`Expected value which is \\`${description}\\`, received value of type \\`${is(value)}\\`.`);\n    }\n};\nexports.assert = {\n    // Unknowns.\n    undefined: (value) => assertType(is.undefined(value), 'undefined', value),\n    string: (value) => assertType(is.string(value), 'string', value),\n    number: (value) => assertType(is.number(value), 'number', value),\n    bigint: (value) => assertType(is.bigint(value), 'bigint', value),\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    function_: (value) => assertType(is.function_(value), 'Function', value),\n    null_: (value) => assertType(is.null_(value), 'null', value),\n    class_: (value) => assertType(is.class_(value), \"Class\" /* class_ */, value),\n    boolean: (value) => assertType(is.boolean(value), 'boolean', value),\n    symbol: (value) => assertType(is.symbol(value), 'symbol', value),\n    numericString: (value) => assertType(is.numericString(value), \"string with a number\" /* numericString */, value),\n    array: (value, assertion) => {\n        const assert = assertType;\n        assert(is.array(value), 'Array', value);\n        if (assertion) {\n            value.forEach(assertion);\n        }\n    },\n    buffer: (value) => assertType(is.buffer(value), 'Buffer', value),\n    nullOrUndefined: (value) => assertType(is.nullOrUndefined(value), \"null or undefined\" /* nullOrUndefined */, value),\n    object: (value) => assertType(is.object(value), 'Object', value),\n    iterable: (value) => assertType(is.iterable(value), \"Iterable\" /* iterable */, value),\n    asyncIterable: (value) => assertType(is.asyncIterable(value), \"AsyncIterable\" /* asyncIterable */, value),\n    generator: (value) => assertType(is.generator(value), 'Generator', value),\n    asyncGenerator: (value) => assertType(is.asyncGenerator(value), 'AsyncGenerator', value),\n    nativePromise: (value) => assertType(is.nativePromise(value), \"native Promise\" /* nativePromise */, value),\n    promise: (value) => assertType(is.promise(value), 'Promise', value),\n    generatorFunction: (value) => assertType(is.generatorFunction(value), 'GeneratorFunction', value),\n    asyncGeneratorFunction: (value) => assertType(is.asyncGeneratorFunction(value), 'AsyncGeneratorFunction', value),\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    asyncFunction: (value) => assertType(is.asyncFunction(value), 'AsyncFunction', value),\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    boundFunction: (value) => assertType(is.boundFunction(value), 'Function', value),\n    regExp: (value) => assertType(is.regExp(value), 'RegExp', value),\n    date: (value) => assertType(is.date(value), 'Date', value),\n    error: (value) => assertType(is.error(value), 'Error', value),\n    map: (value) => assertType(is.map(value), 'Map', value),\n    set: (value) => assertType(is.set(value), 'Set', value),\n    weakMap: (value) => assertType(is.weakMap(value), 'WeakMap', value),\n    weakSet: (value) => assertType(is.weakSet(value), 'WeakSet', value),\n    int8Array: (value) => assertType(is.int8Array(value), 'Int8Array', value),\n    uint8Array: (value) => assertType(is.uint8Array(value), 'Uint8Array', value),\n    uint8ClampedArray: (value) => assertType(is.uint8ClampedArray(value), 'Uint8ClampedArray', value),\n    int16Array: (value) => assertType(is.int16Array(value), 'Int16Array', value),\n    uint16Array: (value) => assertType(is.uint16Array(value), 'Uint16Array', value),\n    int32Array: (value) => assertType(is.int32Array(value), 'Int32Array', value),\n    uint32Array: (value) => assertType(is.uint32Array(value), 'Uint32Array', value),\n    float32Array: (value) => assertType(is.float32Array(value), 'Float32Array', value),\n    float64Array: (value) => assertType(is.float64Array(value), 'Float64Array', value),\n    bigInt64Array: (value) => assertType(is.bigInt64Array(value), 'BigInt64Array', value),\n    bigUint64Array: (value) => assertType(is.bigUint64Array(value), 'BigUint64Array', value),\n    arrayBuffer: (value) => assertType(is.arrayBuffer(value), 'ArrayBuffer', value),\n    sharedArrayBuffer: (value) => assertType(is.sharedArrayBuffer(value), 'SharedArrayBuffer', value),\n    dataView: (value) => assertType(is.dataView(value), 'DataView', value),\n    urlInstance: (value) => assertType(is.urlInstance(value), 'URL', value),\n    urlString: (value) => assertType(is.urlString(value), \"string with a URL\" /* urlString */, value),\n    truthy: (value) => assertType(is.truthy(value), \"truthy\" /* truthy */, value),\n    falsy: (value) => assertType(is.falsy(value), \"falsy\" /* falsy */, value),\n    nan: (value) => assertType(is.nan(value), \"NaN\" /* nan */, value),\n    primitive: (value) => assertType(is.primitive(value), \"primitive\" /* primitive */, value),\n    integer: (value) => assertType(is.integer(value), \"integer\" /* integer */, value),\n    safeInteger: (value) => assertType(is.safeInteger(value), \"integer\" /* safeInteger */, value),\n    plainObject: (value) => assertType(is.plainObject(value), \"plain object\" /* plainObject */, value),\n    typedArray: (value) => assertType(is.typedArray(value), \"TypedArray\" /* typedArray */, value),\n    arrayLike: (value) => assertType(is.arrayLike(value), \"array-like\" /* arrayLike */, value),\n    domElement: (value) => assertType(is.domElement(value), \"HTMLElement\" /* domElement */, value),\n    observable: (value) => assertType(is.observable(value), 'Observable', value),\n    nodeStream: (value) => assertType(is.nodeStream(value), \"Node.js Stream\" /* nodeStream */, value),\n    infinite: (value) => assertType(is.infinite(value), \"infinite number\" /* infinite */, value),\n    emptyArray: (value) => assertType(is.emptyArray(value), \"empty array\" /* emptyArray */, value),\n    nonEmptyArray: (value) => assertType(is.nonEmptyArray(value), \"non-empty array\" /* nonEmptyArray */, value),\n    emptyString: (value) => assertType(is.emptyString(value), \"empty string\" /* emptyString */, value),\n    nonEmptyString: (value) => assertType(is.nonEmptyString(value), \"non-empty string\" /* nonEmptyString */, value),\n    emptyStringOrWhitespace: (value) => assertType(is.emptyStringOrWhitespace(value), \"empty string or whitespace\" /* emptyStringOrWhitespace */, value),\n    emptyObject: (value) => assertType(is.emptyObject(value), \"empty object\" /* emptyObject */, value),\n    nonEmptyObject: (value) => assertType(is.nonEmptyObject(value), \"non-empty object\" /* nonEmptyObject */, value),\n    emptySet: (value) => assertType(is.emptySet(value), \"empty set\" /* emptySet */, value),\n    nonEmptySet: (value) => assertType(is.nonEmptySet(value), \"non-empty set\" /* nonEmptySet */, value),\n    emptyMap: (value) => assertType(is.emptyMap(value), \"empty map\" /* emptyMap */, value),\n    nonEmptyMap: (value) => assertType(is.nonEmptyMap(value), \"non-empty map\" /* nonEmptyMap */, value),\n    // Numbers.\n    evenInteger: (value) => assertType(is.evenInteger(value), \"even integer\" /* evenInteger */, value),\n    oddInteger: (value) => assertType(is.oddInteger(value), \"odd integer\" /* oddInteger */, value),\n    // Two arguments.\n    directInstanceOf: (instance, class_) => assertType(is.directInstanceOf(instance, class_), \"T\" /* directInstanceOf */, instance),\n    inRange: (value, range) => assertType(is.inRange(value, range), \"in range\" /* inRange */, value),\n    // Variadic functions.\n    any: (predicate, ...values) => assertType(is.any(predicate, ...values), \"predicate returns truthy for any value\" /* any */, values),\n    all: (predicate, ...values) => assertType(is.all(predicate, ...values), \"predicate returns truthy for all values\" /* all */, values)\n};\n// Some few keywords are reserved, but we'll populate them for Node.js users\n// See https://github.com/Microsoft/TypeScript/issues/2536\nObject.defineProperties(is, {\n    class: {\n        value: is.class_\n    },\n    function: {\n        value: is.function_\n    },\n    null: {\n        value: is.null_\n    }\n});\nObject.defineProperties(exports.assert, {\n    class: {\n        value: exports.assert.class_\n    },\n    function: {\n        value: exports.assert.function_\n    },\n    null: {\n        value: exports.assert.null_\n    }\n});\nexports.default = is;\n// For CommonJS default export support\nmodule.exports = is;\nmodule.exports.default = is;\nmodule.exports.assert = exports.assert;\n", "{\n  \"grinning\": {\n    \"keywords\": [\"face\", \"smile\", \"happy\", \"joy\", \":D\", \"grin\"],\n    \"char\": \"\uD83D\uDE00\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"grimacing\": {\n    \"keywords\": [\"face\", \"grimace\", \"teeth\"],\n    \"char\": \"\uD83D\uDE2C\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"grin\": {\n    \"keywords\": [\"face\", \"happy\", \"smile\", \"joy\", \"kawaii\"],\n    \"char\": \"\uD83D\uDE01\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"joy\": {\n    \"keywords\": [\"face\", \"cry\", \"tears\", \"weep\", \"happy\", \"happytears\", \"haha\"],\n    \"char\": \"\uD83D\uDE02\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"rofl\": {\n    \"keywords\": [\"face\", \"rolling\", \"floor\", \"laughing\", \"lol\", \"haha\"],\n    \"char\": \"\uD83E\uDD23\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"partying\": {\n    \"keywords\": [\"face\", \"celebration\", \"woohoo\"],\n    \"char\": \"\uD83E\uDD73\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"smiley\": {\n    \"keywords\": [\"face\", \"happy\", \"joy\", \"haha\", \":D\", \":)\", \"smile\", \"funny\"],\n    \"char\": \"\uD83D\uDE03\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"smile\": {\n    \"keywords\": [\"face\", \"happy\", \"joy\", \"funny\", \"haha\", \"laugh\", \"like\", \":D\", \":)\"],\n    \"char\": \"\uD83D\uDE04\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"sweat_smile\": {\n    \"keywords\": [\"face\", \"hot\", \"happy\", \"laugh\", \"sweat\", \"smile\", \"relief\"],\n    \"char\": \"\uD83D\uDE05\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"laughing\": {\n    \"keywords\": [\"happy\", \"joy\", \"lol\", \"satisfied\", \"haha\", \"face\", \"glad\", \"XD\", \"laugh\"],\n    \"char\": \"\uD83D\uDE06\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"innocent\": {\n    \"keywords\": [\"face\", \"angel\", \"heaven\", \"halo\"],\n    \"char\": \"\uD83D\uDE07\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"wink\": {\n    \"keywords\": [\"face\", \"happy\", \"mischievous\", \"secret\", \";)\", \"smile\", \"eye\"],\n    \"char\": \"\uD83D\uDE09\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"blush\": {\n    \"keywords\": [\"face\", \"smile\", \"happy\", \"flushed\", \"crush\", \"embarrassed\", \"shy\", \"joy\"],\n    \"char\": \"\uD83D\uDE0A\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"slightly_smiling_face\": {\n    \"keywords\": [\"face\", \"smile\"],\n    \"char\": \"\uD83D\uDE42\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"upside_down_face\": {\n    \"keywords\": [\"face\", \"flipped\", \"silly\", \"smile\"],\n    \"char\": \"\uD83D\uDE43\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"relaxed\": {\n    \"keywords\": [\"face\", \"blush\", \"massage\", \"happiness\"],\n    \"char\": \"\u263A\uFE0F\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"yum\": {\n    \"keywords\": [\"happy\", \"joy\", \"tongue\", \"smile\", \"face\", \"silly\", \"yummy\", \"nom\", \"delicious\", \"savouring\"],\n    \"char\": \"\uD83D\uDE0B\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"relieved\": {\n    \"keywords\": [\"face\", \"relaxed\", \"phew\", \"massage\", \"happiness\"],\n    \"char\": \"\uD83D\uDE0C\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"heart_eyes\": {\n    \"keywords\": [\"face\", \"love\", \"like\", \"affection\", \"valentines\", \"infatuation\", \"crush\", \"heart\"],\n    \"char\": \"\uD83D\uDE0D\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"smiling_face_with_three_hearts\": {\n    \"keywords\": [\"face\", \"love\", \"like\", \"affection\", \"valentines\", \"infatuation\", \"crush\", \"hearts\", \"adore\"],\n    \"char\": \"\uD83E\uDD70\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"kissing_heart\": {\n    \"keywords\": [\"face\", \"love\", \"like\", \"affection\", \"valentines\", \"infatuation\", \"kiss\"],\n    \"char\": \"\uD83D\uDE18\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"kissing\": {\n    \"keywords\": [\"love\", \"like\", \"face\", \"3\", \"valentines\", \"infatuation\", \"kiss\"],\n    \"char\": \"\uD83D\uDE17\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"kissing_smiling_eyes\": {\n    \"keywords\": [\"face\", \"affection\", \"valentines\", \"infatuation\", \"kiss\"],\n    \"char\": \"\uD83D\uDE19\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"kissing_closed_eyes\": {\n    \"keywords\": [\"face\", \"love\", \"like\", \"affection\", \"valentines\", \"infatuation\", \"kiss\"],\n    \"char\": \"\uD83D\uDE1A\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"stuck_out_tongue_winking_eye\": {\n    \"keywords\": [\"face\", \"prank\", \"childish\", \"playful\", \"mischievous\", \"smile\", \"wink\", \"tongue\"],\n    \"char\": \"\uD83D\uDE1C\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"zany\": {\n    \"keywords\": [\"face\", \"goofy\", \"crazy\"],\n    \"char\": \"\uD83E\uDD2A\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"raised_eyebrow\": {\n    \"keywords\": [\"face\", \"distrust\", \"scepticism\", \"disapproval\", \"disbelief\", \"surprise\"],\n    \"char\": \"\uD83E\uDD28\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"monocle\": {\n    \"keywords\": [\"face\", \"stuffy\", \"wealthy\"],\n    \"char\": \"\uD83E\uDDD0\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"stuck_out_tongue_closed_eyes\": {\n    \"keywords\": [\"face\", \"prank\", \"playful\", \"mischievous\", \"smile\", \"tongue\"],\n    \"char\": \"\uD83D\uDE1D\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"stuck_out_tongue\": {\n    \"keywords\": [\"face\", \"prank\", \"childish\", \"playful\", \"mischievous\", \"smile\", \"tongue\"],\n    \"char\": \"\uD83D\uDE1B\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"money_mouth_face\": {\n    \"keywords\": [\"face\", \"rich\", \"dollar\", \"money\"],\n    \"char\": \"\uD83E\uDD11\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"nerd_face\": {\n    \"keywords\": [\"face\", \"nerdy\", \"geek\", \"dork\"],\n    \"char\": \"\uD83E\uDD13\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"sunglasses\": {\n    \"keywords\": [\"face\", \"cool\", \"smile\", \"summer\", \"beach\", \"sunglass\"],\n    \"char\": \"\uD83D\uDE0E\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"star_struck\": {\n    \"keywords\": [\"face\", \"smile\", \"starry\", \"eyes\", \"grinning\"],\n    \"char\": \"\uD83E\uDD29\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"clown_face\": {\n    \"keywords\": [\"face\"],\n    \"char\": \"\uD83E\uDD21\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"cowboy_hat_face\": {\n    \"keywords\": [\"face\", \"cowgirl\", \"hat\"],\n    \"char\": \"\uD83E\uDD20\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"hugs\": {\n    \"keywords\": [\"face\", \"smile\", \"hug\"],\n    \"char\": \"\uD83E\uDD17\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"smirk\": {\n    \"keywords\": [\"face\", \"smile\", \"mean\", \"prank\", \"smug\", \"sarcasm\"],\n    \"char\": \"\uD83D\uDE0F\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"no_mouth\": {\n    \"keywords\": [\"face\", \"hellokitty\"],\n    \"char\": \"\uD83D\uDE36\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"neutral_face\": {\n    \"keywords\": [\"indifference\", \"meh\", \":|\", \"neutral\"],\n    \"char\": \"\uD83D\uDE10\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"expressionless\": {\n    \"keywords\": [\"face\", \"indifferent\", \"-_-\", \"meh\", \"deadpan\"],\n    \"char\": \"\uD83D\uDE11\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"unamused\": {\n    \"keywords\": [\"indifference\", \"bored\", \"straight face\", \"serious\", \"sarcasm\", \"unimpressed\", \"skeptical\", \"dubious\", \"side_eye\"],\n    \"char\": \"\uD83D\uDE12\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"roll_eyes\": {\n    \"keywords\": [\"face\", \"eyeroll\", \"frustrated\"],\n    \"char\": \"\uD83D\uDE44\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"thinking\": {\n    \"keywords\": [\"face\", \"hmmm\", \"think\", \"consider\"],\n    \"char\": \"\uD83E\uDD14\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"lying_face\": {\n    \"keywords\": [\"face\", \"lie\", \"pinocchio\"],\n    \"char\": \"\uD83E\uDD25\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"hand_over_mouth\": {\n    \"keywords\": [\"face\", \"whoops\", \"shock\", \"surprise\"],\n    \"char\": \"\uD83E\uDD2D\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"shushing\": {\n    \"keywords\": [\"face\", \"quiet\", \"shhh\"],\n    \"char\": \"\uD83E\uDD2B\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"symbols_over_mouth\": {\n    \"keywords\": [\"face\", \"swearing\", \"cursing\", \"cussing\", \"profanity\", \"expletive\"],\n    \"char\": \"\uD83E\uDD2C\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"exploding_head\": {\n    \"keywords\": [\"face\", \"shocked\", \"mind\", \"blown\"],\n    \"char\": \"\uD83E\uDD2F\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"flushed\": {\n    \"keywords\": [\"face\", \"blush\", \"shy\", \"flattered\"],\n    \"char\": \"\uD83D\uDE33\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"disappointed\": {\n    \"keywords\": [\"face\", \"sad\", \"upset\", \"depressed\", \":(\"],\n    \"char\": \"\uD83D\uDE1E\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"worried\": {\n    \"keywords\": [\"face\", \"concern\", \"nervous\", \":(\"],\n    \"char\": \"\uD83D\uDE1F\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"angry\": {\n    \"keywords\": [\"mad\", \"face\", \"annoyed\", \"frustrated\"],\n    \"char\": \"\uD83D\uDE20\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"rage\": {\n    \"keywords\": [\"angry\", \"mad\", \"hate\", \"despise\"],\n    \"char\": \"\uD83D\uDE21\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"pensive\": {\n    \"keywords\": [\"face\", \"sad\", \"depressed\", \"upset\"],\n    \"char\": \"\uD83D\uDE14\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"confused\": {\n    \"keywords\": [\"face\", \"indifference\", \"huh\", \"weird\", \"hmmm\", \":/\"],\n    \"char\": \"\uD83D\uDE15\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"slightly_frowning_face\": {\n    \"keywords\": [\"face\", \"frowning\", \"disappointed\", \"sad\", \"upset\"],\n    \"char\": \"\uD83D\uDE41\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"frowning_face\": {\n    \"keywords\": [\"face\", \"sad\", \"upset\", \"frown\"],\n    \"char\": \"\u2639\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"persevere\": {\n    \"keywords\": [\"face\", \"sick\", \"no\", \"upset\", \"oops\"],\n    \"char\": \"\uD83D\uDE23\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"confounded\": {\n    \"keywords\": [\"face\", \"confused\", \"sick\", \"unwell\", \"oops\", \":S\"],\n    \"char\": \"\uD83D\uDE16\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"tired_face\": {\n    \"keywords\": [\"sick\", \"whine\", \"upset\", \"frustrated\"],\n    \"char\": \"\uD83D\uDE2B\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"weary\": {\n    \"keywords\": [\"face\", \"tired\", \"sleepy\", \"sad\", \"frustrated\", \"upset\"],\n    \"char\": \"\uD83D\uDE29\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"pleading\": {\n    \"keywords\": [\"face\", \"begging\", \"mercy\"],\n    \"char\": \"\uD83E\uDD7A\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"triumph\": {\n    \"keywords\": [\"face\", \"gas\", \"phew\", \"proud\", \"pride\"],\n    \"char\": \"\uD83D\uDE24\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"open_mouth\": {\n    \"keywords\": [\"face\", \"surprise\", \"impressed\", \"wow\", \"whoa\", \":O\"],\n    \"char\": \"\uD83D\uDE2E\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"scream\": {\n    \"keywords\": [\"face\", \"munch\", \"scared\", \"omg\"],\n    \"char\": \"\uD83D\uDE31\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"fearful\": {\n    \"keywords\": [\"face\", \"scared\", \"terrified\", \"nervous\", \"oops\", \"huh\"],\n    \"char\": \"\uD83D\uDE28\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"cold_sweat\": {\n    \"keywords\": [\"face\", \"nervous\", \"sweat\"],\n    \"char\": \"\uD83D\uDE30\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"hushed\": {\n    \"keywords\": [\"face\", \"woo\", \"shh\"],\n    \"char\": \"\uD83D\uDE2F\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"frowning\": {\n    \"keywords\": [\"face\", \"aw\", \"what\"],\n    \"char\": \"\uD83D\uDE26\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"anguished\": {\n    \"keywords\": [\"face\", \"stunned\", \"nervous\"],\n    \"char\": \"\uD83D\uDE27\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"cry\": {\n    \"keywords\": [\"face\", \"tears\", \"sad\", \"depressed\", \"upset\", \":'(\"],\n    \"char\": \"\uD83D\uDE22\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"disappointed_relieved\": {\n    \"keywords\": [\"face\", \"phew\", \"sweat\", \"nervous\"],\n    \"char\": \"\uD83D\uDE25\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"drooling_face\": {\n    \"keywords\": [\"face\"],\n    \"char\": \"\uD83E\uDD24\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"sleepy\": {\n    \"keywords\": [\"face\", \"tired\", \"rest\", \"nap\"],\n    \"char\": \"\uD83D\uDE2A\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"sweat\": {\n    \"keywords\": [\"face\", \"hot\", \"sad\", \"tired\", \"exercise\"],\n    \"char\": \"\uD83D\uDE13\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"hot\": {\n    \"keywords\": [\"face\", \"feverish\", \"heat\", \"red\", \"sweating\"],\n    \"char\": \"\uD83E\uDD75\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"cold\": {\n    \"keywords\": [\"face\", \"blue\", \"freezing\", \"frozen\", \"frostbite\", \"icicles\"],\n    \"char\": \"\uD83E\uDD76\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"sob\": {\n    \"keywords\": [\"face\", \"cry\", \"tears\", \"sad\", \"upset\", \"depressed\"],\n    \"char\": \"\uD83D\uDE2D\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"dizzy_face\": {\n    \"keywords\": [\"spent\", \"unconscious\", \"xox\", \"dizzy\"],\n    \"char\": \"\uD83D\uDE35\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"astonished\": {\n    \"keywords\": [\"face\", \"xox\", \"surprised\", \"poisoned\"],\n    \"char\": \"\uD83D\uDE32\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"zipper_mouth_face\": {\n    \"keywords\": [\"face\", \"sealed\", \"zipper\", \"secret\"],\n    \"char\": \"\uD83E\uDD10\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"nauseated_face\": {\n    \"keywords\": [\"face\", \"vomit\", \"gross\", \"green\", \"sick\", \"throw up\", \"ill\"],\n    \"char\": \"\uD83E\uDD22\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"sneezing_face\": {\n    \"keywords\": [\"face\", \"gesundheit\", \"sneeze\", \"sick\", \"allergy\"],\n    \"char\": \"\uD83E\uDD27\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"vomiting\": {\n    \"keywords\": [\"face\", \"sick\"],\n    \"char\": \"\uD83E\uDD2E\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"mask\": {\n    \"keywords\": [\"face\", \"sick\", \"ill\", \"disease\"],\n    \"char\": \"\uD83D\uDE37\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"face_with_thermometer\": {\n    \"keywords\": [\"sick\", \"temperature\", \"thermometer\", \"cold\", \"fever\"],\n    \"char\": \"\uD83E\uDD12\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"face_with_head_bandage\": {\n    \"keywords\": [\"injured\", \"clumsy\", \"bandage\", \"hurt\"],\n    \"char\": \"\uD83E\uDD15\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"woozy\": {\n    \"keywords\": [\"face\", \"dizzy\", \"intoxicated\", \"tipsy\", \"wavy\"],\n    \"char\": \"\uD83E\uDD74\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"sleeping\": {\n    \"keywords\": [\"face\", \"tired\", \"sleepy\", \"night\", \"zzz\"],\n    \"char\": \"\uD83D\uDE34\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"zzz\": {\n    \"keywords\": [\"sleepy\", \"tired\", \"dream\"],\n    \"char\": \"\uD83D\uDCA4\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"poop\": {\n    \"keywords\": [\"hankey\", \"shitface\", \"fail\", \"turd\", \"shit\"],\n    \"char\": \"\uD83D\uDCA9\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"smiling_imp\": {\n    \"keywords\": [\"devil\", \"horns\"],\n    \"char\": \"\uD83D\uDE08\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"imp\": {\n    \"keywords\": [\"devil\", \"angry\", \"horns\"],\n    \"char\": \"\uD83D\uDC7F\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"japanese_ogre\": {\n    \"keywords\": [\"monster\", \"red\", \"mask\", \"halloween\", \"scary\", \"creepy\", \"devil\", \"demon\", \"japanese\", \"ogre\"],\n    \"char\": \"\uD83D\uDC79\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"japanese_goblin\": {\n    \"keywords\": [\"red\", \"evil\", \"mask\", \"monster\", \"scary\", \"creepy\", \"japanese\", \"goblin\"],\n    \"char\": \"\uD83D\uDC7A\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"skull\": {\n    \"keywords\": [\"dead\", \"skeleton\", \"creepy\", \"death\"],\n    \"char\": \"\uD83D\uDC80\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"ghost\": {\n    \"keywords\": [\"halloween\", \"spooky\", \"scary\"],\n    \"char\": \"\uD83D\uDC7B\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"alien\": {\n    \"keywords\": [\"UFO\", \"paul\", \"weird\", \"outer_space\"],\n    \"char\": \"\uD83D\uDC7D\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"robot\": {\n    \"keywords\": [\"computer\", \"machine\", \"bot\"],\n    \"char\": \"\uD83E\uDD16\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"smiley_cat\": {\n    \"keywords\": [\"animal\", \"cats\", \"happy\", \"smile\"],\n    \"char\": \"\uD83D\uDE3A\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"smile_cat\": {\n    \"keywords\": [\"animal\", \"cats\", \"smile\"],\n    \"char\": \"\uD83D\uDE38\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"joy_cat\": {\n    \"keywords\": [\"animal\", \"cats\", \"haha\", \"happy\", \"tears\"],\n    \"char\": \"\uD83D\uDE39\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"heart_eyes_cat\": {\n    \"keywords\": [\"animal\", \"love\", \"like\", \"affection\", \"cats\", \"valentines\", \"heart\"],\n    \"char\": \"\uD83D\uDE3B\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"smirk_cat\": {\n    \"keywords\": [\"animal\", \"cats\", \"smirk\"],\n    \"char\": \"\uD83D\uDE3C\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"kissing_cat\": {\n    \"keywords\": [\"animal\", \"cats\", \"kiss\"],\n    \"char\": \"\uD83D\uDE3D\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"scream_cat\": {\n    \"keywords\": [\"animal\", \"cats\", \"munch\", \"scared\", \"scream\"],\n    \"char\": \"\uD83D\uDE40\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"crying_cat_face\": {\n    \"keywords\": [\"animal\", \"tears\", \"weep\", \"sad\", \"cats\", \"upset\", \"cry\"],\n    \"char\": \"\uD83D\uDE3F\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"pouting_cat\": {\n    \"keywords\": [\"animal\", \"cats\"],\n    \"char\": \"\uD83D\uDE3E\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"palms_up\": {\n    \"keywords\": [\"hands\", \"gesture\", \"cupped\", \"prayer\"],\n    \"char\": \"\uD83E\uDD32\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"raised_hands\": {\n    \"keywords\": [\"gesture\", \"hooray\", \"yea\", \"celebration\", \"hands\"],\n    \"char\": \"\uD83D\uDE4C\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"clap\": {\n    \"keywords\": [\"hands\", \"praise\", \"applause\", \"congrats\", \"yay\"],\n    \"char\": \"\uD83D\uDC4F\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"wave\": {\n    \"keywords\": [\"hands\", \"gesture\", \"goodbye\", \"solong\", \"farewell\", \"hello\", \"hi\", \"palm\"],\n    \"char\": \"\uD83D\uDC4B\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"call_me_hand\": {\n    \"keywords\": [\"hands\", \"gesture\"],\n    \"char\": \"\uD83E\uDD19\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"+1\": {\n    \"keywords\": [\"thumbsup\", \"yes\", \"awesome\", \"good\", \"agree\", \"accept\", \"cool\", \"hand\", \"like\"],\n    \"char\": \"\uD83D\uDC4D\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"-1\": {\n    \"keywords\": [\"thumbsdown\", \"no\", \"dislike\", \"hand\"],\n    \"char\": \"\uD83D\uDC4E\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"facepunch\": {\n    \"keywords\": [\"angry\", \"violence\", \"fist\", \"hit\", \"attack\", \"hand\"],\n    \"char\": \"\uD83D\uDC4A\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"fist\": {\n    \"keywords\": [\"fingers\", \"hand\", \"grasp\"],\n    \"char\": \"\u270A\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"fist_left\": {\n    \"keywords\": [\"hand\", \"fistbump\"],\n    \"char\": \"\uD83E\uDD1B\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"fist_right\": {\n    \"keywords\": [\"hand\", \"fistbump\"],\n    \"char\": \"\uD83E\uDD1C\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"v\": {\n    \"keywords\": [\"fingers\", \"ohyeah\", \"hand\", \"peace\", \"victory\", \"two\"],\n    \"char\": \"\u270C\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"ok_hand\": {\n    \"keywords\": [\"fingers\", \"limbs\", \"perfect\", \"ok\", \"okay\"],\n    \"char\": \"\uD83D\uDC4C\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"raised_hand\": {\n    \"keywords\": [\"fingers\", \"stop\", \"highfive\", \"palm\", \"ban\"],\n    \"char\": \"\u270B\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"raised_back_of_hand\": {\n    \"keywords\": [\"fingers\", \"raised\", \"backhand\"],\n    \"char\": \"\uD83E\uDD1A\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"open_hands\": {\n    \"keywords\": [\"fingers\", \"butterfly\", \"hands\", \"open\"],\n    \"char\": \"\uD83D\uDC50\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"muscle\": {\n    \"keywords\": [\"arm\", \"flex\", \"hand\", \"summer\", \"strong\", \"biceps\"],\n    \"char\": \"\uD83D\uDCAA\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"pray\": {\n    \"keywords\": [\"please\", \"hope\", \"wish\", \"namaste\", \"highfive\"],\n    \"char\": \"\uD83D\uDE4F\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"foot\": {\n    \"keywords\": [\"kick\", \"stomp\"],\n    \"char\": \"\uD83E\uDDB6\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"leg\": {\n    \"keywords\": [\"kick\", \"limb\"],\n    \"char\": \"\uD83E\uDDB5\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"handshake\": {\n    \"keywords\": [\"agreement\", \"shake\"],\n    \"char\": \"\uD83E\uDD1D\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"point_up\": {\n    \"keywords\": [\"hand\", \"fingers\", \"direction\", \"up\"],\n    \"char\": \"\u261D\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"point_up_2\": {\n    \"keywords\": [\"fingers\", \"hand\", \"direction\", \"up\"],\n    \"char\": \"\uD83D\uDC46\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"point_down\": {\n    \"keywords\": [\"fingers\", \"hand\", \"direction\", \"down\"],\n    \"char\": \"\uD83D\uDC47\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"point_left\": {\n    \"keywords\": [\"direction\", \"fingers\", \"hand\", \"left\"],\n    \"char\": \"\uD83D\uDC48\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"point_right\": {\n    \"keywords\": [\"fingers\", \"hand\", \"direction\", \"right\"],\n    \"char\": \"\uD83D\uDC49\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"fu\": {\n    \"keywords\": [\"hand\", \"fingers\", \"rude\", \"middle\", \"flipping\"],\n    \"char\": \"\uD83D\uDD95\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"raised_hand_with_fingers_splayed\": {\n    \"keywords\": [\"hand\", \"fingers\", \"palm\"],\n    \"char\": \"\uD83D\uDD90\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"love_you\": {\n    \"keywords\": [\"hand\", \"fingers\", \"gesture\"],\n    \"char\": \"\uD83E\uDD1F\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"metal\": {\n    \"keywords\": [\"hand\", \"fingers\", \"evil_eye\", \"sign_of_horns\", \"rock_on\"],\n    \"char\": \"\uD83E\uDD18\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"crossed_fingers\": {\n    \"keywords\": [\"good\", \"lucky\"],\n    \"char\": \"\uD83E\uDD1E\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"vulcan_salute\": {\n    \"keywords\": [\"hand\", \"fingers\", \"spock\", \"star trek\"],\n    \"char\": \"\uD83D\uDD96\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"writing_hand\": {\n    \"keywords\": [\"lower_left_ballpoint_pen\", \"stationery\", \"write\", \"compose\"],\n    \"char\": \"\u270D\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"selfie\": {\n    \"keywords\": [\"camera\", \"phone\"],\n    \"char\": \"\uD83E\uDD33\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"nail_care\": {\n    \"keywords\": [\"beauty\", \"manicure\", \"finger\", \"fashion\", \"nail\"],\n    \"char\": \"\uD83D\uDC85\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"lips\": {\n    \"keywords\": [\"mouth\", \"kiss\"],\n    \"char\": \"\uD83D\uDC44\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"tooth\": {\n    \"keywords\": [\"teeth\", \"dentist\"],\n    \"char\": \"\uD83E\uDDB7\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"tongue\": {\n    \"keywords\": [\"mouth\", \"playful\"],\n    \"char\": \"\uD83D\uDC45\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"ear\": {\n    \"keywords\": [\"face\", \"hear\", \"sound\", \"listen\"],\n    \"char\": \"\uD83D\uDC42\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"nose\": {\n    \"keywords\": [\"smell\", \"sniff\"],\n    \"char\": \"\uD83D\uDC43\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"eye\": {\n    \"keywords\": [\"face\", \"look\", \"see\", \"watch\", \"stare\"],\n    \"char\": \"\uD83D\uDC41\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"eyes\": {\n    \"keywords\": [\"look\", \"watch\", \"stalk\", \"peek\", \"see\"],\n    \"char\": \"\uD83D\uDC40\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"brain\": {\n    \"keywords\": [\"smart\", \"intelligent\"],\n    \"char\": \"\uD83E\uDDE0\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"bust_in_silhouette\": {\n    \"keywords\": [\"user\", \"person\", \"human\"],\n    \"char\": \"\uD83D\uDC64\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"busts_in_silhouette\": {\n    \"keywords\": [\"user\", \"person\", \"human\", \"group\", \"team\"],\n    \"char\": \"\uD83D\uDC65\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"speaking_head\": {\n    \"keywords\": [\"user\", \"person\", \"human\", \"sing\", \"say\", \"talk\"],\n    \"char\": \"\uD83D\uDDE3\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"baby\": {\n    \"keywords\": [\"child\", \"boy\", \"girl\", \"toddler\"],\n    \"char\": \"\uD83D\uDC76\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"child\": {\n    \"keywords\": [\"gender-neutral\", \"young\"],\n    \"char\": \"\uD83E\uDDD2\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"boy\": {\n    \"keywords\": [\"man\", \"male\", \"guy\", \"teenager\"],\n    \"char\": \"\uD83D\uDC66\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"girl\": {\n    \"keywords\": [\"female\", \"woman\", \"teenager\"],\n    \"char\": \"\uD83D\uDC67\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"adult\": {\n    \"keywords\": [\"gender-neutral\", \"person\"],\n    \"char\": \"\uD83E\uDDD1\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"man\": {\n    \"keywords\": [\"mustache\", \"father\", \"dad\", \"guy\", \"classy\", \"sir\", \"moustache\"],\n    \"char\": \"\uD83D\uDC68\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"woman\": {\n    \"keywords\": [\"female\", \"girls\", \"lady\"],\n    \"char\": \"\uD83D\uDC69\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"blonde_woman\": {\n    \"keywords\": [\"woman\", \"female\", \"girl\", \"blonde\", \"person\"],\n    \"char\": \"\uD83D\uDC71\u200D\u2640\uFE0F\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"blonde_man\": {\n    \"keywords\": [\"man\", \"male\", \"boy\", \"blonde\", \"guy\", \"person\"],\n    \"char\": \"\uD83D\uDC71\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"bearded_person\": {\n    \"keywords\": [\"person\", \"bewhiskered\"],\n    \"char\": \"\uD83E\uDDD4\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"older_adult\": {\n    \"keywords\": [\"human\", \"elder\", \"senior\", \"gender-neutral\"],\n    \"char\": \"\uD83E\uDDD3\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"older_man\": {\n    \"keywords\": [\"human\", \"male\", \"men\", \"old\", \"elder\", \"senior\"],\n    \"char\": \"\uD83D\uDC74\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"older_woman\": {\n    \"keywords\": [\"human\", \"female\", \"women\", \"lady\", \"old\", \"elder\", \"senior\"],\n    \"char\": \"\uD83D\uDC75\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"man_with_gua_pi_mao\": {\n    \"keywords\": [\"male\", \"boy\", \"chinese\"],\n    \"char\": \"\uD83D\uDC72\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"woman_with_headscarf\": {\n    \"keywords\": [\"female\", \"hijab\", \"mantilla\", \"tichel\"],\n    \"char\": \"\uD83E\uDDD5\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"woman_with_turban\": {\n    \"keywords\": [\"female\", \"indian\", \"hinduism\", \"arabs\", \"woman\"],\n    \"char\": \"\uD83D\uDC73\u200D\u2640\uFE0F\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"man_with_turban\": {\n    \"keywords\": [\"male\", \"indian\", \"hinduism\", \"arabs\"],\n    \"char\": \"\uD83D\uDC73\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"policewoman\": {\n    \"keywords\": [\"woman\", \"police\", \"law\", \"legal\", \"enforcement\", \"arrest\", \"911\", \"female\"],\n    \"char\": \"\uD83D\uDC6E\u200D\u2640\uFE0F\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"policeman\": {\n    \"keywords\": [\"man\", \"police\", \"law\", \"legal\", \"enforcement\", \"arrest\", \"911\"],\n    \"char\": \"\uD83D\uDC6E\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"construction_worker_woman\": {\n    \"keywords\": [\"female\", \"human\", \"wip\", \"build\", \"construction\", \"worker\", \"labor\", \"woman\"],\n    \"char\": \"\uD83D\uDC77\u200D\u2640\uFE0F\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"construction_worker_man\": {\n    \"keywords\": [\"male\", \"human\", \"wip\", \"guy\", \"build\", \"construction\", \"worker\", \"labor\"],\n    \"char\": \"\uD83D\uDC77\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"guardswoman\": {\n    \"keywords\": [\"uk\", \"gb\", \"british\", \"female\", \"royal\", \"woman\"],\n    \"char\": \"\uD83D\uDC82\u200D\u2640\uFE0F\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"guardsman\": {\n    \"keywords\": [\"uk\", \"gb\", \"british\", \"male\", \"guy\", \"royal\"],\n    \"char\": \"\uD83D\uDC82\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"female_detective\": {\n    \"keywords\": [\"human\", \"spy\", \"detective\", \"female\", \"woman\"],\n    \"char\": \"\uD83D\uDD75\uFE0F\u200D\u2640\uFE0F\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"male_detective\": {\n    \"keywords\": [\"human\", \"spy\", \"detective\"],\n    \"char\": \"\uD83D\uDD75\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"woman_health_worker\": {\n    \"keywords\": [\"doctor\", \"nurse\", \"therapist\", \"healthcare\", \"woman\", \"human\"],\n    \"char\": \"\uD83D\uDC69\u200D\u2695\uFE0F\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"man_health_worker\": {\n    \"keywords\": [\"doctor\", \"nurse\", \"therapist\", \"healthcare\", \"man\", \"human\"],\n    \"char\": \"\uD83D\uDC68\u200D\u2695\uFE0F\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"woman_farmer\": {\n    \"keywords\": [\"rancher\", \"gardener\", \"woman\", \"human\"],\n    \"char\": \"\uD83D\uDC69\u200D\uD83C\uDF3E\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"man_farmer\": {\n    \"keywords\": [\"rancher\", \"gardener\", \"man\", \"human\"],\n    \"char\": \"\uD83D\uDC68\u200D\uD83C\uDF3E\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"woman_cook\": {\n    \"keywords\": [\"chef\", \"woman\", \"human\"],\n    \"char\": \"\uD83D\uDC69\u200D\uD83C\uDF73\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"man_cook\": {\n    \"keywords\": [\"chef\", \"man\", \"human\"],\n    \"char\": \"\uD83D\uDC68\u200D\uD83C\uDF73\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"woman_student\": {\n    \"keywords\": [\"graduate\", \"woman\", \"human\"],\n    \"char\": \"\uD83D\uDC69\u200D\uD83C\uDF93\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"man_student\": {\n    \"keywords\": [\"graduate\", \"man\", \"human\"],\n    \"char\": \"\uD83D\uDC68\u200D\uD83C\uDF93\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"woman_singer\": {\n    \"keywords\": [\"rockstar\", \"entertainer\", \"woman\", \"human\"],\n    \"char\": \"\uD83D\uDC69\u200D\uD83C\uDFA4\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"man_singer\": {\n    \"keywords\": [\"rockstar\", \"entertainer\", \"man\", \"human\"],\n    \"char\": \"\uD83D\uDC68\u200D\uD83C\uDFA4\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"woman_teacher\": {\n    \"keywords\": [\"instructor\", \"professor\", \"woman\", \"human\"],\n    \"char\": \"\uD83D\uDC69\u200D\uD83C\uDFEB\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"man_teacher\": {\n    \"keywords\": [\"instructor\", \"professor\", \"man\", \"human\"],\n    \"char\": \"\uD83D\uDC68\u200D\uD83C\uDFEB\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"woman_factory_worker\": {\n    \"keywords\": [\"assembly\", \"industrial\", \"woman\", \"human\"],\n    \"char\": \"\uD83D\uDC69\u200D\uD83C\uDFED\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"man_factory_worker\": {\n    \"keywords\": [\"assembly\", \"industrial\", \"man\", \"human\"],\n    \"char\": \"\uD83D\uDC68\u200D\uD83C\uDFED\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"woman_technologist\": {\n    \"keywords\": [\"coder\", \"developer\", \"engineer\", \"programmer\", \"software\", \"woman\", \"human\", \"laptop\", \"computer\"],\n    \"char\": \"\uD83D\uDC69\u200D\uD83D\uDCBB\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"man_technologist\": {\n    \"keywords\": [\"coder\", \"developer\", \"engineer\", \"programmer\", \"software\", \"man\", \"human\", \"laptop\", \"computer\"],\n    \"char\": \"\uD83D\uDC68\u200D\uD83D\uDCBB\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"woman_office_worker\": {\n    \"keywords\": [\"business\", \"manager\", \"woman\", \"human\"],\n    \"char\": \"\uD83D\uDC69\u200D\uD83D\uDCBC\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"man_office_worker\": {\n    \"keywords\": [\"business\", \"manager\", \"man\", \"human\"],\n    \"char\": \"\uD83D\uDC68\u200D\uD83D\uDCBC\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"woman_mechanic\": {\n    \"keywords\": [\"plumber\", \"woman\", \"human\", \"wrench\"],\n    \"char\": \"\uD83D\uDC69\u200D\uD83D\uDD27\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"man_mechanic\": {\n    \"keywords\": [\"plumber\", \"man\", \"human\", \"wrench\"],\n    \"char\": \"\uD83D\uDC68\u200D\uD83D\uDD27\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"woman_scientist\": {\n    \"keywords\": [\"biologist\", \"chemist\", \"engineer\", \"physicist\", \"woman\", \"human\"],\n    \"char\": \"\uD83D\uDC69\u200D\uD83D\uDD2C\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"man_scientist\": {\n    \"keywords\": [\"biologist\", \"chemist\", \"engineer\", \"physicist\", \"man\", \"human\"],\n    \"char\": \"\uD83D\uDC68\u200D\uD83D\uDD2C\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"woman_artist\": {\n    \"keywords\": [\"painter\", \"woman\", \"human\"],\n    \"char\": \"\uD83D\uDC69\u200D\uD83C\uDFA8\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"man_artist\": {\n    \"keywords\": [\"painter\", \"man\", \"human\"],\n    \"char\": \"\uD83D\uDC68\u200D\uD83C\uDFA8\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"woman_firefighter\": {\n    \"keywords\": [\"fireman\", \"woman\", \"human\"],\n    \"char\": \"\uD83D\uDC69\u200D\uD83D\uDE92\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"man_firefighter\": {\n    \"keywords\": [\"fireman\", \"man\", \"human\"],\n    \"char\": \"\uD83D\uDC68\u200D\uD83D\uDE92\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"woman_pilot\": {\n    \"keywords\": [\"aviator\", \"plane\", \"woman\", \"human\"],\n    \"char\": \"\uD83D\uDC69\u200D\u2708\uFE0F\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"man_pilot\": {\n    \"keywords\": [\"aviator\", \"plane\", \"man\", \"human\"],\n    \"char\": \"\uD83D\uDC68\u200D\u2708\uFE0F\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"woman_astronaut\": {\n    \"keywords\": [\"space\", \"rocket\", \"woman\", \"human\"],\n    \"char\": \"\uD83D\uDC69\u200D\uD83D\uDE80\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"man_astronaut\": {\n    \"keywords\": [\"space\", \"rocket\", \"man\", \"human\"],\n    \"char\": \"\uD83D\uDC68\u200D\uD83D\uDE80\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"woman_judge\": {\n    \"keywords\": [\"justice\", \"court\", \"woman\", \"human\"],\n    \"char\": \"\uD83D\uDC69\u200D\u2696\uFE0F\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"man_judge\": {\n    \"keywords\": [\"justice\", \"court\", \"man\", \"human\"],\n    \"char\": \"\uD83D\uDC68\u200D\u2696\uFE0F\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"woman_superhero\": {\n    \"keywords\": [\"woman\", \"female\", \"good\", \"heroine\", \"superpowers\"],\n    \"char\": \"\uD83E\uDDB8\u200D\u2640\uFE0F\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"man_superhero\": {\n    \"keywords\": [\"man\", \"male\", \"good\", \"hero\", \"superpowers\"],\n    \"char\": \"\uD83E\uDDB8\u200D\u2642\uFE0F\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"woman_supervillain\": {\n    \"keywords\": [\"woman\", \"female\", \"evil\", \"bad\", \"criminal\", \"heroine\", \"superpowers\"],\n    \"char\": \"\uD83E\uDDB9\u200D\u2640\uFE0F\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"man_supervillain\": {\n    \"keywords\": [\"man\", \"male\", \"evil\", \"bad\", \"criminal\", \"hero\", \"superpowers\"],\n    \"char\": \"\uD83E\uDDB9\u200D\u2642\uFE0F\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"mrs_claus\": {\n    \"keywords\": [\"woman\", \"female\", \"xmas\", \"mother christmas\"],\n    \"char\": \"\uD83E\uDD36\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"santa\": {\n    \"keywords\": [\"festival\", \"man\", \"male\", \"xmas\", \"father christmas\"],\n    \"char\": \"\uD83C\uDF85\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"sorceress\": {\n    \"keywords\": [\"woman\", \"female\", \"mage\", \"witch\"],\n    \"char\": \"\uD83E\uDDD9\u200D\u2640\uFE0F\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"wizard\": {\n    \"keywords\": [\"man\", \"male\", \"mage\", \"sorcerer\"],\n    \"char\": \"\uD83E\uDDD9\u200D\u2642\uFE0F\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"woman_elf\": {\n    \"keywords\": [\"woman\", \"female\"],\n    \"char\": \"\uD83E\uDDDD\u200D\u2640\uFE0F\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"man_elf\": {\n    \"keywords\": [\"man\", \"male\"],\n    \"char\": \"\uD83E\uDDDD\u200D\u2642\uFE0F\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"woman_vampire\": {\n    \"keywords\": [\"woman\", \"female\"],\n    \"char\": \"\uD83E\uDDDB\u200D\u2640\uFE0F\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"man_vampire\": {\n    \"keywords\": [\"man\", \"male\", \"dracula\"],\n    \"char\": \"\uD83E\uDDDB\u200D\u2642\uFE0F\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"woman_zombie\": {\n    \"keywords\": [\"woman\", \"female\", \"undead\", \"walking dead\"],\n    \"char\": \"\uD83E\uDDDF\u200D\u2640\uFE0F\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"man_zombie\": {\n    \"keywords\": [\"man\", \"male\", \"dracula\", \"undead\", \"walking dead\"],\n    \"char\": \"\uD83E\uDDDF\u200D\u2642\uFE0F\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"woman_genie\": {\n    \"keywords\": [\"woman\", \"female\"],\n    \"char\": \"\uD83E\uDDDE\u200D\u2640\uFE0F\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"man_genie\": {\n    \"keywords\": [\"man\", \"male\"],\n    \"char\": \"\uD83E\uDDDE\u200D\u2642\uFE0F\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"mermaid\": {\n    \"keywords\": [\"woman\", \"female\", \"merwoman\", \"ariel\"],\n    \"char\": \"\uD83E\uDDDC\u200D\u2640\uFE0F\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"merman\": {\n    \"keywords\": [\"man\", \"male\", \"triton\"],\n    \"char\": \"\uD83E\uDDDC\u200D\u2642\uFE0F\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"woman_fairy\": {\n    \"keywords\": [\"woman\", \"female\"],\n    \"char\": \"\uD83E\uDDDA\u200D\u2640\uFE0F\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"man_fairy\": {\n    \"keywords\": [\"man\", \"male\"],\n    \"char\": \"\uD83E\uDDDA\u200D\u2642\uFE0F\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"angel\": {\n    \"keywords\": [\"heaven\", \"wings\", \"halo\"],\n    \"char\": \"\uD83D\uDC7C\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"pregnant_woman\": {\n    \"keywords\": [\"baby\"],\n    \"char\": \"\uD83E\uDD30\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"breastfeeding\": {\n    \"keywords\": [\"nursing\", \"baby\"],\n    \"char\": \"\uD83E\uDD31\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"princess\": {\n    \"keywords\": [\"girl\", \"woman\", \"female\", \"blond\", \"crown\", \"royal\", \"queen\"],\n    \"char\": \"\uD83D\uDC78\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"prince\": {\n    \"keywords\": [\"boy\", \"man\", \"male\", \"crown\", \"royal\", \"king\"],\n    \"char\": \"\uD83E\uDD34\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"bride_with_veil\": {\n    \"keywords\": [\"couple\", \"marriage\", \"wedding\", \"woman\", \"bride\"],\n    \"char\": \"\uD83D\uDC70\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"man_in_tuxedo\": {\n    \"keywords\": [\"couple\", \"marriage\", \"wedding\", \"groom\"],\n    \"char\": \"\uD83E\uDD35\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"running_woman\": {\n    \"keywords\": [\"woman\", \"walking\", \"exercise\", \"race\", \"running\", \"female\"],\n    \"char\": \"\uD83C\uDFC3\u200D\u2640\uFE0F\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"running_man\": {\n    \"keywords\": [\"man\", \"walking\", \"exercise\", \"race\", \"running\"],\n    \"char\": \"\uD83C\uDFC3\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"walking_woman\": {\n    \"keywords\": [\"human\", \"feet\", \"steps\", \"woman\", \"female\"],\n    \"char\": \"\uD83D\uDEB6\u200D\u2640\uFE0F\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"walking_man\": {\n    \"keywords\": [\"human\", \"feet\", \"steps\"],\n    \"char\": \"\uD83D\uDEB6\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"dancer\": {\n    \"keywords\": [\"female\", \"girl\", \"woman\", \"fun\"],\n    \"char\": \"\uD83D\uDC83\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"man_dancing\": {\n    \"keywords\": [\"male\", \"boy\", \"fun\", \"dancer\"],\n    \"char\": \"\uD83D\uDD7A\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"dancing_women\": {\n    \"keywords\": [\"female\", \"bunny\", \"women\", \"girls\"],\n    \"char\": \"\uD83D\uDC6F\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"dancing_men\": {\n    \"keywords\": [\"male\", \"bunny\", \"men\", \"boys\"],\n    \"char\": \"\uD83D\uDC6F\u200D\u2642\uFE0F\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"couple\": {\n    \"keywords\": [\"pair\", \"people\", \"human\", \"love\", \"date\", \"dating\", \"like\", \"affection\", \"valentines\", \"marriage\"],\n    \"char\": \"\uD83D\uDC6B\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"two_men_holding_hands\": {\n    \"keywords\": [\"pair\", \"couple\", \"love\", \"like\", \"bromance\", \"friendship\", \"people\", \"human\"],\n    \"char\": \"\uD83D\uDC6C\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"two_women_holding_hands\": {\n    \"keywords\": [\"pair\", \"friendship\", \"couple\", \"love\", \"like\", \"female\", \"people\", \"human\"],\n    \"char\": \"\uD83D\uDC6D\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"bowing_woman\": {\n    \"keywords\": [\"woman\", \"female\", \"girl\"],\n    \"char\": \"\uD83D\uDE47\u200D\u2640\uFE0F\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"bowing_man\": {\n    \"keywords\": [\"man\", \"male\", \"boy\"],\n    \"char\": \"\uD83D\uDE47\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"man_facepalming\": {\n    \"keywords\": [\"man\", \"male\", \"boy\", \"disbelief\"],\n    \"char\": \"\uD83E\uDD26\u200D\u2642\uFE0F\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"woman_facepalming\": {\n    \"keywords\": [\"woman\", \"female\", \"girl\", \"disbelief\"],\n    \"char\": \"\uD83E\uDD26\u200D\u2640\uFE0F\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"woman_shrugging\": {\n    \"keywords\": [\"woman\", \"female\", \"girl\", \"confused\", \"indifferent\", \"doubt\"],\n    \"char\": \"\uD83E\uDD37\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"man_shrugging\": {\n    \"keywords\": [\"man\", \"male\", \"boy\", \"confused\", \"indifferent\", \"doubt\"],\n    \"char\": \"\uD83E\uDD37\u200D\u2642\uFE0F\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"tipping_hand_woman\": {\n    \"keywords\": [\"female\", \"girl\", \"woman\", \"human\", \"information\"],\n    \"char\": \"\uD83D\uDC81\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"tipping_hand_man\": {\n    \"keywords\": [\"male\", \"boy\", \"man\", \"human\", \"information\"],\n    \"char\": \"\uD83D\uDC81\u200D\u2642\uFE0F\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"no_good_woman\": {\n    \"keywords\": [\"female\", \"girl\", \"woman\", \"nope\"],\n    \"char\": \"\uD83D\uDE45\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"no_good_man\": {\n    \"keywords\": [\"male\", \"boy\", \"man\", \"nope\"],\n    \"char\": \"\uD83D\uDE45\u200D\u2642\uFE0F\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"ok_woman\": {\n    \"keywords\": [\"women\", \"girl\", \"female\", \"pink\", \"human\", \"woman\"],\n    \"char\": \"\uD83D\uDE46\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"ok_man\": {\n    \"keywords\": [\"men\", \"boy\", \"male\", \"blue\", \"human\", \"man\"],\n    \"char\": \"\uD83D\uDE46\u200D\u2642\uFE0F\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"raising_hand_woman\": {\n    \"keywords\": [\"female\", \"girl\", \"woman\"],\n    \"char\": \"\uD83D\uDE4B\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"raising_hand_man\": {\n    \"keywords\": [\"male\", \"boy\", \"man\"],\n    \"char\": \"\uD83D\uDE4B\u200D\u2642\uFE0F\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"pouting_woman\": {\n    \"keywords\": [\"female\", \"girl\", \"woman\"],\n    \"char\": \"\uD83D\uDE4E\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"pouting_man\": {\n    \"keywords\": [\"male\", \"boy\", \"man\"],\n    \"char\": \"\uD83D\uDE4E\u200D\u2642\uFE0F\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"frowning_woman\": {\n    \"keywords\": [\"female\", \"girl\", \"woman\", \"sad\", \"depressed\", \"discouraged\", \"unhappy\"],\n    \"char\": \"\uD83D\uDE4D\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"frowning_man\": {\n    \"keywords\": [\"male\", \"boy\", \"man\", \"sad\", \"depressed\", \"discouraged\", \"unhappy\"],\n    \"char\": \"\uD83D\uDE4D\u200D\u2642\uFE0F\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"haircut_woman\": {\n    \"keywords\": [\"female\", \"girl\", \"woman\"],\n    \"char\": \"\uD83D\uDC87\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"haircut_man\": {\n    \"keywords\": [\"male\", \"boy\", \"man\"],\n    \"char\": \"\uD83D\uDC87\u200D\u2642\uFE0F\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"massage_woman\": {\n    \"keywords\": [\"female\", \"girl\", \"woman\", \"head\"],\n    \"char\": \"\uD83D\uDC86\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"massage_man\": {\n    \"keywords\": [\"male\", \"boy\", \"man\", \"head\"],\n    \"char\": \"\uD83D\uDC86\u200D\u2642\uFE0F\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"woman_in_steamy_room\": {\n    \"keywords\": [\"female\", \"woman\", \"spa\", \"steamroom\", \"sauna\"],\n    \"char\": \"\uD83E\uDDD6\u200D\u2640\uFE0F\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"man_in_steamy_room\": {\n    \"keywords\": [\"male\", \"man\", \"spa\", \"steamroom\", \"sauna\"],\n    \"char\": \"\uD83E\uDDD6\u200D\u2642\uFE0F\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"people\"\n  },\n  \"couple_with_heart_woman_man\": {\n    \"keywords\": [\"pair\", \"love\", \"like\", \"affection\", \"human\", \"dating\", \"valentines\", \"marriage\"],\n    \"char\": \"\uD83D\uDC91\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"couple_with_heart_woman_woman\": {\n    \"keywords\": [\"pair\", \"love\", \"like\", \"affection\", \"human\", \"dating\", \"valentines\", \"marriage\"],\n    \"char\": \"\uD83D\uDC69\u200D\u2764\uFE0F\u200D\uD83D\uDC69\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"couple_with_heart_man_man\": {\n    \"keywords\": [\"pair\", \"love\", \"like\", \"affection\", \"human\", \"dating\", \"valentines\", \"marriage\"],\n    \"char\": \"\uD83D\uDC68\u200D\u2764\uFE0F\u200D\uD83D\uDC68\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"couplekiss_man_woman\": {\n    \"keywords\": [\"pair\", \"valentines\", \"love\", \"like\", \"dating\", \"marriage\"],\n    \"char\": \"\uD83D\uDC8F\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"couplekiss_woman_woman\": {\n    \"keywords\": [\"pair\", \"valentines\", \"love\", \"like\", \"dating\", \"marriage\"],\n    \"char\": \"\uD83D\uDC69\u200D\u2764\uFE0F\u200D\uD83D\uDC8B\u200D\uD83D\uDC69\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"couplekiss_man_man\": {\n    \"keywords\": [\"pair\", \"valentines\", \"love\", \"like\", \"dating\", \"marriage\"],\n    \"char\": \"\uD83D\uDC68\u200D\u2764\uFE0F\u200D\uD83D\uDC8B\u200D\uD83D\uDC68\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"family_man_woman_boy\": {\n    \"keywords\": [\"home\", \"parents\", \"child\", \"mom\", \"dad\", \"father\", \"mother\", \"people\", \"human\"],\n    \"char\": \"\uD83D\uDC6A\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"family_man_woman_girl\": {\n    \"keywords\": [\"home\", \"parents\", \"people\", \"human\", \"child\"],\n    \"char\": \"\uD83D\uDC68\u200D\uD83D\uDC69\u200D\uD83D\uDC67\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"family_man_woman_girl_boy\": {\n    \"keywords\": [\"home\", \"parents\", \"people\", \"human\", \"children\"],\n    \"char\": \"\uD83D\uDC68\u200D\uD83D\uDC69\u200D\uD83D\uDC67\u200D\uD83D\uDC66\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"family_man_woman_boy_boy\": {\n    \"keywords\": [\"home\", \"parents\", \"people\", \"human\", \"children\"],\n    \"char\": \"\uD83D\uDC68\u200D\uD83D\uDC69\u200D\uD83D\uDC66\u200D\uD83D\uDC66\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"family_man_woman_girl_girl\": {\n    \"keywords\": [\"home\", \"parents\", \"people\", \"human\", \"children\"],\n    \"char\": \"\uD83D\uDC68\u200D\uD83D\uDC69\u200D\uD83D\uDC67\u200D\uD83D\uDC67\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"family_woman_woman_boy\": {\n    \"keywords\": [\"home\", \"parents\", \"people\", \"human\", \"children\"],\n    \"char\": \"\uD83D\uDC69\u200D\uD83D\uDC69\u200D\uD83D\uDC66\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"family_woman_woman_girl\": {\n    \"keywords\": [\"home\", \"parents\", \"people\", \"human\", \"children\"],\n    \"char\": \"\uD83D\uDC69\u200D\uD83D\uDC69\u200D\uD83D\uDC67\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"family_woman_woman_girl_boy\": {\n    \"keywords\": [\"home\", \"parents\", \"people\", \"human\", \"children\"],\n    \"char\": \"\uD83D\uDC69\u200D\uD83D\uDC69\u200D\uD83D\uDC67\u200D\uD83D\uDC66\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"family_woman_woman_boy_boy\": {\n    \"keywords\": [\"home\", \"parents\", \"people\", \"human\", \"children\"],\n    \"char\": \"\uD83D\uDC69\u200D\uD83D\uDC69\u200D\uD83D\uDC66\u200D\uD83D\uDC66\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"family_woman_woman_girl_girl\": {\n    \"keywords\": [\"home\", \"parents\", \"people\", \"human\", \"children\"],\n    \"char\": \"\uD83D\uDC69\u200D\uD83D\uDC69\u200D\uD83D\uDC67\u200D\uD83D\uDC67\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"family_man_man_boy\": {\n    \"keywords\": [\"home\", \"parents\", \"people\", \"human\", \"children\"],\n    \"char\": \"\uD83D\uDC68\u200D\uD83D\uDC68\u200D\uD83D\uDC66\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"family_man_man_girl\": {\n    \"keywords\": [\"home\", \"parents\", \"people\", \"human\", \"children\"],\n    \"char\": \"\uD83D\uDC68\u200D\uD83D\uDC68\u200D\uD83D\uDC67\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"family_man_man_girl_boy\": {\n    \"keywords\": [\"home\", \"parents\", \"people\", \"human\", \"children\"],\n    \"char\": \"\uD83D\uDC68\u200D\uD83D\uDC68\u200D\uD83D\uDC67\u200D\uD83D\uDC66\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"family_man_man_boy_boy\": {\n    \"keywords\": [\"home\", \"parents\", \"people\", \"human\", \"children\"],\n    \"char\": \"\uD83D\uDC68\u200D\uD83D\uDC68\u200D\uD83D\uDC66\u200D\uD83D\uDC66\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"family_man_man_girl_girl\": {\n    \"keywords\": [\"home\", \"parents\", \"people\", \"human\", \"children\"],\n    \"char\": \"\uD83D\uDC68\u200D\uD83D\uDC68\u200D\uD83D\uDC67\u200D\uD83D\uDC67\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"family_woman_boy\": {\n    \"keywords\": [\"home\", \"parent\", \"people\", \"human\", \"child\"],\n    \"char\": \"\uD83D\uDC69\u200D\uD83D\uDC66\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"family_woman_girl\": {\n    \"keywords\": [\"home\", \"parent\", \"people\", \"human\", \"child\"],\n    \"char\": \"\uD83D\uDC69\u200D\uD83D\uDC67\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"family_woman_girl_boy\": {\n    \"keywords\": [\"home\", \"parent\", \"people\", \"human\", \"children\"],\n    \"char\": \"\uD83D\uDC69\u200D\uD83D\uDC67\u200D\uD83D\uDC66\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"family_woman_boy_boy\": {\n    \"keywords\": [\"home\", \"parent\", \"people\", \"human\", \"children\"],\n    \"char\": \"\uD83D\uDC69\u200D\uD83D\uDC66\u200D\uD83D\uDC66\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"family_woman_girl_girl\": {\n    \"keywords\": [\"home\", \"parent\", \"people\", \"human\", \"children\"],\n    \"char\": \"\uD83D\uDC69\u200D\uD83D\uDC67\u200D\uD83D\uDC67\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"family_man_boy\": {\n    \"keywords\": [\"home\", \"parent\", \"people\", \"human\", \"child\"],\n    \"char\": \"\uD83D\uDC68\u200D\uD83D\uDC66\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"family_man_girl\": {\n    \"keywords\": [\"home\", \"parent\", \"people\", \"human\", \"child\"],\n    \"char\": \"\uD83D\uDC68\u200D\uD83D\uDC67\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"family_man_girl_boy\": {\n    \"keywords\": [\"home\", \"parent\", \"people\", \"human\", \"children\"],\n    \"char\": \"\uD83D\uDC68\u200D\uD83D\uDC67\u200D\uD83D\uDC66\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"family_man_boy_boy\": {\n    \"keywords\": [\"home\", \"parent\", \"people\", \"human\", \"children\"],\n    \"char\": \"\uD83D\uDC68\u200D\uD83D\uDC66\u200D\uD83D\uDC66\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"family_man_girl_girl\": {\n    \"keywords\": [\"home\", \"parent\", \"people\", \"human\", \"children\"],\n    \"char\": \"\uD83D\uDC68\u200D\uD83D\uDC67\u200D\uD83D\uDC67\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"yarn\": {\n    \"keywords\": [\"ball\", \"crochet\", \"knit\"],\n    \"char\": \"\uD83E\uDDF6\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"thread\": {\n    \"keywords\": [\"needle\", \"sewing\", \"spool\", \"string\"],\n    \"char\": \"\uD83E\uDDF5\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"coat\": {\n    \"keywords\": [\"jacket\"],\n    \"char\": \"\uD83E\uDDE5\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"labcoat\": {\n    \"keywords\": [\"doctor\", \"experiment\", \"scientist\", \"chemist\"],\n    \"char\": \"\uD83E\uDD7C\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"womans_clothes\": {\n    \"keywords\": [\"fashion\", \"shopping_bags\", \"female\"],\n    \"char\": \"\uD83D\uDC5A\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"tshirt\": {\n    \"keywords\": [\"fashion\", \"cloth\", \"casual\", \"shirt\", \"tee\"],\n    \"char\": \"\uD83D\uDC55\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"jeans\": {\n    \"keywords\": [\"fashion\", \"shopping\"],\n    \"char\": \"\uD83D\uDC56\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"necktie\": {\n    \"keywords\": [\"shirt\", \"suitup\", \"formal\", \"fashion\", \"cloth\", \"business\"],\n    \"char\": \"\uD83D\uDC54\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"dress\": {\n    \"keywords\": [\"clothes\", \"fashion\", \"shopping\"],\n    \"char\": \"\uD83D\uDC57\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"bikini\": {\n    \"keywords\": [\"swimming\", \"female\", \"woman\", \"girl\", \"fashion\", \"beach\", \"summer\"],\n    \"char\": \"\uD83D\uDC59\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"kimono\": {\n    \"keywords\": [\"dress\", \"fashion\", \"women\", \"female\", \"japanese\"],\n    \"char\": \"\uD83D\uDC58\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"lipstick\": {\n    \"keywords\": [\"female\", \"girl\", \"fashion\", \"woman\"],\n    \"char\": \"\uD83D\uDC84\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"kiss\": {\n    \"keywords\": [\"face\", \"lips\", \"love\", \"like\", \"affection\", \"valentines\"],\n    \"char\": \"\uD83D\uDC8B\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"footprints\": {\n    \"keywords\": [\"feet\", \"tracking\", \"walking\", \"beach\"],\n    \"char\": \"\uD83D\uDC63\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"flat_shoe\": {\n    \"keywords\": [\"ballet\", \"slip-on\", \"slipper\"],\n    \"char\": \"\uD83E\uDD7F\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"high_heel\": {\n    \"keywords\": [\"fashion\", \"shoes\", \"female\", \"pumps\", \"stiletto\"],\n    \"char\": \"\uD83D\uDC60\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"sandal\": {\n    \"keywords\": [\"shoes\", \"fashion\", \"flip flops\"],\n    \"char\": \"\uD83D\uDC61\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"boot\": {\n    \"keywords\": [\"shoes\", \"fashion\"],\n    \"char\": \"\uD83D\uDC62\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"mans_shoe\": {\n    \"keywords\": [\"fashion\", \"male\"],\n    \"char\": \"\uD83D\uDC5E\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"athletic_shoe\": {\n    \"keywords\": [\"shoes\", \"sports\", \"sneakers\"],\n    \"char\": \"\uD83D\uDC5F\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"hiking_boot\": {\n    \"keywords\": [\"backpacking\", \"camping\", \"hiking\"],\n    \"char\": \"\uD83E\uDD7E\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"socks\": {\n    \"keywords\": [\"stockings\", \"clothes\"],\n    \"char\": \"\uD83E\uDDE6\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"gloves\": {\n    \"keywords\": [\"hands\", \"winter\", \"clothes\"],\n    \"char\": \"\uD83E\uDDE4\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"scarf\": {\n    \"keywords\": [\"neck\", \"winter\", \"clothes\"],\n    \"char\": \"\uD83E\uDDE3\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"womans_hat\": {\n    \"keywords\": [\"fashion\", \"accessories\", \"female\", \"lady\", \"spring\"],\n    \"char\": \"\uD83D\uDC52\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"tophat\": {\n    \"keywords\": [\"magic\", \"gentleman\", \"classy\", \"circus\"],\n    \"char\": \"\uD83C\uDFA9\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"billed_hat\": {\n    \"keywords\": [\"cap\", \"baseball\"],\n    \"char\": \"\uD83E\uDDE2\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"rescue_worker_helmet\": {\n    \"keywords\": [\"construction\", \"build\"],\n    \"char\": \"\u26D1\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"mortar_board\": {\n    \"keywords\": [\"school\", \"college\", \"degree\", \"university\", \"graduation\", \"cap\", \"hat\", \"legal\", \"learn\", \"education\"],\n    \"char\": \"\uD83C\uDF93\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"crown\": {\n    \"keywords\": [\"king\", \"kod\", \"leader\", \"royalty\", \"lord\"],\n    \"char\": \"\uD83D\uDC51\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"school_satchel\": {\n    \"keywords\": [\"student\", \"education\", \"bag\", \"backpack\"],\n    \"char\": \"\uD83C\uDF92\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"luggage\": {\n    \"keywords\": [\"packing\", \"travel\"],\n    \"char\": \"\uD83E\uDDF3\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"pouch\": {\n    \"keywords\": [\"bag\", \"accessories\", \"shopping\"],\n    \"char\": \"\uD83D\uDC5D\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"purse\": {\n    \"keywords\": [\"fashion\", \"accessories\", \"money\", \"sales\", \"shopping\"],\n    \"char\": \"\uD83D\uDC5B\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"handbag\": {\n    \"keywords\": [\"fashion\", \"accessory\", \"accessories\", \"shopping\"],\n    \"char\": \"\uD83D\uDC5C\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"briefcase\": {\n    \"keywords\": [\"business\", \"documents\", \"work\", \"law\", \"legal\", \"job\", \"career\"],\n    \"char\": \"\uD83D\uDCBC\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"eyeglasses\": {\n    \"keywords\": [\"fashion\", \"accessories\", \"eyesight\", \"nerdy\", \"dork\", \"geek\"],\n    \"char\": \"\uD83D\uDC53\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"dark_sunglasses\": {\n    \"keywords\": [\"face\", \"cool\", \"accessories\"],\n    \"char\": \"\uD83D\uDD76\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"goggles\": {\n    \"keywords\": [\"eyes\", \"protection\", \"safety\"],\n    \"char\": \"\uD83E\uDD7D\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"ring\": {\n    \"keywords\": [\"wedding\", \"propose\", \"marriage\", \"valentines\", \"diamond\", \"fashion\", \"jewelry\", \"gem\", \"engagement\"],\n    \"char\": \"\uD83D\uDC8D\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"closed_umbrella\": {\n    \"keywords\": [\"weather\", \"rain\", \"drizzle\"],\n    \"char\": \"\uD83C\uDF02\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"people\"\n  },\n  \"dog\": {\n    \"keywords\": [\"animal\", \"friend\", \"nature\", \"woof\", \"puppy\", \"pet\", \"faithful\"],\n    \"char\": \"\uD83D\uDC36\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"cat\": {\n    \"keywords\": [\"animal\", \"meow\", \"nature\", \"pet\", \"kitten\"],\n    \"char\": \"\uD83D\uDC31\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"mouse\": {\n    \"keywords\": [\"animal\", \"nature\", \"cheese_wedge\", \"rodent\"],\n    \"char\": \"\uD83D\uDC2D\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"hamster\": {\n    \"keywords\": [\"animal\", \"nature\"],\n    \"char\": \"\uD83D\uDC39\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"rabbit\": {\n    \"keywords\": [\"animal\", \"nature\", \"pet\", \"spring\", \"magic\", \"bunny\"],\n    \"char\": \"\uD83D\uDC30\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"fox_face\": {\n    \"keywords\": [\"animal\", \"nature\", \"face\"],\n    \"char\": \"\uD83E\uDD8A\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"bear\": {\n    \"keywords\": [\"animal\", \"nature\", \"wild\"],\n    \"char\": \"\uD83D\uDC3B\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"panda_face\": {\n    \"keywords\": [\"animal\", \"nature\", \"panda\"],\n    \"char\": \"\uD83D\uDC3C\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"koala\": {\n    \"keywords\": [\"animal\", \"nature\"],\n    \"char\": \"\uD83D\uDC28\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"tiger\": {\n    \"keywords\": [\"animal\", \"cat\", \"danger\", \"wild\", \"nature\", \"roar\"],\n    \"char\": \"\uD83D\uDC2F\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"lion\": {\n    \"keywords\": [\"animal\", \"nature\"],\n    \"char\": \"\uD83E\uDD81\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"cow\": {\n    \"keywords\": [\"beef\", \"ox\", \"animal\", \"nature\", \"moo\", \"milk\"],\n    \"char\": \"\uD83D\uDC2E\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"pig\": {\n    \"keywords\": [\"animal\", \"oink\", \"nature\"],\n    \"char\": \"\uD83D\uDC37\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"pig_nose\": {\n    \"keywords\": [\"animal\", \"oink\"],\n    \"char\": \"\uD83D\uDC3D\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"frog\": {\n    \"keywords\": [\"animal\", \"nature\", \"croak\", \"toad\"],\n    \"char\": \"\uD83D\uDC38\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"squid\": {\n    \"keywords\": [\"animal\", \"nature\", \"ocean\", \"sea\"],\n    \"char\": \"\uD83E\uDD91\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"octopus\": {\n    \"keywords\": [\"animal\", \"creature\", \"ocean\", \"sea\", \"nature\", \"beach\"],\n    \"char\": \"\uD83D\uDC19\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"shrimp\": {\n    \"keywords\": [\"animal\", \"ocean\", \"nature\", \"seafood\"],\n    \"char\": \"\uD83E\uDD90\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"monkey_face\": {\n    \"keywords\": [\"animal\", \"nature\", \"circus\"],\n    \"char\": \"\uD83D\uDC35\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"gorilla\": {\n    \"keywords\": [\"animal\", \"nature\", \"circus\"],\n    \"char\": \"\uD83E\uDD8D\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"see_no_evil\": {\n    \"keywords\": [\"monkey\", \"animal\", \"nature\", \"haha\"],\n    \"char\": \"\uD83D\uDE48\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"hear_no_evil\": {\n    \"keywords\": [\"animal\", \"monkey\", \"nature\"],\n    \"char\": \"\uD83D\uDE49\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"speak_no_evil\": {\n    \"keywords\": [\"monkey\", \"animal\", \"nature\", \"omg\"],\n    \"char\": \"\uD83D\uDE4A\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"monkey\": {\n    \"keywords\": [\"animal\", \"nature\", \"banana\", \"circus\"],\n    \"char\": \"\uD83D\uDC12\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"chicken\": {\n    \"keywords\": [\"animal\", \"cluck\", \"nature\", \"bird\"],\n    \"char\": \"\uD83D\uDC14\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"penguin\": {\n    \"keywords\": [\"animal\", \"nature\"],\n    \"char\": \"\uD83D\uDC27\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"bird\": {\n    \"keywords\": [\"animal\", \"nature\", \"fly\", \"tweet\", \"spring\"],\n    \"char\": \"\uD83D\uDC26\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"baby_chick\": {\n    \"keywords\": [\"animal\", \"chicken\", \"bird\"],\n    \"char\": \"\uD83D\uDC24\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"hatching_chick\": {\n    \"keywords\": [\"animal\", \"chicken\", \"egg\", \"born\", \"baby\", \"bird\"],\n    \"char\": \"\uD83D\uDC23\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"hatched_chick\": {\n    \"keywords\": [\"animal\", \"chicken\", \"baby\", \"bird\"],\n    \"char\": \"\uD83D\uDC25\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"duck\": {\n    \"keywords\": [\"animal\", \"nature\", \"bird\", \"mallard\"],\n    \"char\": \"\uD83E\uDD86\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"eagle\": {\n    \"keywords\": [\"animal\", \"nature\", \"bird\"],\n    \"char\": \"\uD83E\uDD85\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"owl\": {\n    \"keywords\": [\"animal\", \"nature\", \"bird\", \"hoot\"],\n    \"char\": \"\uD83E\uDD89\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"bat\": {\n    \"keywords\": [\"animal\", \"nature\", \"blind\", \"vampire\"],\n    \"char\": \"\uD83E\uDD87\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"wolf\": {\n    \"keywords\": [\"animal\", \"nature\", \"wild\"],\n    \"char\": \"\uD83D\uDC3A\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"boar\": {\n    \"keywords\": [\"animal\", \"nature\"],\n    \"char\": \"\uD83D\uDC17\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"horse\": {\n    \"keywords\": [\"animal\", \"brown\", \"nature\"],\n    \"char\": \"\uD83D\uDC34\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"unicorn\": {\n    \"keywords\": [\"animal\", \"nature\", \"mystical\"],\n    \"char\": \"\uD83E\uDD84\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"honeybee\": {\n    \"keywords\": [\"animal\", \"insect\", \"nature\", \"bug\", \"spring\", \"honey\"],\n    \"char\": \"\uD83D\uDC1D\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"bug\": {\n    \"keywords\": [\"animal\", \"insect\", \"nature\", \"worm\"],\n    \"char\": \"\uD83D\uDC1B\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"butterfly\": {\n    \"keywords\": [\"animal\", \"insect\", \"nature\", \"caterpillar\"],\n    \"char\": \"\uD83E\uDD8B\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"snail\": {\n    \"keywords\": [\"slow\", \"animal\", \"shell\"],\n    \"char\": \"\uD83D\uDC0C\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"beetle\": {\n    \"keywords\": [\"animal\", \"insect\", \"nature\", \"ladybug\"],\n    \"char\": \"\uD83D\uDC1E\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"ant\": {\n    \"keywords\": [\"animal\", \"insect\", \"nature\", \"bug\"],\n    \"char\": \"\uD83D\uDC1C\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"grasshopper\": {\n    \"keywords\": [\"animal\", \"cricket\", \"chirp\"],\n    \"char\": \"\uD83E\uDD97\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"spider\": {\n    \"keywords\": [\"animal\", \"arachnid\"],\n    \"char\": \"\uD83D\uDD77\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"scorpion\": {\n    \"keywords\": [\"animal\", \"arachnid\"],\n    \"char\": \"\uD83E\uDD82\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"crab\": {\n    \"keywords\": [\"animal\", \"crustacean\"],\n    \"char\": \"\uD83E\uDD80\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"snake\": {\n    \"keywords\": [\"animal\", \"evil\", \"nature\", \"hiss\", \"python\"],\n    \"char\": \"\uD83D\uDC0D\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"lizard\": {\n    \"keywords\": [\"animal\", \"nature\", \"reptile\"],\n    \"char\": \"\uD83E\uDD8E\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"t-rex\": {\n    \"keywords\": [\"animal\", \"nature\", \"dinosaur\", \"tyrannosaurus\", \"extinct\"],\n    \"char\": \"\uD83E\uDD96\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"sauropod\": {\n    \"keywords\": [\"animal\", \"nature\", \"dinosaur\", \"brachiosaurus\", \"brontosaurus\", \"diplodocus\", \"extinct\"],\n    \"char\": \"\uD83E\uDD95\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"turtle\": {\n    \"keywords\": [\"animal\", \"slow\", \"nature\", \"tortoise\"],\n    \"char\": \"\uD83D\uDC22\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"tropical_fish\": {\n    \"keywords\": [\"animal\", \"swim\", \"ocean\", \"beach\", \"nemo\"],\n    \"char\": \"\uD83D\uDC20\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"fish\": {\n    \"keywords\": [\"animal\", \"food\", \"nature\"],\n    \"char\": \"\uD83D\uDC1F\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"blowfish\": {\n    \"keywords\": [\"animal\", \"nature\", \"food\", \"sea\", \"ocean\"],\n    \"char\": \"\uD83D\uDC21\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"dolphin\": {\n    \"keywords\": [\"animal\", \"nature\", \"fish\", \"sea\", \"ocean\", \"flipper\", \"fins\", \"beach\"],\n    \"char\": \"\uD83D\uDC2C\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"shark\": {\n    \"keywords\": [\"animal\", \"nature\", \"fish\", \"sea\", \"ocean\", \"jaws\", \"fins\", \"beach\"],\n    \"char\": \"\uD83E\uDD88\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"whale\": {\n    \"keywords\": [\"animal\", \"nature\", \"sea\", \"ocean\"],\n    \"char\": \"\uD83D\uDC33\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"whale2\": {\n    \"keywords\": [\"animal\", \"nature\", \"sea\", \"ocean\"],\n    \"char\": \"\uD83D\uDC0B\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"crocodile\": {\n    \"keywords\": [\"animal\", \"nature\", \"reptile\", \"lizard\", \"alligator\"],\n    \"char\": \"\uD83D\uDC0A\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"leopard\": {\n    \"keywords\": [\"animal\", \"nature\"],\n    \"char\": \"\uD83D\uDC06\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"zebra\": {\n    \"keywords\": [\"animal\", \"nature\", \"stripes\", \"safari\"],\n    \"char\": \"\uD83E\uDD93\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"tiger2\": {\n    \"keywords\": [\"animal\", \"nature\", \"roar\"],\n    \"char\": \"\uD83D\uDC05\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"water_buffalo\": {\n    \"keywords\": [\"animal\", \"nature\", \"ox\", \"cow\"],\n    \"char\": \"\uD83D\uDC03\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"ox\": {\n    \"keywords\": [\"animal\", \"cow\", \"beef\"],\n    \"char\": \"\uD83D\uDC02\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"cow2\": {\n    \"keywords\": [\"beef\", \"ox\", \"animal\", \"nature\", \"moo\", \"milk\"],\n    \"char\": \"\uD83D\uDC04\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"deer\": {\n    \"keywords\": [\"animal\", \"nature\", \"horns\", \"venison\"],\n    \"char\": \"\uD83E\uDD8C\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"dromedary_camel\": {\n    \"keywords\": [\"animal\", \"hot\", \"desert\", \"hump\"],\n    \"char\": \"\uD83D\uDC2A\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"camel\": {\n    \"keywords\": [\"animal\", \"nature\", \"hot\", \"desert\", \"hump\"],\n    \"char\": \"\uD83D\uDC2B\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"giraffe\": {\n    \"keywords\": [\"animal\", \"nature\", \"spots\", \"safari\"],\n    \"char\": \"\uD83E\uDD92\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"elephant\": {\n    \"keywords\": [\"animal\", \"nature\", \"nose\", \"th\", \"circus\"],\n    \"char\": \"\uD83D\uDC18\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"rhinoceros\": {\n    \"keywords\": [\"animal\", \"nature\", \"horn\"],\n    \"char\": \"\uD83E\uDD8F\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"goat\": {\n    \"keywords\": [\"animal\", \"nature\"],\n    \"char\": \"\uD83D\uDC10\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"ram\": {\n    \"keywords\": [\"animal\", \"sheep\", \"nature\"],\n    \"char\": \"\uD83D\uDC0F\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"sheep\": {\n    \"keywords\": [\"animal\", \"nature\", \"wool\", \"shipit\"],\n    \"char\": \"\uD83D\uDC11\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"racehorse\": {\n    \"keywords\": [\"animal\", \"gamble\", \"luck\"],\n    \"char\": \"\uD83D\uDC0E\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"pig2\": {\n    \"keywords\": [\"animal\", \"nature\"],\n    \"char\": \"\uD83D\uDC16\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"rat\": {\n    \"keywords\": [\"animal\", \"mouse\", \"rodent\"],\n    \"char\": \"\uD83D\uDC00\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"mouse2\": {\n    \"keywords\": [\"animal\", \"nature\", \"rodent\"],\n    \"char\": \"\uD83D\uDC01\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"rooster\": {\n    \"keywords\": [\"animal\", \"nature\", \"chicken\"],\n    \"char\": \"\uD83D\uDC13\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"turkey\": {\n    \"keywords\": [\"animal\", \"bird\"],\n    \"char\": \"\uD83E\uDD83\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"dove\": {\n    \"keywords\": [\"animal\", \"bird\"],\n    \"char\": \"\uD83D\uDD4A\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"dog2\": {\n    \"keywords\": [\"animal\", \"nature\", \"friend\", \"doge\", \"pet\", \"faithful\"],\n    \"char\": \"\uD83D\uDC15\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"poodle\": {\n    \"keywords\": [\"dog\", \"animal\", \"101\", \"nature\", \"pet\"],\n    \"char\": \"\uD83D\uDC29\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"cat2\": {\n    \"keywords\": [\"animal\", \"meow\", \"pet\", \"cats\"],\n    \"char\": \"\uD83D\uDC08\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"rabbit2\": {\n    \"keywords\": [\"animal\", \"nature\", \"pet\", \"magic\", \"spring\"],\n    \"char\": \"\uD83D\uDC07\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"chipmunk\": {\n    \"keywords\": [\"animal\", \"nature\", \"rodent\", \"squirrel\"],\n    \"char\": \"\uD83D\uDC3F\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"hedgehog\": {\n    \"keywords\": [\"animal\", \"nature\", \"spiny\"],\n    \"char\": \"\uD83E\uDD94\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"raccoon\": {\n    \"keywords\": [\"animal\", \"nature\"],\n    \"char\": \"\uD83E\uDD9D\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"llama\": {\n    \"keywords\": [\"animal\", \"nature\", \"alpaca\"],\n    \"char\": \"\uD83E\uDD99\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"hippopotamus\": {\n    \"keywords\": [\"animal\", \"nature\"],\n    \"char\": \"\uD83E\uDD9B\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"kangaroo\": {\n    \"keywords\": [\"animal\", \"nature\", \"australia\", \"joey\", \"hop\", \"marsupial\"],\n    \"char\": \"\uD83E\uDD98\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"badger\": {\n    \"keywords\": [\"animal\", \"nature\", \"honey\"],\n    \"char\": \"\uD83E\uDDA1\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"swan\": {\n    \"keywords\": [\"animal\", \"nature\", \"bird\"],\n    \"char\": \"\uD83E\uDDA2\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"peacock\": {\n    \"keywords\": [\"animal\", \"nature\", \"peahen\", \"bird\"],\n    \"char\": \"\uD83E\uDD9A\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"parrot\": {\n    \"keywords\": [\"animal\", \"nature\", \"bird\", \"pirate\", \"talk\"],\n    \"char\": \"\uD83E\uDD9C\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"lobster\": {\n    \"keywords\": [\"animal\", \"nature\", \"bisque\", \"claws\", \"seafood\"],\n    \"char\": \"\uD83E\uDD9E\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"mosquito\": {\n    \"keywords\": [\"animal\", \"nature\", \"insect\", \"malaria\"],\n    \"char\": \"\uD83E\uDD9F\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"paw_prints\": {\n    \"keywords\": [\"animal\", \"tracking\", \"footprints\", \"dog\", \"cat\", \"pet\", \"feet\"],\n    \"char\": \"\uD83D\uDC3E\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"dragon\": {\n    \"keywords\": [\"animal\", \"myth\", \"nature\", \"chinese\", \"green\"],\n    \"char\": \"\uD83D\uDC09\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"dragon_face\": {\n    \"keywords\": [\"animal\", \"myth\", \"nature\", \"chinese\", \"green\"],\n    \"char\": \"\uD83D\uDC32\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"cactus\": {\n    \"keywords\": [\"vegetable\", \"plant\", \"nature\"],\n    \"char\": \"\uD83C\uDF35\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"christmas_tree\": {\n    \"keywords\": [\"festival\", \"vacation\", \"december\", \"xmas\", \"celebration\"],\n    \"char\": \"\uD83C\uDF84\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"evergreen_tree\": {\n    \"keywords\": [\"plant\", \"nature\"],\n    \"char\": \"\uD83C\uDF32\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"deciduous_tree\": {\n    \"keywords\": [\"plant\", \"nature\"],\n    \"char\": \"\uD83C\uDF33\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"palm_tree\": {\n    \"keywords\": [\"plant\", \"vegetable\", \"nature\", \"summer\", \"beach\", \"mojito\", \"tropical\"],\n    \"char\": \"\uD83C\uDF34\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"seedling\": {\n    \"keywords\": [\"plant\", \"nature\", \"grass\", \"lawn\", \"spring\"],\n    \"char\": \"\uD83C\uDF31\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"herb\": {\n    \"keywords\": [\"vegetable\", \"plant\", \"medicine\", \"weed\", \"grass\", \"lawn\"],\n    \"char\": \"\uD83C\uDF3F\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"shamrock\": {\n    \"keywords\": [\"vegetable\", \"plant\", \"nature\", \"irish\", \"clover\"],\n    \"char\": \"\u2618\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"four_leaf_clover\": {\n    \"keywords\": [\"vegetable\", \"plant\", \"nature\", \"lucky\", \"irish\"],\n    \"char\": \"\uD83C\uDF40\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"bamboo\": {\n    \"keywords\": [\"plant\", \"nature\", \"vegetable\", \"panda\", \"pine_decoration\"],\n    \"char\": \"\uD83C\uDF8D\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"tanabata_tree\": {\n    \"keywords\": [\"plant\", \"nature\", \"branch\", \"summer\"],\n    \"char\": \"\uD83C\uDF8B\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"leaves\": {\n    \"keywords\": [\"nature\", \"plant\", \"tree\", \"vegetable\", \"grass\", \"lawn\", \"spring\"],\n    \"char\": \"\uD83C\uDF43\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"fallen_leaf\": {\n    \"keywords\": [\"nature\", \"plant\", \"vegetable\", \"leaves\"],\n    \"char\": \"\uD83C\uDF42\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"maple_leaf\": {\n    \"keywords\": [\"nature\", \"plant\", \"vegetable\", \"ca\", \"fall\"],\n    \"char\": \"\uD83C\uDF41\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"ear_of_rice\": {\n    \"keywords\": [\"nature\", \"plant\"],\n    \"char\": \"\uD83C\uDF3E\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"hibiscus\": {\n    \"keywords\": [\"plant\", \"vegetable\", \"flowers\", \"beach\"],\n    \"char\": \"\uD83C\uDF3A\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"sunflower\": {\n    \"keywords\": [\"nature\", \"plant\", \"fall\"],\n    \"char\": \"\uD83C\uDF3B\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"rose\": {\n    \"keywords\": [\"flowers\", \"valentines\", \"love\", \"spring\"],\n    \"char\": \"\uD83C\uDF39\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"wilted_flower\": {\n    \"keywords\": [\"plant\", \"nature\", \"flower\"],\n    \"char\": \"\uD83E\uDD40\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"tulip\": {\n    \"keywords\": [\"flowers\", \"plant\", \"nature\", \"summer\", \"spring\"],\n    \"char\": \"\uD83C\uDF37\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"blossom\": {\n    \"keywords\": [\"nature\", \"flowers\", \"yellow\"],\n    \"char\": \"\uD83C\uDF3C\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"cherry_blossom\": {\n    \"keywords\": [\"nature\", \"plant\", \"spring\", \"flower\"],\n    \"char\": \"\uD83C\uDF38\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"bouquet\": {\n    \"keywords\": [\"flowers\", \"nature\", \"spring\"],\n    \"char\": \"\uD83D\uDC90\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"mushroom\": {\n    \"keywords\": [\"plant\", \"vegetable\"],\n    \"char\": \"\uD83C\uDF44\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"chestnut\": {\n    \"keywords\": [\"food\", \"squirrel\"],\n    \"char\": \"\uD83C\uDF30\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"jack_o_lantern\": {\n    \"keywords\": [\"halloween\", \"light\", \"pumpkin\", \"creepy\", \"fall\"],\n    \"char\": \"\uD83C\uDF83\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"shell\": {\n    \"keywords\": [\"nature\", \"sea\", \"beach\"],\n    \"char\": \"\uD83D\uDC1A\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"spider_web\": {\n    \"keywords\": [\"animal\", \"insect\", \"arachnid\", \"silk\"],\n    \"char\": \"\uD83D\uDD78\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"earth_americas\": {\n    \"keywords\": [\"globe\", \"world\", \"USA\", \"international\"],\n    \"char\": \"\uD83C\uDF0E\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"earth_africa\": {\n    \"keywords\": [\"globe\", \"world\", \"international\"],\n    \"char\": \"\uD83C\uDF0D\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"earth_asia\": {\n    \"keywords\": [\"globe\", \"world\", \"east\", \"international\"],\n    \"char\": \"\uD83C\uDF0F\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"full_moon\": {\n    \"keywords\": [\"nature\", \"yellow\", \"twilight\", \"planet\", \"space\", \"night\", \"evening\", \"sleep\"],\n    \"char\": \"\uD83C\uDF15\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"waning_gibbous_moon\": {\n    \"keywords\": [\"nature\", \"twilight\", \"planet\", \"space\", \"night\", \"evening\", \"sleep\", \"waxing_gibbous_moon\"],\n    \"char\": \"\uD83C\uDF16\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"last_quarter_moon\": {\n    \"keywords\": [\"nature\", \"twilight\", \"planet\", \"space\", \"night\", \"evening\", \"sleep\"],\n    \"char\": \"\uD83C\uDF17\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"waning_crescent_moon\": {\n    \"keywords\": [\"nature\", \"twilight\", \"planet\", \"space\", \"night\", \"evening\", \"sleep\"],\n    \"char\": \"\uD83C\uDF18\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"new_moon\": {\n    \"keywords\": [\"nature\", \"twilight\", \"planet\", \"space\", \"night\", \"evening\", \"sleep\"],\n    \"char\": \"\uD83C\uDF11\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"waxing_crescent_moon\": {\n    \"keywords\": [\"nature\", \"twilight\", \"planet\", \"space\", \"night\", \"evening\", \"sleep\"],\n    \"char\": \"\uD83C\uDF12\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"first_quarter_moon\": {\n    \"keywords\": [\"nature\", \"twilight\", \"planet\", \"space\", \"night\", \"evening\", \"sleep\"],\n    \"char\": \"\uD83C\uDF13\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"waxing_gibbous_moon\": {\n    \"keywords\": [\"nature\", \"night\", \"sky\", \"gray\", \"twilight\", \"planet\", \"space\", \"evening\", \"sleep\"],\n    \"char\": \"\uD83C\uDF14\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"new_moon_with_face\": {\n    \"keywords\": [\"nature\", \"twilight\", \"planet\", \"space\", \"night\", \"evening\", \"sleep\"],\n    \"char\": \"\uD83C\uDF1A\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"full_moon_with_face\": {\n    \"keywords\": [\"nature\", \"twilight\", \"planet\", \"space\", \"night\", \"evening\", \"sleep\"],\n    \"char\": \"\uD83C\uDF1D\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"first_quarter_moon_with_face\": {\n    \"keywords\": [\"nature\", \"twilight\", \"planet\", \"space\", \"night\", \"evening\", \"sleep\"],\n    \"char\": \"\uD83C\uDF1B\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"last_quarter_moon_with_face\": {\n    \"keywords\": [\"nature\", \"twilight\", \"planet\", \"space\", \"night\", \"evening\", \"sleep\"],\n    \"char\": \"\uD83C\uDF1C\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"sun_with_face\": {\n    \"keywords\": [\"nature\", \"morning\", \"sky\"],\n    \"char\": \"\uD83C\uDF1E\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"crescent_moon\": {\n    \"keywords\": [\"night\", \"sleep\", \"sky\", \"evening\", \"magic\"],\n    \"char\": \"\uD83C\uDF19\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"star\": {\n    \"keywords\": [\"night\", \"yellow\"],\n    \"char\": \"\u2B50\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"star2\": {\n    \"keywords\": [\"night\", \"sparkle\", \"awesome\", \"good\", \"magic\"],\n    \"char\": \"\uD83C\uDF1F\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"dizzy\": {\n    \"keywords\": [\"star\", \"sparkle\", \"shoot\", \"magic\"],\n    \"char\": \"\uD83D\uDCAB\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"sparkles\": {\n    \"keywords\": [\"stars\", \"shine\", \"shiny\", \"cool\", \"awesome\", \"good\", \"magic\"],\n    \"char\": \"\u2728\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"comet\": {\n    \"keywords\": [\"space\"],\n    \"char\": \"\u2604\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"sunny\": {\n    \"keywords\": [\"weather\", \"nature\", \"brightness\", \"summer\", \"beach\", \"spring\"],\n    \"char\": \"\u2600\uFE0F\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"sun_behind_small_cloud\": {\n    \"keywords\": [\"weather\"],\n    \"char\": \"\uD83C\uDF24\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"partly_sunny\": {\n    \"keywords\": [\"weather\", \"nature\", \"cloudy\", \"morning\", \"fall\", \"spring\"],\n    \"char\": \"\u26C5\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"sun_behind_large_cloud\": {\n    \"keywords\": [\"weather\"],\n    \"char\": \"\uD83C\uDF25\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"sun_behind_rain_cloud\": {\n    \"keywords\": [\"weather\"],\n    \"char\": \"\uD83C\uDF26\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"cloud\": {\n    \"keywords\": [\"weather\", \"sky\"],\n    \"char\": \"\u2601\uFE0F\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"cloud_with_rain\": {\n    \"keywords\": [\"weather\"],\n    \"char\": \"\uD83C\uDF27\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"cloud_with_lightning_and_rain\": {\n    \"keywords\": [\"weather\", \"lightning\"],\n    \"char\": \"\u26C8\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"cloud_with_lightning\": {\n    \"keywords\": [\"weather\", \"thunder\"],\n    \"char\": \"\uD83C\uDF29\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"zap\": {\n    \"keywords\": [\"thunder\", \"weather\", \"lightning bolt\", \"fast\"],\n    \"char\": \"\u26A1\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"fire\": {\n    \"keywords\": [\"hot\", \"cook\", \"flame\"],\n    \"char\": \"\uD83D\uDD25\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"boom\": {\n    \"keywords\": [\"bomb\", \"explode\", \"explosion\", \"collision\", \"blown\"],\n    \"char\": \"\uD83D\uDCA5\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"snowflake\": {\n    \"keywords\": [\"winter\", \"season\", \"cold\", \"weather\", \"christmas\", \"xmas\"],\n    \"char\": \"\u2744\uFE0F\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"cloud_with_snow\": {\n    \"keywords\": [\"weather\"],\n    \"char\": \"\uD83C\uDF28\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"snowman\": {\n    \"keywords\": [\"winter\", \"season\", \"cold\", \"weather\", \"christmas\", \"xmas\", \"frozen\", \"without_snow\"],\n    \"char\": \"\u26C4\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"snowman_with_snow\": {\n    \"keywords\": [\"winter\", \"season\", \"cold\", \"weather\", \"christmas\", \"xmas\", \"frozen\"],\n    \"char\": \"\u2603\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"wind_face\": {\n    \"keywords\": [\"gust\", \"air\"],\n    \"char\": \"\uD83C\uDF2C\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"dash\": {\n    \"keywords\": [\"wind\", \"air\", \"fast\", \"shoo\", \"fart\", \"smoke\", \"puff\"],\n    \"char\": \"\uD83D\uDCA8\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"tornado\": {\n    \"keywords\": [\"weather\", \"cyclone\", \"twister\"],\n    \"char\": \"\uD83C\uDF2A\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"fog\": {\n    \"keywords\": [\"weather\"],\n    \"char\": \"\uD83C\uDF2B\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"open_umbrella\": {\n    \"keywords\": [\"weather\", \"spring\"],\n    \"char\": \"\u2602\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"umbrella\": {\n    \"keywords\": [\"rainy\", \"weather\", \"spring\"],\n    \"char\": \"\u2614\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"droplet\": {\n    \"keywords\": [\"water\", \"drip\", \"faucet\", \"spring\"],\n    \"char\": \"\uD83D\uDCA7\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"sweat_drops\": {\n    \"keywords\": [\"water\", \"drip\", \"oops\"],\n    \"char\": \"\uD83D\uDCA6\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"ocean\": {\n    \"keywords\": [\"sea\", \"water\", \"wave\", \"nature\", \"tsunami\", \"disaster\"],\n    \"char\": \"\uD83C\uDF0A\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"animals_and_nature\"\n  },\n  \"green_apple\": {\n    \"keywords\": [\"fruit\", \"nature\"],\n    \"char\": \"\uD83C\uDF4F\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"food_and_drink\"\n  },\n  \"apple\": {\n    \"keywords\": [\"fruit\", \"mac\", \"school\"],\n    \"char\": \"\uD83C\uDF4E\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"food_and_drink\"\n  },\n  \"pear\": {\n    \"keywords\": [\"fruit\", \"nature\", \"food\"],\n    \"char\": \"\uD83C\uDF50\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"food_and_drink\"\n  },\n  \"tangerine\": {\n    \"keywords\": [\"food\", \"fruit\", \"nature\", \"orange\"],\n    \"char\": \"\uD83C\uDF4A\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"food_and_drink\"\n  },\n  \"lemon\": {\n    \"keywords\": [\"fruit\", \"nature\"],\n    \"char\": \"\uD83C\uDF4B\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"food_and_drink\"\n  },\n  \"banana\": {\n    \"keywords\": [\"fruit\", \"food\", \"monkey\"],\n    \"char\": \"\uD83C\uDF4C\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"food_and_drink\"\n  },\n  \"watermelon\": {\n    \"keywords\": [\"fruit\", \"food\", \"picnic\", \"summer\"],\n    \"char\": \"\uD83C\uDF49\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"food_and_drink\"\n  },\n  \"grapes\": {\n    \"keywords\": [\"fruit\", \"food\", \"wine\"],\n    \"char\": \"\uD83C\uDF47\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"food_and_drink\"\n  },\n  \"strawberry\": {\n    \"keywords\": [\"fruit\", \"food\", \"nature\"],\n    \"char\": \"\uD83C\uDF53\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"food_and_drink\"\n  },\n  \"melon\": {\n    \"keywords\": [\"fruit\", \"nature\", \"food\"],\n    \"char\": \"\uD83C\uDF48\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"food_and_drink\"\n  },\n  \"cherries\": {\n    \"keywords\": [\"food\", \"fruit\"],\n    \"char\": \"\uD83C\uDF52\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"food_and_drink\"\n  },\n  \"peach\": {\n    \"keywords\": [\"fruit\", \"nature\", \"food\"],\n    \"char\": \"\uD83C\uDF51\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"food_and_drink\"\n  },\n  \"pineapple\": {\n    \"keywords\": [\"fruit\", \"nature\", \"food\"],\n    \"char\": \"\uD83C\uDF4D\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"food_and_drink\"\n  },\n  \"coconut\": {\n    \"keywords\": [\"fruit\", \"nature\", \"food\", \"palm\"],\n    \"char\": \"\uD83E\uDD65\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"food_and_drink\"\n  },\n  \"kiwi_fruit\": {\n    \"keywords\": [\"fruit\", \"food\"],\n    \"char\": \"\uD83E\uDD5D\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"food_and_drink\"\n  },\n  \"mango\": {\n    \"keywords\": [\"fruit\", \"food\", \"tropical\"],\n    \"char\": \"\uD83E\uDD6D\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"food_and_drink\"\n  },\n  \"avocado\": {\n    \"keywords\": [\"fruit\", \"food\"],\n    \"char\": \"\uD83E\uDD51\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"food_and_drink\"\n  },\n  \"broccoli\": {\n    \"keywords\": [\"fruit\", \"food\", \"vegetable\"],\n    \"char\": \"\uD83E\uDD66\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"food_and_drink\"\n  },\n  \"tomato\": {\n    \"keywords\": [\"fruit\", \"vegetable\", \"nature\", \"food\"],\n    \"char\": \"\uD83C\uDF45\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"food_and_drink\"\n  },\n  \"eggplant\": {\n    \"keywords\": [\"vegetable\", \"nature\", \"food\", \"aubergine\"],\n    \"char\": \"\uD83C\uDF46\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"food_and_drink\"\n  },\n  \"cucumber\": {\n    \"keywords\": [\"fruit\", \"food\", \"pickle\"],\n    \"char\": \"\uD83E\uDD52\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"food_and_drink\"\n  },\n  \"carrot\": {\n    \"keywords\": [\"vegetable\", \"food\", \"orange\"],\n    \"char\": \"\uD83E\uDD55\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"food_and_drink\"\n  },\n  \"hot_pepper\": {\n    \"keywords\": [\"food\", \"spicy\", \"chilli\", \"chili\"],\n    \"char\": \"\uD83C\uDF36\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"food_and_drink\"\n  },\n  \"potato\": {\n    \"keywords\": [\"food\", \"tuber\", \"vegatable\", \"starch\"],\n    \"char\": \"\uD83E\uDD54\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"food_and_drink\"\n  },\n  \"corn\": {\n    \"keywords\": [\"food\", \"vegetable\", \"plant\"],\n    \"char\": \"\uD83C\uDF3D\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"food_and_drink\"\n  },\n  \"leafy_greens\": {\n    \"keywords\": [\"food\", \"vegetable\", \"plant\", \"bok choy\", \"cabbage\", \"kale\", \"lettuce\"],\n    \"char\": \"\uD83E\uDD6C\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"food_and_drink\"\n  },\n  \"sweet_potato\": {\n    \"keywords\": [\"food\", \"nature\"],\n    \"char\": \"\uD83C\uDF60\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"food_and_drink\"\n  },\n  \"peanuts\": {\n    \"keywords\": [\"food\", \"nut\"],\n    \"char\": \"\uD83E\uDD5C\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"food_and_drink\"\n  },\n  \"honey_pot\": {\n    \"keywords\": [\"bees\", \"sweet\", \"kitchen\"],\n    \"char\": \"\uD83C\uDF6F\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"food_and_drink\"\n  },\n  \"croissant\": {\n    \"keywords\": [\"food\", \"bread\", \"french\"],\n    \"char\": \"\uD83E\uDD50\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"food_and_drink\"\n  },\n  \"bread\": {\n    \"keywords\": [\"food\", \"wheat\", \"breakfast\", \"toast\"],\n    \"char\": \"\uD83C\uDF5E\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"food_and_drink\"\n  },\n  \"baguette_bread\": {\n    \"keywords\": [\"food\", \"bread\", \"french\"],\n    \"char\": \"\uD83E\uDD56\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"food_and_drink\"\n  },\n  \"bagel\": {\n    \"keywords\": [\"food\", \"bread\", \"bakery\", \"schmear\"],\n    \"char\": \"\uD83E\uDD6F\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"food_and_drink\"\n  },\n  \"pretzel\": {\n    \"keywords\": [\"food\", \"bread\", \"twisted\"],\n    \"char\": \"\uD83E\uDD68\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"food_and_drink\"\n  },\n  \"cheese\": {\n    \"keywords\": [\"food\", \"chadder\"],\n    \"char\": \"\uD83E\uDDC0\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"food_and_drink\"\n  },\n  \"egg\": {\n    \"keywords\": [\"food\", \"chicken\", \"breakfast\"],\n    \"char\": \"\uD83E\uDD5A\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"food_and_drink\"\n  },\n  \"bacon\": {\n    \"keywords\": [\"food\", \"breakfast\", \"pork\", \"pig\", \"meat\"],\n    \"char\": \"\uD83E\uDD53\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"food_and_drink\"\n  },\n  \"steak\": {\n    \"keywords\": [\"food\", \"cow\", \"meat\", \"cut\", \"chop\", \"lambchop\", \"porkchop\"],\n    \"char\": \"\uD83E\uDD69\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"food_and_drink\"\n  },\n  \"pancakes\": {\n    \"keywords\": [\"food\", \"breakfast\", \"flapjacks\", \"hotcakes\"],\n    \"char\": \"\uD83E\uDD5E\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"food_and_drink\"\n  },\n  \"poultry_leg\": {\n    \"keywords\": [\"food\", \"meat\", \"drumstick\", \"bird\", \"chicken\", \"turkey\"],\n    \"char\": \"\uD83C\uDF57\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"food_and_drink\"\n  },\n  \"meat_on_bone\": {\n    \"keywords\": [\"good\", \"food\", \"drumstick\"],\n    \"char\": \"\uD83C\uDF56\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"food_and_drink\"\n  },\n  \"bone\": {\n    \"keywords\": [\"skeleton\"],\n    \"char\": \"\uD83E\uDDB4\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"food_and_drink\"\n  },\n  \"fried_shrimp\": {\n    \"keywords\": [\"food\", \"animal\", \"appetizer\", \"summer\"],\n    \"char\": \"\uD83C\uDF64\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"food_and_drink\"\n  },\n  \"fried_egg\": {\n    \"keywords\": [\"food\", \"breakfast\", \"kitchen\", \"egg\"],\n    \"char\": \"\uD83C\uDF73\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"food_and_drink\"\n  },\n  \"hamburger\": {\n    \"keywords\": [\"meat\", \"fast food\", \"beef\", \"cheeseburger\", \"mcdonalds\", \"burger king\"],\n    \"char\": \"\uD83C\uDF54\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"food_and_drink\"\n  },\n  \"fries\": {\n    \"keywords\": [\"chips\", \"snack\", \"fast food\"],\n    \"char\": \"\uD83C\uDF5F\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"food_and_drink\"\n  },\n  \"stuffed_flatbread\": {\n    \"keywords\": [\"food\", \"flatbread\", \"stuffed\", \"gyro\"],\n    \"char\": \"\uD83E\uDD59\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"food_and_drink\"\n  },\n  \"hotdog\": {\n    \"keywords\": [\"food\", \"frankfurter\"],\n    \"char\": \"\uD83C\uDF2D\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"food_and_drink\"\n  },\n  \"pizza\": {\n    \"keywords\": [\"food\", \"party\"],\n    \"char\": \"\uD83C\uDF55\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"food_and_drink\"\n  },\n  \"sandwich\": {\n    \"keywords\": [\"food\", \"lunch\", \"bread\"],\n    \"char\": \"\uD83E\uDD6A\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"food_and_drink\"\n  },\n  \"canned_food\": {\n    \"keywords\": [\"food\", \"soup\"],\n    \"char\": \"\uD83E\uDD6B\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"food_and_drink\"\n  },\n  \"spaghetti\": {\n    \"keywords\": [\"food\", \"italian\", \"noodle\"],\n    \"char\": \"\uD83C\uDF5D\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"food_and_drink\"\n  },\n  \"taco\": {\n    \"keywords\": [\"food\", \"mexican\"],\n    \"char\": \"\uD83C\uDF2E\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"food_and_drink\"\n  },\n  \"burrito\": {\n    \"keywords\": [\"food\", \"mexican\"],\n    \"char\": \"\uD83C\uDF2F\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"food_and_drink\"\n  },\n  \"green_salad\": {\n    \"keywords\": [\"food\", \"healthy\", \"lettuce\"],\n    \"char\": \"\uD83E\uDD57\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"food_and_drink\"\n  },\n  \"shallow_pan_of_food\": {\n    \"keywords\": [\"food\", \"cooking\", \"casserole\", \"paella\"],\n    \"char\": \"\uD83E\uDD58\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"food_and_drink\"\n  },\n  \"ramen\": {\n    \"keywords\": [\"food\", \"japanese\", \"noodle\", \"chopsticks\"],\n    \"char\": \"\uD83C\uDF5C\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"food_and_drink\"\n  },\n  \"stew\": {\n    \"keywords\": [\"food\", \"meat\", \"soup\"],\n    \"char\": \"\uD83C\uDF72\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"food_and_drink\"\n  },\n  \"fish_cake\": {\n    \"keywords\": [\"food\", \"japan\", \"sea\", \"beach\", \"narutomaki\", \"pink\", \"swirl\", \"kamaboko\", \"surimi\", \"ramen\"],\n    \"char\": \"\uD83C\uDF65\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"food_and_drink\"\n  },\n  \"fortune_cookie\": {\n    \"keywords\": [\"food\", \"prophecy\"],\n    \"char\": \"\uD83E\uDD60\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"food_and_drink\"\n  },\n  \"sushi\": {\n    \"keywords\": [\"food\", \"fish\", \"japanese\", \"rice\"],\n    \"char\": \"\uD83C\uDF63\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"food_and_drink\"\n  },\n  \"bento\": {\n    \"keywords\": [\"food\", \"japanese\", \"box\"],\n    \"char\": \"\uD83C\uDF71\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"food_and_drink\"\n  },\n  \"curry\": {\n    \"keywords\": [\"food\", \"spicy\", \"hot\", \"indian\"],\n    \"char\": \"\uD83C\uDF5B\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"food_and_drink\"\n  },\n  \"rice_ball\": {\n    \"keywords\": [\"food\", \"japanese\"],\n    \"char\": \"\uD83C\uDF59\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"food_and_drink\"\n  },\n  \"rice\": {\n    \"keywords\": [\"food\", \"china\", \"asian\"],\n    \"char\": \"\uD83C\uDF5A\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"food_and_drink\"\n  },\n  \"rice_cracker\": {\n    \"keywords\": [\"food\", \"japanese\"],\n    \"char\": \"\uD83C\uDF58\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"food_and_drink\"\n  },\n  \"oden\": {\n    \"keywords\": [\"food\", \"japanese\"],\n    \"char\": \"\uD83C\uDF62\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"food_and_drink\"\n  },\n  \"dango\": {\n    \"keywords\": [\"food\", \"dessert\", \"sweet\", \"japanese\", \"barbecue\", \"meat\"],\n    \"char\": \"\uD83C\uDF61\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"food_and_drink\"\n  },\n  \"shaved_ice\": {\n    \"keywords\": [\"hot\", \"dessert\", \"summer\"],\n    \"char\": \"\uD83C\uDF67\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"food_and_drink\"\n  },\n  \"ice_cream\": {\n    \"keywords\": [\"food\", \"hot\", \"dessert\"],\n    \"char\": \"\uD83C\uDF68\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"food_and_drink\"\n  },\n  \"icecream\": {\n    \"keywords\": [\"food\", \"hot\", \"dessert\", \"summer\"],\n    \"char\": \"\uD83C\uDF66\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"food_and_drink\"\n  },\n  \"pie\": {\n    \"keywords\": [\"food\", \"dessert\", \"pastry\"],\n    \"char\": \"\uD83E\uDD67\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"food_and_drink\"\n  },\n  \"cake\": {\n    \"keywords\": [\"food\", \"dessert\"],\n    \"char\": \"\uD83C\uDF70\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"food_and_drink\"\n  },\n  \"cupcake\": {\n    \"keywords\": [\"food\", \"dessert\", \"bakery\", \"sweet\"],\n    \"char\": \"\uD83E\uDDC1\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"food_and_drink\"\n  },\n  \"moon_cake\": {\n    \"keywords\": [\"food\", \"autumn\"],\n    \"char\": \"\uD83E\uDD6E\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"food_and_drink\"\n  },\n  \"birthday\": {\n    \"keywords\": [\"food\", \"dessert\", \"cake\"],\n    \"char\": \"\uD83C\uDF82\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"food_and_drink\"\n  },\n  \"custard\": {\n    \"keywords\": [\"dessert\", \"food\"],\n    \"char\": \"\uD83C\uDF6E\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"food_and_drink\"\n  },\n  \"candy\": {\n    \"keywords\": [\"snack\", \"dessert\", \"sweet\", \"lolly\"],\n    \"char\": \"\uD83C\uDF6C\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"food_and_drink\"\n  },\n  \"lollipop\": {\n    \"keywords\": [\"food\", \"snack\", \"candy\", \"sweet\"],\n    \"char\": \"\uD83C\uDF6D\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"food_and_drink\"\n  },\n  \"chocolate_bar\": {\n    \"keywords\": [\"food\", \"snack\", \"dessert\", \"sweet\"],\n    \"char\": \"\uD83C\uDF6B\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"food_and_drink\"\n  },\n  \"popcorn\": {\n    \"keywords\": [\"food\", \"movie theater\", \"films\", \"snack\"],\n    \"char\": \"\uD83C\uDF7F\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"food_and_drink\"\n  },\n  \"dumpling\": {\n    \"keywords\": [\"food\", \"empanada\", \"pierogi\", \"potsticker\"],\n    \"char\": \"\uD83E\uDD5F\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"food_and_drink\"\n  },\n  \"doughnut\": {\n    \"keywords\": [\"food\", \"dessert\", \"snack\", \"sweet\", \"donut\"],\n    \"char\": \"\uD83C\uDF69\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"food_and_drink\"\n  },\n  \"cookie\": {\n    \"keywords\": [\"food\", \"snack\", \"oreo\", \"chocolate\", \"sweet\", \"dessert\"],\n    \"char\": \"\uD83C\uDF6A\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"food_and_drink\"\n  },\n  \"milk_glass\": {\n    \"keywords\": [\"beverage\", \"drink\", \"cow\"],\n    \"char\": \"\uD83E\uDD5B\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"food_and_drink\"\n  },\n  \"beer\": {\n    \"keywords\": [\"relax\", \"beverage\", \"drink\", \"drunk\", \"party\", \"pub\", \"summer\", \"alcohol\", \"booze\"],\n    \"char\": \"\uD83C\uDF7A\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"food_and_drink\"\n  },\n  \"beers\": {\n    \"keywords\": [\"relax\", \"beverage\", \"drink\", \"drunk\", \"party\", \"pub\", \"summer\", \"alcohol\", \"booze\"],\n    \"char\": \"\uD83C\uDF7B\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"food_and_drink\"\n  },\n  \"clinking_glasses\": {\n    \"keywords\": [\"beverage\", \"drink\", \"party\", \"alcohol\", \"celebrate\", \"cheers\", \"wine\", \"champagne\", \"toast\"],\n    \"char\": \"\uD83E\uDD42\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"food_and_drink\"\n  },\n  \"wine_glass\": {\n    \"keywords\": [\"drink\", \"beverage\", \"drunk\", \"alcohol\", \"booze\"],\n    \"char\": \"\uD83C\uDF77\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"food_and_drink\"\n  },\n  \"tumbler_glass\": {\n    \"keywords\": [\"drink\", \"beverage\", \"drunk\", \"alcohol\", \"liquor\", \"booze\", \"bourbon\", \"scotch\", \"whisky\", \"glass\", \"shot\"],\n    \"char\": \"\uD83E\uDD43\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"food_and_drink\"\n  },\n  \"cocktail\": {\n    \"keywords\": [\"drink\", \"drunk\", \"alcohol\", \"beverage\", \"booze\", \"mojito\"],\n    \"char\": \"\uD83C\uDF78\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"food_and_drink\"\n  },\n  \"tropical_drink\": {\n    \"keywords\": [\"beverage\", \"cocktail\", \"summer\", \"beach\", \"alcohol\", \"booze\", \"mojito\"],\n    \"char\": \"\uD83C\uDF79\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"food_and_drink\"\n  },\n  \"champagne\": {\n    \"keywords\": [\"drink\", \"wine\", \"bottle\", \"celebration\"],\n    \"char\": \"\uD83C\uDF7E\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"food_and_drink\"\n  },\n  \"sake\": {\n    \"keywords\": [\"wine\", \"drink\", \"drunk\", \"beverage\", \"japanese\", \"alcohol\", \"booze\"],\n    \"char\": \"\uD83C\uDF76\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"food_and_drink\"\n  },\n  \"tea\": {\n    \"keywords\": [\"drink\", \"bowl\", \"breakfast\", \"green\", \"british\"],\n    \"char\": \"\uD83C\uDF75\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"food_and_drink\"\n  },\n  \"cup_with_straw\": {\n    \"keywords\": [\"drink\", \"soda\"],\n    \"char\": \"\uD83E\uDD64\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"food_and_drink\"\n  },\n  \"coffee\": {\n    \"keywords\": [\"beverage\", \"caffeine\", \"latte\", \"espresso\"],\n    \"char\": \"\u2615\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"food_and_drink\"\n  },\n  \"baby_bottle\": {\n    \"keywords\": [\"food\", \"container\", \"milk\"],\n    \"char\": \"\uD83C\uDF7C\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"food_and_drink\"\n  },\n  \"salt\": {\n    \"keywords\": [\"condiment\", \"shaker\"],\n    \"char\": \"\uD83E\uDDC2\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"food_and_drink\"\n  },\n  \"spoon\": {\n    \"keywords\": [\"cutlery\", \"kitchen\", \"tableware\"],\n    \"char\": \"\uD83E\uDD44\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"food_and_drink\"\n  },\n  \"fork_and_knife\": {\n    \"keywords\": [\"cutlery\", \"kitchen\"],\n    \"char\": \"\uD83C\uDF74\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"food_and_drink\"\n  },\n  \"plate_with_cutlery\": {\n    \"keywords\": [\"food\", \"eat\", \"meal\", \"lunch\", \"dinner\", \"restaurant\"],\n    \"char\": \"\uD83C\uDF7D\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"food_and_drink\"\n  },\n  \"bowl_with_spoon\": {\n    \"keywords\": [\"food\", \"breakfast\", \"cereal\", \"oatmeal\", \"porridge\"],\n    \"char\": \"\uD83E\uDD63\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"food_and_drink\"\n  },\n  \"takeout_box\": {\n    \"keywords\": [\"food\", \"leftovers\"],\n    \"char\": \"\uD83E\uDD61\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"food_and_drink\"\n  },\n  \"chopsticks\": {\n    \"keywords\": [\"food\"],\n    \"char\": \"\uD83E\uDD62\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"food_and_drink\"\n  },\n  \"soccer\": {\n    \"keywords\": [\"sports\", \"football\"],\n    \"char\": \"\u26BD\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"activity\"\n  },\n  \"basketball\": {\n    \"keywords\": [\"sports\", \"balls\", \"NBA\"],\n    \"char\": \"\uD83C\uDFC0\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"activity\"\n  },\n  \"football\": {\n    \"keywords\": [\"sports\", \"balls\", \"NFL\"],\n    \"char\": \"\uD83C\uDFC8\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"activity\"\n  },\n  \"baseball\": {\n    \"keywords\": [\"sports\", \"balls\"],\n    \"char\": \"\u26BE\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"activity\"\n  },\n  \"softball\": {\n    \"keywords\": [\"sports\", \"balls\"],\n    \"char\": \"\uD83E\uDD4E\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"activity\"\n  },\n  \"tennis\": {\n    \"keywords\": [\"sports\", \"balls\", \"green\"],\n    \"char\": \"\uD83C\uDFBE\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"activity\"\n  },\n  \"volleyball\": {\n    \"keywords\": [\"sports\", \"balls\"],\n    \"char\": \"\uD83C\uDFD0\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"activity\"\n  },\n  \"rugby_football\": {\n    \"keywords\": [\"sports\", \"team\"],\n    \"char\": \"\uD83C\uDFC9\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"activity\"\n  },\n  \"flying_disc\": {\n    \"keywords\": [\"sports\", \"frisbee\", \"ultimate\"],\n    \"char\": \"\uD83E\uDD4F\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"activity\"\n  },\n  \"8ball\": {\n    \"keywords\": [\"pool\", \"hobby\", \"game\", \"luck\", \"magic\"],\n    \"char\": \"\uD83C\uDFB1\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"activity\"\n  },\n  \"golf\": {\n    \"keywords\": [\"sports\", \"business\", \"flag\", \"hole\", \"summer\"],\n    \"char\": \"\u26F3\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"activity\"\n  },\n  \"golfing_woman\": {\n    \"keywords\": [\"sports\", \"business\", \"woman\", \"female\"],\n    \"char\": \"\uD83C\uDFCC\uFE0F\u200D\u2640\uFE0F\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"activity\"\n  },\n  \"golfing_man\": {\n    \"keywords\": [\"sports\", \"business\"],\n    \"char\": \"\uD83C\uDFCC\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"activity\"\n  },\n  \"ping_pong\": {\n    \"keywords\": [\"sports\", \"pingpong\"],\n    \"char\": \"\uD83C\uDFD3\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"activity\"\n  },\n  \"badminton\": {\n    \"keywords\": [\"sports\"],\n    \"char\": \"\uD83C\uDFF8\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"activity\"\n  },\n  \"goal_net\": {\n    \"keywords\": [\"sports\"],\n    \"char\": \"\uD83E\uDD45\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"activity\"\n  },\n  \"ice_hockey\": {\n    \"keywords\": [\"sports\"],\n    \"char\": \"\uD83C\uDFD2\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"activity\"\n  },\n  \"field_hockey\": {\n    \"keywords\": [\"sports\"],\n    \"char\": \"\uD83C\uDFD1\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"activity\"\n  },\n  \"lacrosse\": {\n    \"keywords\": [\"sports\", \"ball\", \"stick\"],\n    \"char\": \"\uD83E\uDD4D\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"activity\"\n  },\n  \"cricket\": {\n    \"keywords\": [\"sports\"],\n    \"char\": \"\uD83C\uDFCF\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"activity\"\n  },\n  \"ski\": {\n    \"keywords\": [\"sports\", \"winter\", \"cold\", \"snow\"],\n    \"char\": \"\uD83C\uDFBF\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"activity\"\n  },\n  \"skier\": {\n    \"keywords\": [\"sports\", \"winter\", \"snow\"],\n    \"char\": \"\u26F7\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"activity\"\n  },\n  \"snowboarder\": {\n    \"keywords\": [\"sports\", \"winter\"],\n    \"char\": \"\uD83C\uDFC2\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"activity\"\n  },\n  \"person_fencing\": {\n    \"keywords\": [\"sports\", \"fencing\", \"sword\"],\n    \"char\": \"\uD83E\uDD3A\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"activity\"\n  },\n  \"women_wrestling\": {\n    \"keywords\": [\"sports\", \"wrestlers\"],\n    \"char\": \"\uD83E\uDD3C\u200D\u2640\uFE0F\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"activity\"\n  },\n  \"men_wrestling\": {\n    \"keywords\": [\"sports\", \"wrestlers\"],\n    \"char\": \"\uD83E\uDD3C\u200D\u2642\uFE0F\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"activity\"\n  },\n  \"woman_cartwheeling\": {\n    \"keywords\": [\"gymnastics\"],\n    \"char\": \"\uD83E\uDD38\u200D\u2640\uFE0F\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"activity\"\n  },\n  \"man_cartwheeling\": {\n    \"keywords\": [\"gymnastics\"],\n    \"char\": \"\uD83E\uDD38\u200D\u2642\uFE0F\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"activity\"\n  },\n  \"woman_playing_handball\": {\n    \"keywords\": [\"sports\"],\n    \"char\": \"\uD83E\uDD3E\u200D\u2640\uFE0F\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"activity\"\n  },\n  \"man_playing_handball\": {\n    \"keywords\": [\"sports\"],\n    \"char\": \"\uD83E\uDD3E\u200D\u2642\uFE0F\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"activity\"\n  },\n  \"ice_skate\": {\n    \"keywords\": [\"sports\"],\n    \"char\": \"\u26F8\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"activity\"\n  },\n  \"curling_stone\": {\n    \"keywords\": [\"sports\"],\n    \"char\": \"\uD83E\uDD4C\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"activity\"\n  },\n  \"skateboard\": {\n    \"keywords\": [\"board\"],\n    \"char\": \"\uD83D\uDEF9\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"activity\"\n  },\n  \"sled\": {\n    \"keywords\": [\"sleigh\", \"luge\", \"toboggan\"],\n    \"char\": \"\uD83D\uDEF7\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"activity\"\n  },\n  \"bow_and_arrow\": {\n    \"keywords\": [\"sports\"],\n    \"char\": \"\uD83C\uDFF9\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"activity\"\n  },\n  \"fishing_pole_and_fish\": {\n    \"keywords\": [\"food\", \"hobby\", \"summer\"],\n    \"char\": \"\uD83C\uDFA3\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"activity\"\n  },\n  \"boxing_glove\": {\n    \"keywords\": [\"sports\", \"fighting\"],\n    \"char\": \"\uD83E\uDD4A\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"activity\"\n  },\n  \"martial_arts_uniform\": {\n    \"keywords\": [\"judo\", \"karate\", \"taekwondo\"],\n    \"char\": \"\uD83E\uDD4B\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"activity\"\n  },\n  \"rowing_woman\": {\n    \"keywords\": [\"sports\", \"hobby\", \"water\", \"ship\", \"woman\", \"female\"],\n    \"char\": \"\uD83D\uDEA3\u200D\u2640\uFE0F\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"activity\"\n  },\n  \"rowing_man\": {\n    \"keywords\": [\"sports\", \"hobby\", \"water\", \"ship\"],\n    \"char\": \"\uD83D\uDEA3\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"activity\"\n  },\n  \"climbing_woman\": {\n    \"keywords\": [\"sports\", \"hobby\", \"woman\", \"female\", \"rock\"],\n    \"char\": \"\uD83E\uDDD7\u200D\u2640\uFE0F\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"activity\"\n  },\n  \"climbing_man\": {\n    \"keywords\": [\"sports\", \"hobby\", \"man\", \"male\", \"rock\"],\n    \"char\": \"\uD83E\uDDD7\u200D\u2642\uFE0F\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"activity\"\n  },\n  \"swimming_woman\": {\n    \"keywords\": [\"sports\", \"exercise\", \"human\", \"athlete\", \"water\", \"summer\", \"woman\", \"female\"],\n    \"char\": \"\uD83C\uDFCA\u200D\u2640\uFE0F\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"activity\"\n  },\n  \"swimming_man\": {\n    \"keywords\": [\"sports\", \"exercise\", \"human\", \"athlete\", \"water\", \"summer\"],\n    \"char\": \"\uD83C\uDFCA\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"activity\"\n  },\n  \"woman_playing_water_polo\": {\n    \"keywords\": [\"sports\", \"pool\"],\n    \"char\": \"\uD83E\uDD3D\u200D\u2640\uFE0F\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"activity\"\n  },\n  \"man_playing_water_polo\": {\n    \"keywords\": [\"sports\", \"pool\"],\n    \"char\": \"\uD83E\uDD3D\u200D\u2642\uFE0F\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"activity\"\n  },\n  \"woman_in_lotus_position\": {\n    \"keywords\": [\"woman\", \"female\", \"meditation\", \"yoga\", \"serenity\", \"zen\", \"mindfulness\"],\n    \"char\": \"\uD83E\uDDD8\u200D\u2640\uFE0F\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"activity\"\n  },\n  \"man_in_lotus_position\": {\n    \"keywords\": [\"man\", \"male\", \"meditation\", \"yoga\", \"serenity\", \"zen\", \"mindfulness\"],\n    \"char\": \"\uD83E\uDDD8\u200D\u2642\uFE0F\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"activity\"\n  },\n  \"surfing_woman\": {\n    \"keywords\": [\"sports\", \"ocean\", \"sea\", \"summer\", \"beach\", \"woman\", \"female\"],\n    \"char\": \"\uD83C\uDFC4\u200D\u2640\uFE0F\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"activity\"\n  },\n  \"surfing_man\": {\n    \"keywords\": [\"sports\", \"ocean\", \"sea\", \"summer\", \"beach\"],\n    \"char\": \"\uD83C\uDFC4\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"activity\"\n  },\n  \"bath\": {\n    \"keywords\": [\"clean\", \"shower\", \"bathroom\"],\n    \"char\": \"\uD83D\uDEC0\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"activity\"\n  },\n  \"basketball_woman\": {\n    \"keywords\": [\"sports\", \"human\", \"woman\", \"female\"],\n    \"char\": \"\u26F9\uFE0F\u200D\u2640\uFE0F\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"activity\"\n  },\n  \"basketball_man\": {\n    \"keywords\": [\"sports\", \"human\"],\n    \"char\": \"\u26F9\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"activity\"\n  },\n  \"weight_lifting_woman\": {\n    \"keywords\": [\"sports\", \"training\", \"exercise\", \"woman\", \"female\"],\n    \"char\": \"\uD83C\uDFCB\uFE0F\u200D\u2640\uFE0F\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"activity\"\n  },\n  \"weight_lifting_man\": {\n    \"keywords\": [\"sports\", \"training\", \"exercise\"],\n    \"char\": \"\uD83C\uDFCB\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"activity\"\n  },\n  \"biking_woman\": {\n    \"keywords\": [\"sports\", \"bike\", \"exercise\", \"hipster\", \"woman\", \"female\"],\n    \"char\": \"\uD83D\uDEB4\u200D\u2640\uFE0F\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"activity\"\n  },\n  \"biking_man\": {\n    \"keywords\": [\"sports\", \"bike\", \"exercise\", \"hipster\"],\n    \"char\": \"\uD83D\uDEB4\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"activity\"\n  },\n  \"mountain_biking_woman\": {\n    \"keywords\": [\"transportation\", \"sports\", \"human\", \"race\", \"bike\", \"woman\", \"female\"],\n    \"char\": \"\uD83D\uDEB5\u200D\u2640\uFE0F\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"activity\"\n  },\n  \"mountain_biking_man\": {\n    \"keywords\": [\"transportation\", \"sports\", \"human\", \"race\", \"bike\"],\n    \"char\": \"\uD83D\uDEB5\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"activity\"\n  },\n  \"horse_racing\": {\n    \"keywords\": [\"animal\", \"betting\", \"competition\", \"gambling\", \"luck\"],\n    \"char\": \"\uD83C\uDFC7\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"activity\"\n  },\n  \"business_suit_levitating\": {\n    \"keywords\": [\"suit\", \"business\", \"levitate\", \"hover\", \"jump\"],\n    \"char\": \"\uD83D\uDD74\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"activity\"\n  },\n  \"trophy\": {\n    \"keywords\": [\"win\", \"award\", \"contest\", \"place\", \"ftw\", \"ceremony\"],\n    \"char\": \"\uD83C\uDFC6\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"activity\"\n  },\n  \"running_shirt_with_sash\": {\n    \"keywords\": [\"play\", \"pageant\"],\n    \"char\": \"\uD83C\uDFBD\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"activity\"\n  },\n  \"medal_sports\": {\n    \"keywords\": [\"award\", \"winning\"],\n    \"char\": \"\uD83C\uDFC5\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"activity\"\n  },\n  \"medal_military\": {\n    \"keywords\": [\"award\", \"winning\", \"army\"],\n    \"char\": \"\uD83C\uDF96\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"activity\"\n  },\n  \"1st_place_medal\": {\n    \"keywords\": [\"award\", \"winning\", \"first\"],\n    \"char\": \"\uD83E\uDD47\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"activity\"\n  },\n  \"2nd_place_medal\": {\n    \"keywords\": [\"award\", \"second\"],\n    \"char\": \"\uD83E\uDD48\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"activity\"\n  },\n  \"3rd_place_medal\": {\n    \"keywords\": [\"award\", \"third\"],\n    \"char\": \"\uD83E\uDD49\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"activity\"\n  },\n  \"reminder_ribbon\": {\n    \"keywords\": [\"sports\", \"cause\", \"support\", \"awareness\"],\n    \"char\": \"\uD83C\uDF97\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"activity\"\n  },\n  \"rosette\": {\n    \"keywords\": [\"flower\", \"decoration\", \"military\"],\n    \"char\": \"\uD83C\uDFF5\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"activity\"\n  },\n  \"ticket\": {\n    \"keywords\": [\"event\", \"concert\", \"pass\"],\n    \"char\": \"\uD83C\uDFAB\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"activity\"\n  },\n  \"tickets\": {\n    \"keywords\": [\"sports\", \"concert\", \"entrance\"],\n    \"char\": \"\uD83C\uDF9F\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"activity\"\n  },\n  \"performing_arts\": {\n    \"keywords\": [\"acting\", \"theater\", \"drama\"],\n    \"char\": \"\uD83C\uDFAD\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"activity\"\n  },\n  \"art\": {\n    \"keywords\": [\"design\", \"paint\", \"draw\", \"colors\"],\n    \"char\": \"\uD83C\uDFA8\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"activity\"\n  },\n  \"circus_tent\": {\n    \"keywords\": [\"festival\", \"carnival\", \"party\"],\n    \"char\": \"\uD83C\uDFAA\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"activity\"\n  },\n  \"woman_juggling\": {\n    \"keywords\": [\"juggle\", \"balance\", \"skill\", \"multitask\"],\n    \"char\": \"\uD83E\uDD39\u200D\u2640\uFE0F\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"activity\"\n  },\n  \"man_juggling\": {\n    \"keywords\": [\"juggle\", \"balance\", \"skill\", \"multitask\"],\n    \"char\": \"\uD83E\uDD39\u200D\u2642\uFE0F\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"activity\"\n  },\n  \"microphone\": {\n    \"keywords\": [\"sound\", \"music\", \"PA\", \"sing\", \"talkshow\"],\n    \"char\": \"\uD83C\uDFA4\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"activity\"\n  },\n  \"headphones\": {\n    \"keywords\": [\"music\", \"score\", \"gadgets\"],\n    \"char\": \"\uD83C\uDFA7\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"activity\"\n  },\n  \"musical_score\": {\n    \"keywords\": [\"treble\", \"clef\", \"compose\"],\n    \"char\": \"\uD83C\uDFBC\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"activity\"\n  },\n  \"musical_keyboard\": {\n    \"keywords\": [\"piano\", \"instrument\", \"compose\"],\n    \"char\": \"\uD83C\uDFB9\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"activity\"\n  },\n  \"drum\": {\n    \"keywords\": [\"music\", \"instrument\", \"drumsticks\", \"snare\"],\n    \"char\": \"\uD83E\uDD41\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"activity\"\n  },\n  \"saxophone\": {\n    \"keywords\": [\"music\", \"instrument\", \"jazz\", \"blues\"],\n    \"char\": \"\uD83C\uDFB7\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"activity\"\n  },\n  \"trumpet\": {\n    \"keywords\": [\"music\", \"brass\"],\n    \"char\": \"\uD83C\uDFBA\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"activity\"\n  },\n  \"guitar\": {\n    \"keywords\": [\"music\", \"instrument\"],\n    \"char\": \"\uD83C\uDFB8\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"activity\"\n  },\n  \"violin\": {\n    \"keywords\": [\"music\", \"instrument\", \"orchestra\", \"symphony\"],\n    \"char\": \"\uD83C\uDFBB\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"activity\"\n  },\n  \"clapper\": {\n    \"keywords\": [\"movie\", \"film\", \"record\"],\n    \"char\": \"\uD83C\uDFAC\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"activity\"\n  },\n  \"video_game\": {\n    \"keywords\": [\"play\", \"console\", \"PS4\", \"controller\"],\n    \"char\": \"\uD83C\uDFAE\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"activity\"\n  },\n  \"space_invader\": {\n    \"keywords\": [\"game\", \"arcade\", \"play\"],\n    \"char\": \"\uD83D\uDC7E\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"activity\"\n  },\n  \"dart\": {\n    \"keywords\": [\"game\", \"play\", \"bar\", \"target\", \"bullseye\"],\n    \"char\": \"\uD83C\uDFAF\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"activity\"\n  },\n  \"game_die\": {\n    \"keywords\": [\"dice\", \"random\", \"tabletop\", \"play\", \"luck\"],\n    \"char\": \"\uD83C\uDFB2\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"activity\"\n  },\n  \"chess_pawn\": {\n    \"keywords\": [\"expendable\"],\n    \"char\": \"\u265F\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"activity\"\n  },\n  \"slot_machine\": {\n    \"keywords\": [\"bet\", \"gamble\", \"vegas\", \"fruit machine\", \"luck\", \"casino\"],\n    \"char\": \"\uD83C\uDFB0\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"activity\"\n  },\n  \"jigsaw\": {\n    \"keywords\": [\"interlocking\", \"puzzle\", \"piece\"],\n    \"char\": \"\uD83E\uDDE9\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"activity\"\n  },\n  \"bowling\": {\n    \"keywords\": [\"sports\", \"fun\", \"play\"],\n    \"char\": \"\uD83C\uDFB3\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"activity\"\n  },\n  \"red_car\": {\n    \"keywords\": [\"red\", \"transportation\", \"vehicle\"],\n    \"char\": \"\uD83D\uDE97\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"taxi\": {\n    \"keywords\": [\"uber\", \"vehicle\", \"cars\", \"transportation\"],\n    \"char\": \"\uD83D\uDE95\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"blue_car\": {\n    \"keywords\": [\"transportation\", \"vehicle\"],\n    \"char\": \"\uD83D\uDE99\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"bus\": {\n    \"keywords\": [\"car\", \"vehicle\", \"transportation\"],\n    \"char\": \"\uD83D\uDE8C\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"trolleybus\": {\n    \"keywords\": [\"bart\", \"transportation\", \"vehicle\"],\n    \"char\": \"\uD83D\uDE8E\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"racing_car\": {\n    \"keywords\": [\"sports\", \"race\", \"fast\", \"formula\", \"f1\"],\n    \"char\": \"\uD83C\uDFCE\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"police_car\": {\n    \"keywords\": [\"vehicle\", \"cars\", \"transportation\", \"law\", \"legal\", \"enforcement\"],\n    \"char\": \"\uD83D\uDE93\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"ambulance\": {\n    \"keywords\": [\"health\", \"911\", \"hospital\"],\n    \"char\": \"\uD83D\uDE91\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"fire_engine\": {\n    \"keywords\": [\"transportation\", \"cars\", \"vehicle\"],\n    \"char\": \"\uD83D\uDE92\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"minibus\": {\n    \"keywords\": [\"vehicle\", \"car\", \"transportation\"],\n    \"char\": \"\uD83D\uDE90\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"truck\": {\n    \"keywords\": [\"cars\", \"transportation\"],\n    \"char\": \"\uD83D\uDE9A\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"articulated_lorry\": {\n    \"keywords\": [\"vehicle\", \"cars\", \"transportation\", \"express\"],\n    \"char\": \"\uD83D\uDE9B\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"tractor\": {\n    \"keywords\": [\"vehicle\", \"car\", \"farming\", \"agriculture\"],\n    \"char\": \"\uD83D\uDE9C\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"kick_scooter\": {\n    \"keywords\": [\"vehicle\", \"kick\", \"razor\"],\n    \"char\": \"\uD83D\uDEF4\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"motorcycle\": {\n    \"keywords\": [\"race\", \"sports\", \"fast\"],\n    \"char\": \"\uD83C\uDFCD\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"bike\": {\n    \"keywords\": [\"sports\", \"bicycle\", \"exercise\", \"hipster\"],\n    \"char\": \"\uD83D\uDEB2\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"motor_scooter\": {\n    \"keywords\": [\"vehicle\", \"vespa\", \"sasha\"],\n    \"char\": \"\uD83D\uDEF5\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"rotating_light\": {\n    \"keywords\": [\"police\", \"ambulance\", \"911\", \"emergency\", \"alert\", \"error\", \"pinged\", \"law\", \"legal\"],\n    \"char\": \"\uD83D\uDEA8\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"oncoming_police_car\": {\n    \"keywords\": [\"vehicle\", \"law\", \"legal\", \"enforcement\", \"911\"],\n    \"char\": \"\uD83D\uDE94\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"oncoming_bus\": {\n    \"keywords\": [\"vehicle\", \"transportation\"],\n    \"char\": \"\uD83D\uDE8D\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"oncoming_automobile\": {\n    \"keywords\": [\"car\", \"vehicle\", \"transportation\"],\n    \"char\": \"\uD83D\uDE98\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"oncoming_taxi\": {\n    \"keywords\": [\"vehicle\", \"cars\", \"uber\"],\n    \"char\": \"\uD83D\uDE96\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"aerial_tramway\": {\n    \"keywords\": [\"transportation\", \"vehicle\", \"ski\"],\n    \"char\": \"\uD83D\uDEA1\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"mountain_cableway\": {\n    \"keywords\": [\"transportation\", \"vehicle\", \"ski\"],\n    \"char\": \"\uD83D\uDEA0\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"suspension_railway\": {\n    \"keywords\": [\"vehicle\", \"transportation\"],\n    \"char\": \"\uD83D\uDE9F\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"railway_car\": {\n    \"keywords\": [\"transportation\", \"vehicle\"],\n    \"char\": \"\uD83D\uDE83\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"train\": {\n    \"keywords\": [\"transportation\", \"vehicle\", \"carriage\", \"public\", \"travel\"],\n    \"char\": \"\uD83D\uDE8B\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"monorail\": {\n    \"keywords\": [\"transportation\", \"vehicle\"],\n    \"char\": \"\uD83D\uDE9D\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"bullettrain_side\": {\n    \"keywords\": [\"transportation\", \"vehicle\"],\n    \"char\": \"\uD83D\uDE84\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"bullettrain_front\": {\n    \"keywords\": [\"transportation\", \"vehicle\", \"speed\", \"fast\", \"public\", \"travel\"],\n    \"char\": \"\uD83D\uDE85\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"light_rail\": {\n    \"keywords\": [\"transportation\", \"vehicle\"],\n    \"char\": \"\uD83D\uDE88\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"mountain_railway\": {\n    \"keywords\": [\"transportation\", \"vehicle\"],\n    \"char\": \"\uD83D\uDE9E\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"steam_locomotive\": {\n    \"keywords\": [\"transportation\", \"vehicle\", \"train\"],\n    \"char\": \"\uD83D\uDE82\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"train2\": {\n    \"keywords\": [\"transportation\", \"vehicle\"],\n    \"char\": \"\uD83D\uDE86\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"metro\": {\n    \"keywords\": [\"transportation\", \"blue-square\", \"mrt\", \"underground\", \"tube\"],\n    \"char\": \"\uD83D\uDE87\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"tram\": {\n    \"keywords\": [\"transportation\", \"vehicle\"],\n    \"char\": \"\uD83D\uDE8A\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"station\": {\n    \"keywords\": [\"transportation\", \"vehicle\", \"public\"],\n    \"char\": \"\uD83D\uDE89\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"flying_saucer\": {\n    \"keywords\": [\"transportation\", \"vehicle\", \"ufo\"],\n    \"char\": \"\uD83D\uDEF8\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"helicopter\": {\n    \"keywords\": [\"transportation\", \"vehicle\", \"fly\"],\n    \"char\": \"\uD83D\uDE81\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"small_airplane\": {\n    \"keywords\": [\"flight\", \"transportation\", \"fly\", \"vehicle\"],\n    \"char\": \"\uD83D\uDEE9\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"airplane\": {\n    \"keywords\": [\"vehicle\", \"transportation\", \"flight\", \"fly\"],\n    \"char\": \"\u2708\uFE0F\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"flight_departure\": {\n    \"keywords\": [\"airport\", \"flight\", \"landing\"],\n    \"char\": \"\uD83D\uDEEB\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"flight_arrival\": {\n    \"keywords\": [\"airport\", \"flight\", \"boarding\"],\n    \"char\": \"\uD83D\uDEEC\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"sailboat\": {\n    \"keywords\": [\"ship\", \"summer\", \"transportation\", \"water\", \"sailing\"],\n    \"char\": \"\u26F5\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"motor_boat\": {\n    \"keywords\": [\"ship\"],\n    \"char\": \"\uD83D\uDEE5\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"speedboat\": {\n    \"keywords\": [\"ship\", \"transportation\", \"vehicle\", \"summer\"],\n    \"char\": \"\uD83D\uDEA4\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"ferry\": {\n    \"keywords\": [\"boat\", \"ship\", \"yacht\"],\n    \"char\": \"\u26F4\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"passenger_ship\": {\n    \"keywords\": [\"yacht\", \"cruise\", \"ferry\"],\n    \"char\": \"\uD83D\uDEF3\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"rocket\": {\n    \"keywords\": [\"launch\", \"ship\", \"staffmode\", \"NASA\", \"outer space\", \"outer_space\", \"fly\"],\n    \"char\": \"\uD83D\uDE80\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"artificial_satellite\": {\n    \"keywords\": [\"communication\", \"gps\", \"orbit\", \"spaceflight\", \"NASA\", \"ISS\"],\n    \"char\": \"\uD83D\uDEF0\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"seat\": {\n    \"keywords\": [\"sit\", \"airplane\", \"transport\", \"bus\", \"flight\", \"fly\"],\n    \"char\": \"\uD83D\uDCBA\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"canoe\": {\n    \"keywords\": [\"boat\", \"paddle\", \"water\", \"ship\"],\n    \"char\": \"\uD83D\uDEF6\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"anchor\": {\n    \"keywords\": [\"ship\", \"ferry\", \"sea\", \"boat\"],\n    \"char\": \"\u2693\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"construction\": {\n    \"keywords\": [\"wip\", \"progress\", \"caution\", \"warning\"],\n    \"char\": \"\uD83D\uDEA7\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"fuelpump\": {\n    \"keywords\": [\"gas station\", \"petroleum\"],\n    \"char\": \"\u26FD\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"busstop\": {\n    \"keywords\": [\"transportation\", \"wait\"],\n    \"char\": \"\uD83D\uDE8F\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"vertical_traffic_light\": {\n    \"keywords\": [\"transportation\", \"driving\"],\n    \"char\": \"\uD83D\uDEA6\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"traffic_light\": {\n    \"keywords\": [\"transportation\", \"signal\"],\n    \"char\": \"\uD83D\uDEA5\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"checkered_flag\": {\n    \"keywords\": [\"contest\", \"finishline\", \"race\", \"gokart\"],\n    \"char\": \"\uD83C\uDFC1\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"ship\": {\n    \"keywords\": [\"transportation\", \"titanic\", \"deploy\"],\n    \"char\": \"\uD83D\uDEA2\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"ferris_wheel\": {\n    \"keywords\": [\"photo\", \"carnival\", \"londoneye\"],\n    \"char\": \"\uD83C\uDFA1\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"roller_coaster\": {\n    \"keywords\": [\"carnival\", \"playground\", \"photo\", \"fun\"],\n    \"char\": \"\uD83C\uDFA2\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"carousel_horse\": {\n    \"keywords\": [\"photo\", \"carnival\"],\n    \"char\": \"\uD83C\uDFA0\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"building_construction\": {\n    \"keywords\": [\"wip\", \"working\", \"progress\"],\n    \"char\": \"\uD83C\uDFD7\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"foggy\": {\n    \"keywords\": [\"photo\", \"mountain\"],\n    \"char\": \"\uD83C\uDF01\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"tokyo_tower\": {\n    \"keywords\": [\"photo\", \"japanese\"],\n    \"char\": \"\uD83D\uDDFC\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"factory\": {\n    \"keywords\": [\"building\", \"industry\", \"pollution\", \"smoke\"],\n    \"char\": \"\uD83C\uDFED\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"fountain\": {\n    \"keywords\": [\"photo\", \"summer\", \"water\", \"fresh\"],\n    \"char\": \"\u26F2\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"rice_scene\": {\n    \"keywords\": [\"photo\", \"japan\", \"asia\", \"tsukimi\"],\n    \"char\": \"\uD83C\uDF91\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"mountain\": {\n    \"keywords\": [\"photo\", \"nature\", \"environment\"],\n    \"char\": \"\u26F0\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"mountain_snow\": {\n    \"keywords\": [\"photo\", \"nature\", \"environment\", \"winter\", \"cold\"],\n    \"char\": \"\uD83C\uDFD4\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"mount_fuji\": {\n    \"keywords\": [\"photo\", \"mountain\", \"nature\", \"japanese\"],\n    \"char\": \"\uD83D\uDDFB\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"volcano\": {\n    \"keywords\": [\"photo\", \"nature\", \"disaster\"],\n    \"char\": \"\uD83C\uDF0B\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"japan\": {\n    \"keywords\": [\"nation\", \"country\", \"japanese\", \"asia\"],\n    \"char\": \"\uD83D\uDDFE\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"camping\": {\n    \"keywords\": [\"photo\", \"outdoors\", \"tent\"],\n    \"char\": \"\uD83C\uDFD5\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"tent\": {\n    \"keywords\": [\"photo\", \"camping\", \"outdoors\"],\n    \"char\": \"\u26FA\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"national_park\": {\n    \"keywords\": [\"photo\", \"environment\", \"nature\"],\n    \"char\": \"\uD83C\uDFDE\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"motorway\": {\n    \"keywords\": [\"road\", \"cupertino\", \"interstate\", \"highway\"],\n    \"char\": \"\uD83D\uDEE3\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"railway_track\": {\n    \"keywords\": [\"train\", \"transportation\"],\n    \"char\": \"\uD83D\uDEE4\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"sunrise\": {\n    \"keywords\": [\"morning\", \"view\", \"vacation\", \"photo\"],\n    \"char\": \"\uD83C\uDF05\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"sunrise_over_mountains\": {\n    \"keywords\": [\"view\", \"vacation\", \"photo\"],\n    \"char\": \"\uD83C\uDF04\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"desert\": {\n    \"keywords\": [\"photo\", \"warm\", \"saharah\"],\n    \"char\": \"\uD83C\uDFDC\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"beach_umbrella\": {\n    \"keywords\": [\"weather\", \"summer\", \"sunny\", \"sand\", \"mojito\"],\n    \"char\": \"\uD83C\uDFD6\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"desert_island\": {\n    \"keywords\": [\"photo\", \"tropical\", \"mojito\"],\n    \"char\": \"\uD83C\uDFDD\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"city_sunrise\": {\n    \"keywords\": [\"photo\", \"good morning\", \"dawn\"],\n    \"char\": \"\uD83C\uDF07\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"city_sunset\": {\n    \"keywords\": [\"photo\", \"evening\", \"sky\", \"buildings\"],\n    \"char\": \"\uD83C\uDF06\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"cityscape\": {\n    \"keywords\": [\"photo\", \"night life\", \"urban\"],\n    \"char\": \"\uD83C\uDFD9\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"night_with_stars\": {\n    \"keywords\": [\"evening\", \"city\", \"downtown\"],\n    \"char\": \"\uD83C\uDF03\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"bridge_at_night\": {\n    \"keywords\": [\"photo\", \"sanfrancisco\"],\n    \"char\": \"\uD83C\uDF09\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"milky_way\": {\n    \"keywords\": [\"photo\", \"space\", \"stars\"],\n    \"char\": \"\uD83C\uDF0C\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"stars\": {\n    \"keywords\": [\"night\", \"photo\"],\n    \"char\": \"\uD83C\uDF20\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"sparkler\": {\n    \"keywords\": [\"stars\", \"night\", \"shine\"],\n    \"char\": \"\uD83C\uDF87\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"fireworks\": {\n    \"keywords\": [\"photo\", \"festival\", \"carnival\", \"congratulations\"],\n    \"char\": \"\uD83C\uDF86\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"rainbow\": {\n    \"keywords\": [\"nature\", \"happy\", \"unicorn_face\", \"photo\", \"sky\", \"spring\"],\n    \"char\": \"\uD83C\uDF08\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"houses\": {\n    \"keywords\": [\"buildings\", \"photo\"],\n    \"char\": \"\uD83C\uDFD8\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"european_castle\": {\n    \"keywords\": [\"building\", \"royalty\", \"history\"],\n    \"char\": \"\uD83C\uDFF0\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"japanese_castle\": {\n    \"keywords\": [\"photo\", \"building\"],\n    \"char\": \"\uD83C\uDFEF\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"stadium\": {\n    \"keywords\": [\"photo\", \"place\", \"sports\", \"concert\", \"venue\"],\n    \"char\": \"\uD83C\uDFDF\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"statue_of_liberty\": {\n    \"keywords\": [\"american\", \"newyork\"],\n    \"char\": \"\uD83D\uDDFD\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"house\": {\n    \"keywords\": [\"building\", \"home\"],\n    \"char\": \"\uD83C\uDFE0\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"house_with_garden\": {\n    \"keywords\": [\"home\", \"plant\", \"nature\"],\n    \"char\": \"\uD83C\uDFE1\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"derelict_house\": {\n    \"keywords\": [\"abandon\", \"evict\", \"broken\", \"building\"],\n    \"char\": \"\uD83C\uDFDA\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"office\": {\n    \"keywords\": [\"building\", \"bureau\", \"work\"],\n    \"char\": \"\uD83C\uDFE2\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"department_store\": {\n    \"keywords\": [\"building\", \"shopping\", \"mall\"],\n    \"char\": \"\uD83C\uDFEC\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"post_office\": {\n    \"keywords\": [\"building\", \"envelope\", \"communication\"],\n    \"char\": \"\uD83C\uDFE3\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"european_post_office\": {\n    \"keywords\": [\"building\", \"email\"],\n    \"char\": \"\uD83C\uDFE4\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"hospital\": {\n    \"keywords\": [\"building\", \"health\", \"surgery\", \"doctor\"],\n    \"char\": \"\uD83C\uDFE5\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"bank\": {\n    \"keywords\": [\"building\", \"money\", \"sales\", \"cash\", \"business\", \"enterprise\"],\n    \"char\": \"\uD83C\uDFE6\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"hotel\": {\n    \"keywords\": [\"building\", \"accomodation\", \"checkin\"],\n    \"char\": \"\uD83C\uDFE8\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"convenience_store\": {\n    \"keywords\": [\"building\", \"shopping\", \"groceries\"],\n    \"char\": \"\uD83C\uDFEA\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"school\": {\n    \"keywords\": [\"building\", \"student\", \"education\", \"learn\", \"teach\"],\n    \"char\": \"\uD83C\uDFEB\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"love_hotel\": {\n    \"keywords\": [\"like\", \"affection\", \"dating\"],\n    \"char\": \"\uD83C\uDFE9\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"wedding\": {\n    \"keywords\": [\"love\", \"like\", \"affection\", \"couple\", \"marriage\", \"bride\", \"groom\"],\n    \"char\": \"\uD83D\uDC92\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"classical_building\": {\n    \"keywords\": [\"art\", \"culture\", \"history\"],\n    \"char\": \"\uD83C\uDFDB\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"church\": {\n    \"keywords\": [\"building\", \"religion\", \"christ\"],\n    \"char\": \"\u26EA\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"mosque\": {\n    \"keywords\": [\"islam\", \"worship\", \"minaret\"],\n    \"char\": \"\uD83D\uDD4C\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"synagogue\": {\n    \"keywords\": [\"judaism\", \"worship\", \"temple\", \"jewish\"],\n    \"char\": \"\uD83D\uDD4D\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"kaaba\": {\n    \"keywords\": [\"mecca\", \"mosque\", \"islam\"],\n    \"char\": \"\uD83D\uDD4B\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"shinto_shrine\": {\n    \"keywords\": [\"temple\", \"japan\", \"kyoto\"],\n    \"char\": \"\u26E9\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"travel_and_places\"\n  },\n  \"watch\": {\n    \"keywords\": [\"time\", \"accessories\"],\n    \"char\": \"\u231A\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"iphone\": {\n    \"keywords\": [\"technology\", \"apple\", \"gadgets\", \"dial\"],\n    \"char\": \"\uD83D\uDCF1\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"calling\": {\n    \"keywords\": [\"iphone\", \"incoming\"],\n    \"char\": \"\uD83D\uDCF2\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"computer\": {\n    \"keywords\": [\"technology\", \"laptop\", \"screen\", \"display\", \"monitor\"],\n    \"char\": \"\uD83D\uDCBB\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"keyboard\": {\n    \"keywords\": [\"technology\", \"computer\", \"type\", \"input\", \"text\"],\n    \"char\": \"\u2328\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"desktop_computer\": {\n    \"keywords\": [\"technology\", \"computing\", \"screen\"],\n    \"char\": \"\uD83D\uDDA5\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"printer\": {\n    \"keywords\": [\"paper\", \"ink\"],\n    \"char\": \"\uD83D\uDDA8\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"computer_mouse\": {\n    \"keywords\": [\"click\"],\n    \"char\": \"\uD83D\uDDB1\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"trackball\": {\n    \"keywords\": [\"technology\", \"trackpad\"],\n    \"char\": \"\uD83D\uDDB2\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"joystick\": {\n    \"keywords\": [\"game\", \"play\"],\n    \"char\": \"\uD83D\uDD79\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"clamp\": {\n    \"keywords\": [\"tool\"],\n    \"char\": \"\uD83D\uDDDC\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"minidisc\": {\n    \"keywords\": [\"technology\", \"record\", \"data\", \"disk\", \"90s\"],\n    \"char\": \"\uD83D\uDCBD\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"floppy_disk\": {\n    \"keywords\": [\"oldschool\", \"technology\", \"save\", \"90s\", \"80s\"],\n    \"char\": \"\uD83D\uDCBE\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"cd\": {\n    \"keywords\": [\"technology\", \"dvd\", \"disk\", \"disc\", \"90s\"],\n    \"char\": \"\uD83D\uDCBF\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"dvd\": {\n    \"keywords\": [\"cd\", \"disk\", \"disc\"],\n    \"char\": \"\uD83D\uDCC0\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"vhs\": {\n    \"keywords\": [\"record\", \"video\", \"oldschool\", \"90s\", \"80s\"],\n    \"char\": \"\uD83D\uDCFC\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"camera\": {\n    \"keywords\": [\"gadgets\", \"photography\"],\n    \"char\": \"\uD83D\uDCF7\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"camera_flash\": {\n    \"keywords\": [\"photography\", \"gadgets\"],\n    \"char\": \"\uD83D\uDCF8\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"video_camera\": {\n    \"keywords\": [\"film\", \"record\"],\n    \"char\": \"\uD83D\uDCF9\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"movie_camera\": {\n    \"keywords\": [\"film\", \"record\"],\n    \"char\": \"\uD83C\uDFA5\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"film_projector\": {\n    \"keywords\": [\"video\", \"tape\", \"record\", \"movie\"],\n    \"char\": \"\uD83D\uDCFD\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"film_strip\": {\n    \"keywords\": [\"movie\"],\n    \"char\": \"\uD83C\uDF9E\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"telephone_receiver\": {\n    \"keywords\": [\"technology\", \"communication\", \"dial\"],\n    \"char\": \"\uD83D\uDCDE\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"phone\": {\n    \"keywords\": [\"technology\", \"communication\", \"dial\", \"telephone\"],\n    \"char\": \"\u260E\uFE0F\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"pager\": {\n    \"keywords\": [\"bbcall\", \"oldschool\", \"90s\"],\n    \"char\": \"\uD83D\uDCDF\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"fax\": {\n    \"keywords\": [\"communication\", \"technology\"],\n    \"char\": \"\uD83D\uDCE0\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"tv\": {\n    \"keywords\": [\"technology\", \"program\", \"oldschool\", \"show\", \"television\"],\n    \"char\": \"\uD83D\uDCFA\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"radio\": {\n    \"keywords\": [\"communication\", \"music\", \"podcast\", \"program\"],\n    \"char\": \"\uD83D\uDCFB\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"studio_microphone\": {\n    \"keywords\": [\"sing\", \"recording\", \"artist\", \"talkshow\"],\n    \"char\": \"\uD83C\uDF99\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"level_slider\": {\n    \"keywords\": [\"scale\"],\n    \"char\": \"\uD83C\uDF9A\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"control_knobs\": {\n    \"keywords\": [\"dial\"],\n    \"char\": \"\uD83C\uDF9B\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"compass\": {\n    \"keywords\": [\"magnetic\", \"navigation\", \"orienteering\"],\n    \"char\": \"\uD83E\uDDED\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"stopwatch\": {\n    \"keywords\": [\"time\", \"deadline\"],\n    \"char\": \"\u23F1\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"timer_clock\": {\n    \"keywords\": [\"alarm\"],\n    \"char\": \"\u23F2\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"alarm_clock\": {\n    \"keywords\": [\"time\", \"wake\"],\n    \"char\": \"\u23F0\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"mantelpiece_clock\": {\n    \"keywords\": [\"time\"],\n    \"char\": \"\uD83D\uDD70\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"hourglass_flowing_sand\": {\n    \"keywords\": [\"oldschool\", \"time\", \"countdown\"],\n    \"char\": \"\u23F3\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"hourglass\": {\n    \"keywords\": [\"time\", \"clock\", \"oldschool\", \"limit\", \"exam\", \"quiz\", \"test\"],\n    \"char\": \"\u231B\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"satellite\": {\n    \"keywords\": [\"communication\", \"future\", \"radio\", \"space\"],\n    \"char\": \"\uD83D\uDCE1\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"battery\": {\n    \"keywords\": [\"power\", \"energy\", \"sustain\"],\n    \"char\": \"\uD83D\uDD0B\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"electric_plug\": {\n    \"keywords\": [\"charger\", \"power\"],\n    \"char\": \"\uD83D\uDD0C\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"bulb\": {\n    \"keywords\": [\"light\", \"electricity\", \"idea\"],\n    \"char\": \"\uD83D\uDCA1\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"flashlight\": {\n    \"keywords\": [\"dark\", \"camping\", \"sight\", \"night\"],\n    \"char\": \"\uD83D\uDD26\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"candle\": {\n    \"keywords\": [\"fire\", \"wax\"],\n    \"char\": \"\uD83D\uDD6F\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"fire_extinguisher\": {\n    \"keywords\": [\"quench\"],\n    \"char\": \"\uD83E\uDDEF\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"wastebasket\": {\n    \"keywords\": [\"bin\", \"trash\", \"rubbish\", \"garbage\", \"toss\"],\n    \"char\": \"\uD83D\uDDD1\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"oil_drum\": {\n    \"keywords\": [\"barrell\"],\n    \"char\": \"\uD83D\uDEE2\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"money_with_wings\": {\n    \"keywords\": [\"dollar\", \"bills\", \"payment\", \"sale\"],\n    \"char\": \"\uD83D\uDCB8\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"dollar\": {\n    \"keywords\": [\"money\", \"sales\", \"bill\", \"currency\"],\n    \"char\": \"\uD83D\uDCB5\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"yen\": {\n    \"keywords\": [\"money\", \"sales\", \"japanese\", \"dollar\", \"currency\"],\n    \"char\": \"\uD83D\uDCB4\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"euro\": {\n    \"keywords\": [\"money\", \"sales\", \"dollar\", \"currency\"],\n    \"char\": \"\uD83D\uDCB6\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"pound\": {\n    \"keywords\": [\"british\", \"sterling\", \"money\", \"sales\", \"bills\", \"uk\", \"england\", \"currency\"],\n    \"char\": \"\uD83D\uDCB7\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"moneybag\": {\n    \"keywords\": [\"dollar\", \"payment\", \"coins\", \"sale\"],\n    \"char\": \"\uD83D\uDCB0\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"credit_card\": {\n    \"keywords\": [\"money\", \"sales\", \"dollar\", \"bill\", \"payment\", \"shopping\"],\n    \"char\": \"\uD83D\uDCB3\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"gem\": {\n    \"keywords\": [\"blue\", \"ruby\", \"diamond\", \"jewelry\"],\n    \"char\": \"\uD83D\uDC8E\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"balance_scale\": {\n    \"keywords\": [\"law\", \"fairness\", \"weight\"],\n    \"char\": \"\u2696\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"toolbox\": {\n    \"keywords\": [\"tools\", \"diy\", \"fix\", \"maintainer\", \"mechanic\"],\n    \"char\": \"\uD83E\uDDF0\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"wrench\": {\n    \"keywords\": [\"tools\", \"diy\", \"ikea\", \"fix\", \"maintainer\"],\n    \"char\": \"\uD83D\uDD27\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"hammer\": {\n    \"keywords\": [\"tools\", \"build\", \"create\"],\n    \"char\": \"\uD83D\uDD28\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"hammer_and_pick\": {\n    \"keywords\": [\"tools\", \"build\", \"create\"],\n    \"char\": \"\u2692\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"hammer_and_wrench\": {\n    \"keywords\": [\"tools\", \"build\", \"create\"],\n    \"char\": \"\uD83D\uDEE0\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"pick\": {\n    \"keywords\": [\"tools\", \"dig\"],\n    \"char\": \"\u26CF\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"nut_and_bolt\": {\n    \"keywords\": [\"handy\", \"tools\", \"fix\"],\n    \"char\": \"\uD83D\uDD29\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"gear\": {\n    \"keywords\": [\"cog\"],\n    \"char\": \"\u2699\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"brick\": {\n    \"keywords\": [\"bricks\"],\n    \"char\": \"\uD83E\uDDF1\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"chains\": {\n    \"keywords\": [\"lock\", \"arrest\"],\n    \"char\": \"\u26D3\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"magnet\": {\n    \"keywords\": [\"attraction\", \"magnetic\"],\n    \"char\": \"\uD83E\uDDF2\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"gun\": {\n    \"keywords\": [\"violence\", \"weapon\", \"pistol\", \"revolver\"],\n    \"char\": \"\uD83D\uDD2B\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"bomb\": {\n    \"keywords\": [\"boom\", \"explode\", \"explosion\", \"terrorism\"],\n    \"char\": \"\uD83D\uDCA3\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"firecracker\": {\n    \"keywords\": [\"dynamite\", \"boom\", \"explode\", \"explosion\", \"explosive\"],\n    \"char\": \"\uD83E\uDDE8\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"hocho\": {\n    \"keywords\": [\"knife\", \"blade\", \"cutlery\", \"kitchen\", \"weapon\"],\n    \"char\": \"\uD83D\uDD2A\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"dagger\": {\n    \"keywords\": [\"weapon\"],\n    \"char\": \"\uD83D\uDDE1\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"crossed_swords\": {\n    \"keywords\": [\"weapon\"],\n    \"char\": \"\u2694\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"shield\": {\n    \"keywords\": [\"protection\", \"security\"],\n    \"char\": \"\uD83D\uDEE1\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"smoking\": {\n    \"keywords\": [\"kills\", \"tobacco\", \"cigarette\", \"joint\", \"smoke\"],\n    \"char\": \"\uD83D\uDEAC\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"skull_and_crossbones\": {\n    \"keywords\": [\"poison\", \"danger\", \"deadly\", \"scary\", \"death\", \"pirate\", \"evil\"],\n    \"char\": \"\u2620\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"coffin\": {\n    \"keywords\": [\"vampire\", \"dead\", \"die\", \"death\", \"rip\", \"graveyard\", \"cemetery\", \"casket\", \"funeral\", \"box\"],\n    \"char\": \"\u26B0\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"funeral_urn\": {\n    \"keywords\": [\"dead\", \"die\", \"death\", \"rip\", \"ashes\"],\n    \"char\": \"\u26B1\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"amphora\": {\n    \"keywords\": [\"vase\", \"jar\"],\n    \"char\": \"\uD83C\uDFFA\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"crystal_ball\": {\n    \"keywords\": [\"disco\", \"party\", \"magic\", \"circus\", \"fortune_teller\"],\n    \"char\": \"\uD83D\uDD2E\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"prayer_beads\": {\n    \"keywords\": [\"dhikr\", \"religious\"],\n    \"char\": \"\uD83D\uDCFF\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"nazar_amulet\": {\n    \"keywords\": [\"bead\", \"charm\"],\n    \"char\": \"\uD83E\uDDFF\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"barber\": {\n    \"keywords\": [\"hair\", \"salon\", \"style\"],\n    \"char\": \"\uD83D\uDC88\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"alembic\": {\n    \"keywords\": [\"distilling\", \"science\", \"experiment\", \"chemistry\"],\n    \"char\": \"\u2697\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"telescope\": {\n    \"keywords\": [\"stars\", \"space\", \"zoom\", \"science\", \"astronomy\"],\n    \"char\": \"\uD83D\uDD2D\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"microscope\": {\n    \"keywords\": [\"laboratory\", \"experiment\", \"zoomin\", \"science\", \"study\"],\n    \"char\": \"\uD83D\uDD2C\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"hole\": {\n    \"keywords\": [\"embarrassing\"],\n    \"char\": \"\uD83D\uDD73\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"pill\": {\n    \"keywords\": [\"health\", \"medicine\", \"doctor\", \"pharmacy\", \"drug\"],\n    \"char\": \"\uD83D\uDC8A\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"syringe\": {\n    \"keywords\": [\"health\", \"hospital\", \"drugs\", \"blood\", \"medicine\", \"needle\", \"doctor\", \"nurse\"],\n    \"char\": \"\uD83D\uDC89\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"dna\": {\n    \"keywords\": [\"biologist\", \"genetics\", \"life\"],\n    \"char\": \"\uD83E\uDDEC\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"microbe\": {\n    \"keywords\": [\"amoeba\", \"bacteria\", \"germs\"],\n    \"char\": \"\uD83E\uDDA0\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"petri_dish\": {\n    \"keywords\": [\"bacteria\", \"biology\", \"culture\", \"lab\"],\n    \"char\": \"\uD83E\uDDEB\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"test_tube\": {\n    \"keywords\": [\"chemistry\", \"experiment\", \"lab\", \"science\"],\n    \"char\": \"\uD83E\uDDEA\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"thermometer\": {\n    \"keywords\": [\"weather\", \"temperature\", \"hot\", \"cold\"],\n    \"char\": \"\uD83C\uDF21\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"broom\": {\n    \"keywords\": [\"cleaning\", \"sweeping\", \"witch\"],\n    \"char\": \"\uD83E\uDDF9\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"basket\": {\n    \"keywords\": [\"laundry\"],\n    \"char\": \"\uD83E\uDDFA\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"toilet_paper\": {\n    \"keywords\": [\"roll\"],\n    \"char\": \"\uD83E\uDDFB\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"label\": {\n    \"keywords\": [\"sale\", \"tag\"],\n    \"char\": \"\uD83C\uDFF7\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"bookmark\": {\n    \"keywords\": [\"favorite\", \"label\", \"save\"],\n    \"char\": \"\uD83D\uDD16\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"toilet\": {\n    \"keywords\": [\"restroom\", \"wc\", \"washroom\", \"bathroom\", \"potty\"],\n    \"char\": \"\uD83D\uDEBD\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"shower\": {\n    \"keywords\": [\"clean\", \"water\", \"bathroom\"],\n    \"char\": \"\uD83D\uDEBF\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"bathtub\": {\n    \"keywords\": [\"clean\", \"shower\", \"bathroom\"],\n    \"char\": \"\uD83D\uDEC1\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"soap\": {\n    \"keywords\": [\"bar\", \"bathing\", \"cleaning\", \"lather\"],\n    \"char\": \"\uD83E\uDDFC\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"sponge\": {\n    \"keywords\": [\"absorbing\", \"cleaning\", \"porous\"],\n    \"char\": \"\uD83E\uDDFD\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"lotion_bottle\": {\n    \"keywords\": [\"moisturizer\", \"sunscreen\"],\n    \"char\": \"\uD83E\uDDF4\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"key\": {\n    \"keywords\": [\"lock\", \"door\", \"password\"],\n    \"char\": \"\uD83D\uDD11\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"old_key\": {\n    \"keywords\": [\"lock\", \"door\", \"password\"],\n    \"char\": \"\uD83D\uDDDD\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"couch_and_lamp\": {\n    \"keywords\": [\"read\", \"chill\"],\n    \"char\": \"\uD83D\uDECB\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"sleeping_bed\": {\n    \"keywords\": [\"bed\", \"rest\"],\n    \"char\": \"\uD83D\uDECC\",\n    \"fitzpatrick_scale\": true,\n    \"category\": \"objects\"\n  },\n  \"bed\": {\n    \"keywords\": [\"sleep\", \"rest\"],\n    \"char\": \"\uD83D\uDECF\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"door\": {\n    \"keywords\": [\"house\", \"entry\", \"exit\"],\n    \"char\": \"\uD83D\uDEAA\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"bellhop_bell\": {\n    \"keywords\": [\"service\"],\n    \"char\": \"\uD83D\uDECE\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"teddy_bear\": {\n    \"keywords\": [\"plush\", \"stuffed\"],\n    \"char\": \"\uD83E\uDDF8\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"framed_picture\": {\n    \"keywords\": [\"photography\"],\n    \"char\": \"\uD83D\uDDBC\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"world_map\": {\n    \"keywords\": [\"location\", \"direction\"],\n    \"char\": \"\uD83D\uDDFA\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"parasol_on_ground\": {\n    \"keywords\": [\"weather\", \"summer\"],\n    \"char\": \"\u26F1\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"moyai\": {\n    \"keywords\": [\"rock\", \"easter island\", \"moai\"],\n    \"char\": \"\uD83D\uDDFF\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"shopping\": {\n    \"keywords\": [\"mall\", \"buy\", \"purchase\"],\n    \"char\": \"\uD83D\uDECD\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"shopping_cart\": {\n    \"keywords\": [\"trolley\"],\n    \"char\": \"\uD83D\uDED2\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"balloon\": {\n    \"keywords\": [\"party\", \"celebration\", \"birthday\", \"circus\"],\n    \"char\": \"\uD83C\uDF88\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"flags\": {\n    \"keywords\": [\"fish\", \"japanese\", \"koinobori\", \"carp\", \"banner\"],\n    \"char\": \"\uD83C\uDF8F\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"ribbon\": {\n    \"keywords\": [\"decoration\", \"pink\", \"girl\", \"bowtie\"],\n    \"char\": \"\uD83C\uDF80\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"gift\": {\n    \"keywords\": [\"present\", \"birthday\", \"christmas\", \"xmas\"],\n    \"char\": \"\uD83C\uDF81\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"confetti_ball\": {\n    \"keywords\": [\"festival\", \"party\", \"birthday\", \"circus\"],\n    \"char\": \"\uD83C\uDF8A\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"tada\": {\n    \"keywords\": [\"party\", \"congratulations\", \"birthday\", \"magic\", \"circus\", \"celebration\"],\n    \"char\": \"\uD83C\uDF89\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"dolls\": {\n    \"keywords\": [\"japanese\", \"toy\", \"kimono\"],\n    \"char\": \"\uD83C\uDF8E\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"wind_chime\": {\n    \"keywords\": [\"nature\", \"ding\", \"spring\", \"bell\"],\n    \"char\": \"\uD83C\uDF90\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"crossed_flags\": {\n    \"keywords\": [\"japanese\", \"nation\", \"country\", \"border\"],\n    \"char\": \"\uD83C\uDF8C\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"izakaya_lantern\": {\n    \"keywords\": [\"light\", \"paper\", \"halloween\", \"spooky\"],\n    \"char\": \"\uD83C\uDFEE\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"red_envelope\": {\n    \"keywords\": [\"gift\"],\n    \"char\": \"\uD83E\uDDE7\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"email\": {\n    \"keywords\": [\"letter\", \"postal\", \"inbox\", \"communication\"],\n    \"char\": \"\u2709\uFE0F\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"envelope_with_arrow\": {\n    \"keywords\": [\"email\", \"communication\"],\n    \"char\": \"\uD83D\uDCE9\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"incoming_envelope\": {\n    \"keywords\": [\"email\", \"inbox\"],\n    \"char\": \"\uD83D\uDCE8\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"e-mail\": {\n    \"keywords\": [\"communication\", \"inbox\"],\n    \"char\": \"\uD83D\uDCE7\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"love_letter\": {\n    \"keywords\": [\"email\", \"like\", \"affection\", \"envelope\", \"valentines\"],\n    \"char\": \"\uD83D\uDC8C\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"postbox\": {\n    \"keywords\": [\"email\", \"letter\", \"envelope\"],\n    \"char\": \"\uD83D\uDCEE\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"mailbox_closed\": {\n    \"keywords\": [\"email\", \"communication\", \"inbox\"],\n    \"char\": \"\uD83D\uDCEA\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"mailbox\": {\n    \"keywords\": [\"email\", \"inbox\", \"communication\"],\n    \"char\": \"\uD83D\uDCEB\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"mailbox_with_mail\": {\n    \"keywords\": [\"email\", \"inbox\", \"communication\"],\n    \"char\": \"\uD83D\uDCEC\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"mailbox_with_no_mail\": {\n    \"keywords\": [\"email\", \"inbox\"],\n    \"char\": \"\uD83D\uDCED\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"package\": {\n    \"keywords\": [\"mail\", \"gift\", \"cardboard\", \"box\", \"moving\"],\n    \"char\": \"\uD83D\uDCE6\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"postal_horn\": {\n    \"keywords\": [\"instrument\", \"music\"],\n    \"char\": \"\uD83D\uDCEF\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"inbox_tray\": {\n    \"keywords\": [\"email\", \"documents\"],\n    \"char\": \"\uD83D\uDCE5\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"outbox_tray\": {\n    \"keywords\": [\"inbox\", \"email\"],\n    \"char\": \"\uD83D\uDCE4\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"scroll\": {\n    \"keywords\": [\"documents\", \"ancient\", \"history\", \"paper\"],\n    \"char\": \"\uD83D\uDCDC\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"page_with_curl\": {\n    \"keywords\": [\"documents\", \"office\", \"paper\"],\n    \"char\": \"\uD83D\uDCC3\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"bookmark_tabs\": {\n    \"keywords\": [\"favorite\", \"save\", \"order\", \"tidy\"],\n    \"char\": \"\uD83D\uDCD1\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"receipt\": {\n    \"keywords\": [\"accounting\", \"expenses\"],\n    \"char\": \"\uD83E\uDDFE\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"bar_chart\": {\n    \"keywords\": [\"graph\", \"presentation\", \"stats\"],\n    \"char\": \"\uD83D\uDCCA\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"chart_with_upwards_trend\": {\n    \"keywords\": [\"graph\", \"presentation\", \"stats\", \"recovery\", \"business\", \"economics\", \"money\", \"sales\", \"good\", \"success\"],\n    \"char\": \"\uD83D\uDCC8\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"chart_with_downwards_trend\": {\n    \"keywords\": [\"graph\", \"presentation\", \"stats\", \"recession\", \"business\", \"economics\", \"money\", \"sales\", \"bad\", \"failure\"],\n    \"char\": \"\uD83D\uDCC9\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"page_facing_up\": {\n    \"keywords\": [\"documents\", \"office\", \"paper\", \"information\"],\n    \"char\": \"\uD83D\uDCC4\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"date\": {\n    \"keywords\": [\"calendar\", \"schedule\"],\n    \"char\": \"\uD83D\uDCC5\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"calendar\": {\n    \"keywords\": [\"schedule\", \"date\", \"planning\"],\n    \"char\": \"\uD83D\uDCC6\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"spiral_calendar\": {\n    \"keywords\": [\"date\", \"schedule\", \"planning\"],\n    \"char\": \"\uD83D\uDDD3\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"card_index\": {\n    \"keywords\": [\"business\", \"stationery\"],\n    \"char\": \"\uD83D\uDCC7\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"card_file_box\": {\n    \"keywords\": [\"business\", \"stationery\"],\n    \"char\": \"\uD83D\uDDC3\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"ballot_box\": {\n    \"keywords\": [\"election\", \"vote\"],\n    \"char\": \"\uD83D\uDDF3\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"file_cabinet\": {\n    \"keywords\": [\"filing\", \"organizing\"],\n    \"char\": \"\uD83D\uDDC4\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"clipboard\": {\n    \"keywords\": [\"stationery\", \"documents\"],\n    \"char\": \"\uD83D\uDCCB\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"spiral_notepad\": {\n    \"keywords\": [\"memo\", \"stationery\"],\n    \"char\": \"\uD83D\uDDD2\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"file_folder\": {\n    \"keywords\": [\"documents\", \"business\", \"office\"],\n    \"char\": \"\uD83D\uDCC1\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"open_file_folder\": {\n    \"keywords\": [\"documents\", \"load\"],\n    \"char\": \"\uD83D\uDCC2\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"card_index_dividers\": {\n    \"keywords\": [\"organizing\", \"business\", \"stationery\"],\n    \"char\": \"\uD83D\uDDC2\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"newspaper_roll\": {\n    \"keywords\": [\"press\", \"headline\"],\n    \"char\": \"\uD83D\uDDDE\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"newspaper\": {\n    \"keywords\": [\"press\", \"headline\"],\n    \"char\": \"\uD83D\uDCF0\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"notebook\": {\n    \"keywords\": [\"stationery\", \"record\", \"notes\", \"paper\", \"study\"],\n    \"char\": \"\uD83D\uDCD3\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"closed_book\": {\n    \"keywords\": [\"read\", \"library\", \"knowledge\", \"textbook\", \"learn\"],\n    \"char\": \"\uD83D\uDCD5\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"green_book\": {\n    \"keywords\": [\"read\", \"library\", \"knowledge\", \"study\"],\n    \"char\": \"\uD83D\uDCD7\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"blue_book\": {\n    \"keywords\": [\"read\", \"library\", \"knowledge\", \"learn\", \"study\"],\n    \"char\": \"\uD83D\uDCD8\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"orange_book\": {\n    \"keywords\": [\"read\", \"library\", \"knowledge\", \"textbook\", \"study\"],\n    \"char\": \"\uD83D\uDCD9\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"notebook_with_decorative_cover\": {\n    \"keywords\": [\"classroom\", \"notes\", \"record\", \"paper\", \"study\"],\n    \"char\": \"\uD83D\uDCD4\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"ledger\": {\n    \"keywords\": [\"notes\", \"paper\"],\n    \"char\": \"\uD83D\uDCD2\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"books\": {\n    \"keywords\": [\"literature\", \"library\", \"study\"],\n    \"char\": \"\uD83D\uDCDA\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"open_book\": {\n    \"keywords\": [\"book\", \"read\", \"library\", \"knowledge\", \"literature\", \"learn\", \"study\"],\n    \"char\": \"\uD83D\uDCD6\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"safety_pin\": {\n    \"keywords\": [\"diaper\"],\n    \"char\": \"\uD83E\uDDF7\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"link\": {\n    \"keywords\": [\"rings\", \"url\"],\n    \"char\": \"\uD83D\uDD17\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"paperclip\": {\n    \"keywords\": [\"documents\", \"stationery\"],\n    \"char\": \"\uD83D\uDCCE\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"paperclips\": {\n    \"keywords\": [\"documents\", \"stationery\"],\n    \"char\": \"\uD83D\uDD87\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"scissors\": {\n    \"keywords\": [\"stationery\", \"cut\"],\n    \"char\": \"\u2702\uFE0F\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"triangular_ruler\": {\n    \"keywords\": [\"stationery\", \"math\", \"architect\", \"sketch\"],\n    \"char\": \"\uD83D\uDCD0\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"straight_ruler\": {\n    \"keywords\": [\"stationery\", \"calculate\", \"length\", \"math\", \"school\", \"drawing\", \"architect\", \"sketch\"],\n    \"char\": \"\uD83D\uDCCF\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"abacus\": {\n    \"keywords\": [\"calculation\"],\n    \"char\": \"\uD83E\uDDEE\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"pushpin\": {\n    \"keywords\": [\"stationery\", \"mark\", \"here\"],\n    \"char\": \"\uD83D\uDCCC\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"round_pushpin\": {\n    \"keywords\": [\"stationery\", \"location\", \"map\", \"here\"],\n    \"char\": \"\uD83D\uDCCD\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"triangular_flag_on_post\": {\n    \"keywords\": [\"mark\", \"milestone\", \"place\"],\n    \"char\": \"\uD83D\uDEA9\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"white_flag\": {\n    \"keywords\": [\"losing\", \"loser\", \"lost\", \"surrender\", \"give up\", \"fail\"],\n    \"char\": \"\uD83C\uDFF3\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"black_flag\": {\n    \"keywords\": [\"pirate\"],\n    \"char\": \"\uD83C\uDFF4\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"rainbow_flag\": {\n    \"keywords\": [\"flag\", \"rainbow\", \"pride\", \"gay\", \"lgbt\", \"glbt\", \"queer\", \"homosexual\", \"lesbian\", \"bisexual\", \"transgender\"],\n    \"char\": \"\uD83C\uDFF3\uFE0F\u200D\uD83C\uDF08\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"closed_lock_with_key\": {\n    \"keywords\": [\"security\", \"privacy\"],\n    \"char\": \"\uD83D\uDD10\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"lock\": {\n    \"keywords\": [\"security\", \"password\", \"padlock\"],\n    \"char\": \"\uD83D\uDD12\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"unlock\": {\n    \"keywords\": [\"privacy\", \"security\"],\n    \"char\": \"\uD83D\uDD13\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"lock_with_ink_pen\": {\n    \"keywords\": [\"security\", \"secret\"],\n    \"char\": \"\uD83D\uDD0F\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"pen\": {\n    \"keywords\": [\"stationery\", \"writing\", \"write\"],\n    \"char\": \"\uD83D\uDD8A\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"fountain_pen\": {\n    \"keywords\": [\"stationery\", \"writing\", \"write\"],\n    \"char\": \"\uD83D\uDD8B\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"black_nib\": {\n    \"keywords\": [\"pen\", \"stationery\", \"writing\", \"write\"],\n    \"char\": \"\u2712\uFE0F\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"memo\": {\n    \"keywords\": [\"write\", \"documents\", \"stationery\", \"pencil\", \"paper\", \"writing\", \"legal\", \"exam\", \"quiz\", \"test\", \"study\", \"compose\"],\n    \"char\": \"\uD83D\uDCDD\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"pencil2\": {\n    \"keywords\": [\"stationery\", \"write\", \"paper\", \"writing\", \"school\", \"study\"],\n    \"char\": \"\u270F\uFE0F\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"crayon\": {\n    \"keywords\": [\"drawing\", \"creativity\"],\n    \"char\": \"\uD83D\uDD8D\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"paintbrush\": {\n    \"keywords\": [\"drawing\", \"creativity\", \"art\"],\n    \"char\": \"\uD83D\uDD8C\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"mag\": {\n    \"keywords\": [\"search\", \"zoom\", \"find\", \"detective\"],\n    \"char\": \"\uD83D\uDD0D\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"mag_right\": {\n    \"keywords\": [\"search\", \"zoom\", \"find\", \"detective\"],\n    \"char\": \"\uD83D\uDD0E\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"objects\"\n  },\n  \"heart\": {\n    \"keywords\": [\"love\", \"like\", \"valentines\"],\n    \"char\": \"\u2764\uFE0F\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"orange_heart\": {\n    \"keywords\": [\"love\", \"like\", \"affection\", \"valentines\"],\n    \"char\": \"\uD83E\uDDE1\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"yellow_heart\": {\n    \"keywords\": [\"love\", \"like\", \"affection\", \"valentines\"],\n    \"char\": \"\uD83D\uDC9B\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"green_heart\": {\n    \"keywords\": [\"love\", \"like\", \"affection\", \"valentines\"],\n    \"char\": \"\uD83D\uDC9A\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"blue_heart\": {\n    \"keywords\": [\"love\", \"like\", \"affection\", \"valentines\"],\n    \"char\": \"\uD83D\uDC99\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"purple_heart\": {\n    \"keywords\": [\"love\", \"like\", \"affection\", \"valentines\"],\n    \"char\": \"\uD83D\uDC9C\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"black_heart\": {\n    \"keywords\": [\"evil\"],\n    \"char\": \"\uD83D\uDDA4\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"broken_heart\": {\n    \"keywords\": [\"sad\", \"sorry\", \"break\", \"heart\", \"heartbreak\"],\n    \"char\": \"\uD83D\uDC94\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"heavy_heart_exclamation\": {\n    \"keywords\": [\"decoration\", \"love\"],\n    \"char\": \"\u2763\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"two_hearts\": {\n    \"keywords\": [\"love\", \"like\", \"affection\", \"valentines\", \"heart\"],\n    \"char\": \"\uD83D\uDC95\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"revolving_hearts\": {\n    \"keywords\": [\"love\", \"like\", \"affection\", \"valentines\"],\n    \"char\": \"\uD83D\uDC9E\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"heartbeat\": {\n    \"keywords\": [\"love\", \"like\", \"affection\", \"valentines\", \"pink\", \"heart\"],\n    \"char\": \"\uD83D\uDC93\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"heartpulse\": {\n    \"keywords\": [\"like\", \"love\", \"affection\", \"valentines\", \"pink\"],\n    \"char\": \"\uD83D\uDC97\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"sparkling_heart\": {\n    \"keywords\": [\"love\", \"like\", \"affection\", \"valentines\"],\n    \"char\": \"\uD83D\uDC96\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"cupid\": {\n    \"keywords\": [\"love\", \"like\", \"heart\", \"affection\", \"valentines\"],\n    \"char\": \"\uD83D\uDC98\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"gift_heart\": {\n    \"keywords\": [\"love\", \"valentines\"],\n    \"char\": \"\uD83D\uDC9D\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"heart_decoration\": {\n    \"keywords\": [\"purple-square\", \"love\", \"like\"],\n    \"char\": \"\uD83D\uDC9F\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"peace_symbol\": {\n    \"keywords\": [\"hippie\"],\n    \"char\": \"\u262E\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"latin_cross\": {\n    \"keywords\": [\"christianity\"],\n    \"char\": \"\u271D\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"star_and_crescent\": {\n    \"keywords\": [\"islam\"],\n    \"char\": \"\u262A\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"om\": {\n    \"keywords\": [\"hinduism\", \"buddhism\", \"sikhism\", \"jainism\"],\n    \"char\": \"\uD83D\uDD49\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"wheel_of_dharma\": {\n    \"keywords\": [\"hinduism\", \"buddhism\", \"sikhism\", \"jainism\"],\n    \"char\": \"\u2638\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"star_of_david\": {\n    \"keywords\": [\"judaism\"],\n    \"char\": \"\u2721\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"six_pointed_star\": {\n    \"keywords\": [\"purple-square\", \"religion\", \"jewish\", \"hexagram\"],\n    \"char\": \"\uD83D\uDD2F\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"menorah\": {\n    \"keywords\": [\"hanukkah\", \"candles\", \"jewish\"],\n    \"char\": \"\uD83D\uDD4E\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"yin_yang\": {\n    \"keywords\": [\"balance\"],\n    \"char\": \"\u262F\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"orthodox_cross\": {\n    \"keywords\": [\"suppedaneum\", \"religion\"],\n    \"char\": \"\u2626\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"place_of_worship\": {\n    \"keywords\": [\"religion\", \"church\", \"temple\", \"prayer\"],\n    \"char\": \"\uD83D\uDED0\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"ophiuchus\": {\n    \"keywords\": [\"sign\", \"purple-square\", \"constellation\", \"astrology\"],\n    \"char\": \"\u26CE\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"aries\": {\n    \"keywords\": [\"sign\", \"purple-square\", \"zodiac\", \"astrology\"],\n    \"char\": \"\u2648\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"taurus\": {\n    \"keywords\": [\"purple-square\", \"sign\", \"zodiac\", \"astrology\"],\n    \"char\": \"\u2649\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"gemini\": {\n    \"keywords\": [\"sign\", \"zodiac\", \"purple-square\", \"astrology\"],\n    \"char\": \"\u264A\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"cancer\": {\n    \"keywords\": [\"sign\", \"zodiac\", \"purple-square\", \"astrology\"],\n    \"char\": \"\u264B\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"leo\": {\n    \"keywords\": [\"sign\", \"purple-square\", \"zodiac\", \"astrology\"],\n    \"char\": \"\u264C\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"virgo\": {\n    \"keywords\": [\"sign\", \"zodiac\", \"purple-square\", \"astrology\"],\n    \"char\": \"\u264D\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"libra\": {\n    \"keywords\": [\"sign\", \"purple-square\", \"zodiac\", \"astrology\"],\n    \"char\": \"\u264E\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"scorpius\": {\n    \"keywords\": [\"sign\", \"zodiac\", \"purple-square\", \"astrology\", \"scorpio\"],\n    \"char\": \"\u264F\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"sagittarius\": {\n    \"keywords\": [\"sign\", \"zodiac\", \"purple-square\", \"astrology\"],\n    \"char\": \"\u2650\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"capricorn\": {\n    \"keywords\": [\"sign\", \"zodiac\", \"purple-square\", \"astrology\"],\n    \"char\": \"\u2651\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"aquarius\": {\n    \"keywords\": [\"sign\", \"purple-square\", \"zodiac\", \"astrology\"],\n    \"char\": \"\u2652\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"pisces\": {\n    \"keywords\": [\"purple-square\", \"sign\", \"zodiac\", \"astrology\"],\n    \"char\": \"\u2653\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"id\": {\n    \"keywords\": [\"purple-square\", \"words\"],\n    \"char\": \"\uD83C\uDD94\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"atom_symbol\": {\n    \"keywords\": [\"science\", \"physics\", \"chemistry\"],\n    \"char\": \"\u269B\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"u7a7a\": {\n    \"keywords\": [\"kanji\", \"japanese\", \"chinese\", \"empty\", \"sky\", \"blue-square\"],\n    \"char\": \"\uD83C\uDE33\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"u5272\": {\n    \"keywords\": [\"cut\", \"divide\", \"chinese\", \"kanji\", \"pink-square\"],\n    \"char\": \"\uD83C\uDE39\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"radioactive\": {\n    \"keywords\": [\"nuclear\", \"danger\"],\n    \"char\": \"\u2622\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"biohazard\": {\n    \"keywords\": [\"danger\"],\n    \"char\": \"\u2623\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"mobile_phone_off\": {\n    \"keywords\": [\"mute\", \"orange-square\", \"silence\", \"quiet\"],\n    \"char\": \"\uD83D\uDCF4\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"vibration_mode\": {\n    \"keywords\": [\"orange-square\", \"phone\"],\n    \"char\": \"\uD83D\uDCF3\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"u6709\": {\n    \"keywords\": [\"orange-square\", \"chinese\", \"have\", \"kanji\"],\n    \"char\": \"\uD83C\uDE36\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"u7121\": {\n    \"keywords\": [\"nothing\", \"chinese\", \"kanji\", \"japanese\", \"orange-square\"],\n    \"char\": \"\uD83C\uDE1A\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"u7533\": {\n    \"keywords\": [\"chinese\", \"japanese\", \"kanji\", \"orange-square\"],\n    \"char\": \"\uD83C\uDE38\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"u55b6\": {\n    \"keywords\": [\"japanese\", \"opening hours\", \"orange-square\"],\n    \"char\": \"\uD83C\uDE3A\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"u6708\": {\n    \"keywords\": [\"chinese\", \"month\", \"moon\", \"japanese\", \"orange-square\", \"kanji\"],\n    \"char\": \"\uD83C\uDE37\uFE0F\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"eight_pointed_black_star\": {\n    \"keywords\": [\"orange-square\", \"shape\", \"polygon\"],\n    \"char\": \"\u2734\uFE0F\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"vs\": {\n    \"keywords\": [\"words\", \"orange-square\"],\n    \"char\": \"\uD83C\uDD9A\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"accept\": {\n    \"keywords\": [\"ok\", \"good\", \"chinese\", \"kanji\", \"agree\", \"yes\", \"orange-circle\"],\n    \"char\": \"\uD83C\uDE51\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"white_flower\": {\n    \"keywords\": [\"japanese\", \"spring\"],\n    \"char\": \"\uD83D\uDCAE\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"ideograph_advantage\": {\n    \"keywords\": [\"chinese\", \"kanji\", \"obtain\", \"get\", \"circle\"],\n    \"char\": \"\uD83C\uDE50\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"secret\": {\n    \"keywords\": [\"privacy\", \"chinese\", \"sshh\", \"kanji\", \"red-circle\"],\n    \"char\": \"\u3299\uFE0F\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"congratulations\": {\n    \"keywords\": [\"chinese\", \"kanji\", \"japanese\", \"red-circle\"],\n    \"char\": \"\u3297\uFE0F\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"u5408\": {\n    \"keywords\": [\"japanese\", \"chinese\", \"join\", \"kanji\", \"red-square\"],\n    \"char\": \"\uD83C\uDE34\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"u6e80\": {\n    \"keywords\": [\"full\", \"chinese\", \"japanese\", \"red-square\", \"kanji\"],\n    \"char\": \"\uD83C\uDE35\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"u7981\": {\n    \"keywords\": [\"kanji\", \"japanese\", \"chinese\", \"forbidden\", \"limit\", \"restricted\", \"red-square\"],\n    \"char\": \"\uD83C\uDE32\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"a\": {\n    \"keywords\": [\"red-square\", \"alphabet\", \"letter\"],\n    \"char\": \"\uD83C\uDD70\uFE0F\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"b\": {\n    \"keywords\": [\"red-square\", \"alphabet\", \"letter\"],\n    \"char\": \"\uD83C\uDD71\uFE0F\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"ab\": {\n    \"keywords\": [\"red-square\", \"alphabet\"],\n    \"char\": \"\uD83C\uDD8E\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"cl\": {\n    \"keywords\": [\"alphabet\", \"words\", \"red-square\"],\n    \"char\": \"\uD83C\uDD91\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"o2\": {\n    \"keywords\": [\"alphabet\", \"red-square\", \"letter\"],\n    \"char\": \"\uD83C\uDD7E\uFE0F\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"sos\": {\n    \"keywords\": [\"help\", \"red-square\", \"words\", \"emergency\", \"911\"],\n    \"char\": \"\uD83C\uDD98\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"no_entry\": {\n    \"keywords\": [\"limit\", \"security\", \"privacy\", \"bad\", \"denied\", \"stop\", \"circle\"],\n    \"char\": \"\u26D4\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"name_badge\": {\n    \"keywords\": [\"fire\", \"forbid\"],\n    \"char\": \"\uD83D\uDCDB\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"no_entry_sign\": {\n    \"keywords\": [\"forbid\", \"stop\", \"limit\", \"denied\", \"disallow\", \"circle\"],\n    \"char\": \"\uD83D\uDEAB\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"x\": {\n    \"keywords\": [\"no\", \"delete\", \"remove\", \"cancel\", \"red\"],\n    \"char\": \"\u274C\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"o\": {\n    \"keywords\": [\"circle\", \"round\"],\n    \"char\": \"\u2B55\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"stop_sign\": {\n    \"keywords\": [\"stop\"],\n    \"char\": \"\uD83D\uDED1\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"anger\": {\n    \"keywords\": [\"angry\", \"mad\"],\n    \"char\": \"\uD83D\uDCA2\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"hotsprings\": {\n    \"keywords\": [\"bath\", \"warm\", \"relax\"],\n    \"char\": \"\u2668\uFE0F\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"no_pedestrians\": {\n    \"keywords\": [\"rules\", \"crossing\", \"walking\", \"circle\"],\n    \"char\": \"\uD83D\uDEB7\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"do_not_litter\": {\n    \"keywords\": [\"trash\", \"bin\", \"garbage\", \"circle\"],\n    \"char\": \"\uD83D\uDEAF\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"no_bicycles\": {\n    \"keywords\": [\"cyclist\", \"prohibited\", \"circle\"],\n    \"char\": \"\uD83D\uDEB3\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"non-potable_water\": {\n    \"keywords\": [\"drink\", \"faucet\", \"tap\", \"circle\"],\n    \"char\": \"\uD83D\uDEB1\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"underage\": {\n    \"keywords\": [\"18\", \"drink\", \"pub\", \"night\", \"minor\", \"circle\"],\n    \"char\": \"\uD83D\uDD1E\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"no_mobile_phones\": {\n    \"keywords\": [\"iphone\", \"mute\", \"circle\"],\n    \"char\": \"\uD83D\uDCF5\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"exclamation\": {\n    \"keywords\": [\"heavy_exclamation_mark\", \"danger\", \"surprise\", \"punctuation\", \"wow\", \"warning\"],\n    \"char\": \"\u2757\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"grey_exclamation\": {\n    \"keywords\": [\"surprise\", \"punctuation\", \"gray\", \"wow\", \"warning\"],\n    \"char\": \"\u2755\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"question\": {\n    \"keywords\": [\"doubt\", \"confused\"],\n    \"char\": \"\u2753\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"grey_question\": {\n    \"keywords\": [\"doubts\", \"gray\", \"huh\", \"confused\"],\n    \"char\": \"\u2754\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"bangbang\": {\n    \"keywords\": [\"exclamation\", \"surprise\"],\n    \"char\": \"\u203C\uFE0F\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"interrobang\": {\n    \"keywords\": [\"wat\", \"punctuation\", \"surprise\"],\n    \"char\": \"\u2049\uFE0F\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"100\": {\n    \"keywords\": [\"score\", \"perfect\", \"numbers\", \"century\", \"exam\", \"quiz\", \"test\", \"pass\", \"hundred\"],\n    \"char\": \"\uD83D\uDCAF\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"low_brightness\": {\n    \"keywords\": [\"sun\", \"afternoon\", \"warm\", \"summer\"],\n    \"char\": \"\uD83D\uDD05\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"high_brightness\": {\n    \"keywords\": [\"sun\", \"light\"],\n    \"char\": \"\uD83D\uDD06\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"trident\": {\n    \"keywords\": [\"weapon\", \"spear\"],\n    \"char\": \"\uD83D\uDD31\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"fleur_de_lis\": {\n    \"keywords\": [\"decorative\", \"scout\"],\n    \"char\": \"\u269C\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"part_alternation_mark\": {\n    \"keywords\": [\"graph\", \"presentation\", \"stats\", \"business\", \"economics\", \"bad\"],\n    \"char\": \"\u303D\uFE0F\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"warning\": {\n    \"keywords\": [\"exclamation\", \"wip\", \"alert\", \"error\", \"problem\", \"issue\"],\n    \"char\": \"\u26A0\uFE0F\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"children_crossing\": {\n    \"keywords\": [\"school\", \"warning\", \"danger\", \"sign\", \"driving\", \"yellow-diamond\"],\n    \"char\": \"\uD83D\uDEB8\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"beginner\": {\n    \"keywords\": [\"badge\", \"shield\"],\n    \"char\": \"\uD83D\uDD30\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"recycle\": {\n    \"keywords\": [\"arrow\", \"environment\", \"garbage\", \"trash\"],\n    \"char\": \"\u267B\uFE0F\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"u6307\": {\n    \"keywords\": [\"chinese\", \"point\", \"green-square\", \"kanji\"],\n    \"char\": \"\uD83C\uDE2F\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"chart\": {\n    \"keywords\": [\"green-square\", \"graph\", \"presentation\", \"stats\"],\n    \"char\": \"\uD83D\uDCB9\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"sparkle\": {\n    \"keywords\": [\"stars\", \"green-square\", \"awesome\", \"good\", \"fireworks\"],\n    \"char\": \"\u2747\uFE0F\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"eight_spoked_asterisk\": {\n    \"keywords\": [\"star\", \"sparkle\", \"green-square\"],\n    \"char\": \"\u2733\uFE0F\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"negative_squared_cross_mark\": {\n    \"keywords\": [\"x\", \"green-square\", \"no\", \"deny\"],\n    \"char\": \"\u274E\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"white_check_mark\": {\n    \"keywords\": [\"green-square\", \"ok\", \"agree\", \"vote\", \"election\", \"answer\", \"tick\"],\n    \"char\": \"\u2705\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"diamond_shape_with_a_dot_inside\": {\n    \"keywords\": [\"jewel\", \"blue\", \"gem\", \"crystal\", \"fancy\"],\n    \"char\": \"\uD83D\uDCA0\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"cyclone\": {\n    \"keywords\": [\"weather\", \"swirl\", \"blue\", \"cloud\", \"vortex\", \"spiral\", \"whirlpool\", \"spin\", \"tornado\", \"hurricane\", \"typhoon\"],\n    \"char\": \"\uD83C\uDF00\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"loop\": {\n    \"keywords\": [\"tape\", \"cassette\"],\n    \"char\": \"\u27BF\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"globe_with_meridians\": {\n    \"keywords\": [\"earth\", \"international\", \"world\", \"internet\", \"interweb\", \"i18n\"],\n    \"char\": \"\uD83C\uDF10\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"m\": {\n    \"keywords\": [\"alphabet\", \"blue-circle\", \"letter\"],\n    \"char\": \"\u24C2\uFE0F\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"atm\": {\n    \"keywords\": [\"money\", \"sales\", \"cash\", \"blue-square\", \"payment\", \"bank\"],\n    \"char\": \"\uD83C\uDFE7\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"sa\": {\n    \"keywords\": [\"japanese\", \"blue-square\", \"katakana\"],\n    \"char\": \"\uD83C\uDE02\uFE0F\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"passport_control\": {\n    \"keywords\": [\"custom\", \"blue-square\"],\n    \"char\": \"\uD83D\uDEC2\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"customs\": {\n    \"keywords\": [\"passport\", \"border\", \"blue-square\"],\n    \"char\": \"\uD83D\uDEC3\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"baggage_claim\": {\n    \"keywords\": [\"blue-square\", \"airport\", \"transport\"],\n    \"char\": \"\uD83D\uDEC4\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"left_luggage\": {\n    \"keywords\": [\"blue-square\", \"travel\"],\n    \"char\": \"\uD83D\uDEC5\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"wheelchair\": {\n    \"keywords\": [\"blue-square\", \"disabled\", \"a11y\", \"accessibility\"],\n    \"char\": \"\u267F\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"no_smoking\": {\n    \"keywords\": [\"cigarette\", \"blue-square\", \"smell\", \"smoke\"],\n    \"char\": \"\uD83D\uDEAD\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"wc\": {\n    \"keywords\": [\"toilet\", \"restroom\", \"blue-square\"],\n    \"char\": \"\uD83D\uDEBE\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"parking\": {\n    \"keywords\": [\"cars\", \"blue-square\", \"alphabet\", \"letter\"],\n    \"char\": \"\uD83C\uDD7F\uFE0F\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"potable_water\": {\n    \"keywords\": [\"blue-square\", \"liquid\", \"restroom\", \"cleaning\", \"faucet\"],\n    \"char\": \"\uD83D\uDEB0\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"mens\": {\n    \"keywords\": [\"toilet\", \"restroom\", \"wc\", \"blue-square\", \"gender\", \"male\"],\n    \"char\": \"\uD83D\uDEB9\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"womens\": {\n    \"keywords\": [\"purple-square\", \"woman\", \"female\", \"toilet\", \"loo\", \"restroom\", \"gender\"],\n    \"char\": \"\uD83D\uDEBA\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"baby_symbol\": {\n    \"keywords\": [\"orange-square\", \"child\"],\n    \"char\": \"\uD83D\uDEBC\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"restroom\": {\n    \"keywords\": [\"blue-square\", \"toilet\", \"refresh\", \"wc\", \"gender\"],\n    \"char\": \"\uD83D\uDEBB\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"put_litter_in_its_place\": {\n    \"keywords\": [\"blue-square\", \"sign\", \"human\", \"info\"],\n    \"char\": \"\uD83D\uDEAE\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"cinema\": {\n    \"keywords\": [\"blue-square\", \"record\", \"film\", \"movie\", \"curtain\", \"stage\", \"theater\"],\n    \"char\": \"\uD83C\uDFA6\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"signal_strength\": {\n    \"keywords\": [\"blue-square\", \"reception\", \"phone\", \"internet\", \"connection\", \"wifi\", \"bluetooth\", \"bars\"],\n    \"char\": \"\uD83D\uDCF6\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"koko\": {\n    \"keywords\": [\"blue-square\", \"here\", \"katakana\", \"japanese\", \"destination\"],\n    \"char\": \"\uD83C\uDE01\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"ng\": {\n    \"keywords\": [\"blue-square\", \"words\", \"shape\", \"icon\"],\n    \"char\": \"\uD83C\uDD96\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"ok\": {\n    \"keywords\": [\"good\", \"agree\", \"yes\", \"blue-square\"],\n    \"char\": \"\uD83C\uDD97\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"up\": {\n    \"keywords\": [\"blue-square\", \"above\", \"high\"],\n    \"char\": \"\uD83C\uDD99\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"cool\": {\n    \"keywords\": [\"words\", \"blue-square\"],\n    \"char\": \"\uD83C\uDD92\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"new\": {\n    \"keywords\": [\"blue-square\", \"words\", \"start\"],\n    \"char\": \"\uD83C\uDD95\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"free\": {\n    \"keywords\": [\"blue-square\", \"words\"],\n    \"char\": \"\uD83C\uDD93\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"zero\": {\n    \"keywords\": [\"0\", \"numbers\", \"blue-square\", \"null\"],\n    \"char\": \"0\uFE0F\u20E3\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"one\": {\n    \"keywords\": [\"blue-square\", \"numbers\", \"1\"],\n    \"char\": \"1\uFE0F\u20E3\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"two\": {\n    \"keywords\": [\"numbers\", \"2\", \"prime\", \"blue-square\"],\n    \"char\": \"2\uFE0F\u20E3\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"three\": {\n    \"keywords\": [\"3\", \"numbers\", \"prime\", \"blue-square\"],\n    \"char\": \"3\uFE0F\u20E3\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"four\": {\n    \"keywords\": [\"4\", \"numbers\", \"blue-square\"],\n    \"char\": \"4\uFE0F\u20E3\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"five\": {\n    \"keywords\": [\"5\", \"numbers\", \"blue-square\", \"prime\"],\n    \"char\": \"5\uFE0F\u20E3\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"six\": {\n    \"keywords\": [\"6\", \"numbers\", \"blue-square\"],\n    \"char\": \"6\uFE0F\u20E3\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"seven\": {\n    \"keywords\": [\"7\", \"numbers\", \"blue-square\", \"prime\"],\n    \"char\": \"7\uFE0F\u20E3\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"eight\": {\n    \"keywords\": [\"8\", \"blue-square\", \"numbers\"],\n    \"char\": \"8\uFE0F\u20E3\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"nine\": {\n    \"keywords\": [\"blue-square\", \"numbers\", \"9\"],\n    \"char\": \"9\uFE0F\u20E3\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"keycap_ten\": {\n    \"keywords\": [\"numbers\", \"10\", \"blue-square\"],\n    \"char\": \"\uD83D\uDD1F\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"asterisk\": {\n    \"keywords\": [\"star\", \"keycap\"],\n    \"char\": \"*\u20E3\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"1234\": {\n    \"keywords\": [\"numbers\", \"blue-square\"],\n    \"char\": \"\uD83D\uDD22\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"eject_button\": {\n    \"keywords\": [\"blue-square\"],\n    \"char\": \"\u23CF\uFE0F\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"arrow_forward\": {\n    \"keywords\": [\"blue-square\", \"right\", \"direction\", \"play\"],\n    \"char\": \"\u25B6\uFE0F\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"pause_button\": {\n    \"keywords\": [\"pause\", \"blue-square\"],\n    \"char\": \"\u23F8\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"next_track_button\": {\n    \"keywords\": [\"forward\", \"next\", \"blue-square\"],\n    \"char\": \"\u23ED\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"stop_button\": {\n    \"keywords\": [\"blue-square\"],\n    \"char\": \"\u23F9\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"record_button\": {\n    \"keywords\": [\"blue-square\"],\n    \"char\": \"\u23FA\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"play_or_pause_button\": {\n    \"keywords\": [\"blue-square\", \"play\", \"pause\"],\n    \"char\": \"\u23EF\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"previous_track_button\": {\n    \"keywords\": [\"backward\"],\n    \"char\": \"\u23EE\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"fast_forward\": {\n    \"keywords\": [\"blue-square\", \"play\", \"speed\", \"continue\"],\n    \"char\": \"\u23E9\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"rewind\": {\n    \"keywords\": [\"play\", \"blue-square\"],\n    \"char\": \"\u23EA\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"twisted_rightwards_arrows\": {\n    \"keywords\": [\"blue-square\", \"shuffle\", \"music\", \"random\"],\n    \"char\": \"\uD83D\uDD00\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"repeat\": {\n    \"keywords\": [\"loop\", \"record\"],\n    \"char\": \"\uD83D\uDD01\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"repeat_one\": {\n    \"keywords\": [\"blue-square\", \"loop\"],\n    \"char\": \"\uD83D\uDD02\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"arrow_backward\": {\n    \"keywords\": [\"blue-square\", \"left\", \"direction\"],\n    \"char\": \"\u25C0\uFE0F\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"arrow_up_small\": {\n    \"keywords\": [\"blue-square\", \"triangle\", \"direction\", \"point\", \"forward\", \"top\"],\n    \"char\": \"\uD83D\uDD3C\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"arrow_down_small\": {\n    \"keywords\": [\"blue-square\", \"direction\", \"bottom\"],\n    \"char\": \"\uD83D\uDD3D\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"arrow_double_up\": {\n    \"keywords\": [\"blue-square\", \"direction\", \"top\"],\n    \"char\": \"\u23EB\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"arrow_double_down\": {\n    \"keywords\": [\"blue-square\", \"direction\", \"bottom\"],\n    \"char\": \"\u23EC\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"arrow_right\": {\n    \"keywords\": [\"blue-square\", \"next\"],\n    \"char\": \"\u27A1\uFE0F\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"arrow_left\": {\n    \"keywords\": [\"blue-square\", \"previous\", \"back\"],\n    \"char\": \"\u2B05\uFE0F\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"arrow_up\": {\n    \"keywords\": [\"blue-square\", \"continue\", \"top\", \"direction\"],\n    \"char\": \"\u2B06\uFE0F\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"arrow_down\": {\n    \"keywords\": [\"blue-square\", \"direction\", \"bottom\"],\n    \"char\": \"\u2B07\uFE0F\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"arrow_upper_right\": {\n    \"keywords\": [\"blue-square\", \"point\", \"direction\", \"diagonal\", \"northeast\"],\n    \"char\": \"\u2197\uFE0F\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"arrow_lower_right\": {\n    \"keywords\": [\"blue-square\", \"direction\", \"diagonal\", \"southeast\"],\n    \"char\": \"\u2198\uFE0F\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"arrow_lower_left\": {\n    \"keywords\": [\"blue-square\", \"direction\", \"diagonal\", \"southwest\"],\n    \"char\": \"\u2199\uFE0F\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"arrow_upper_left\": {\n    \"keywords\": [\"blue-square\", \"point\", \"direction\", \"diagonal\", \"northwest\"],\n    \"char\": \"\u2196\uFE0F\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"arrow_up_down\": {\n    \"keywords\": [\"blue-square\", \"direction\", \"way\", \"vertical\"],\n    \"char\": \"\u2195\uFE0F\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"left_right_arrow\": {\n    \"keywords\": [\"shape\", \"direction\", \"horizontal\", \"sideways\"],\n    \"char\": \"\u2194\uFE0F\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"arrows_counterclockwise\": {\n    \"keywords\": [\"blue-square\", \"sync\", \"cycle\"],\n    \"char\": \"\uD83D\uDD04\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"arrow_right_hook\": {\n    \"keywords\": [\"blue-square\", \"return\", \"rotate\", \"direction\"],\n    \"char\": \"\u21AA\uFE0F\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"leftwards_arrow_with_hook\": {\n    \"keywords\": [\"back\", \"return\", \"blue-square\", \"undo\", \"enter\"],\n    \"char\": \"\u21A9\uFE0F\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"arrow_heading_up\": {\n    \"keywords\": [\"blue-square\", \"direction\", \"top\"],\n    \"char\": \"\u2934\uFE0F\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"arrow_heading_down\": {\n    \"keywords\": [\"blue-square\", \"direction\", \"bottom\"],\n    \"char\": \"\u2935\uFE0F\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"hash\": {\n    \"keywords\": [\"symbol\", \"blue-square\", \"twitter\"],\n    \"char\": \"#\uFE0F\u20E3\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"information_source\": {\n    \"keywords\": [\"blue-square\", \"alphabet\", \"letter\"],\n    \"char\": \"\u2139\uFE0F\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"abc\": {\n    \"keywords\": [\"blue-square\", \"alphabet\"],\n    \"char\": \"\uD83D\uDD24\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"abcd\": {\n    \"keywords\": [\"blue-square\", \"alphabet\"],\n    \"char\": \"\uD83D\uDD21\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"capital_abcd\": {\n    \"keywords\": [\"alphabet\", \"words\", \"blue-square\"],\n    \"char\": \"\uD83D\uDD20\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"symbols\": {\n    \"keywords\": [\"blue-square\", \"music\", \"note\", \"ampersand\", \"percent\", \"glyphs\", \"characters\"],\n    \"char\": \"\uD83D\uDD23\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"musical_note\": {\n    \"keywords\": [\"score\", \"tone\", \"sound\"],\n    \"char\": \"\uD83C\uDFB5\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"notes\": {\n    \"keywords\": [\"music\", \"score\"],\n    \"char\": \"\uD83C\uDFB6\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"wavy_dash\": {\n    \"keywords\": [\"draw\", \"line\", \"moustache\", \"mustache\", \"squiggle\", \"scribble\"],\n    \"char\": \"\u3030\uFE0F\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"curly_loop\": {\n    \"keywords\": [\"scribble\", \"draw\", \"shape\", \"squiggle\"],\n    \"char\": \"\u27B0\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"heavy_check_mark\": {\n    \"keywords\": [\"ok\", \"nike\", \"answer\", \"yes\", \"tick\"],\n    \"char\": \"\u2714\uFE0F\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"arrows_clockwise\": {\n    \"keywords\": [\"sync\", \"cycle\", \"round\", \"repeat\"],\n    \"char\": \"\uD83D\uDD03\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"heavy_plus_sign\": {\n    \"keywords\": [\"math\", \"calculation\", \"addition\", \"more\", \"increase\"],\n    \"char\": \"\u2795\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"heavy_minus_sign\": {\n    \"keywords\": [\"math\", \"calculation\", \"subtract\", \"less\"],\n    \"char\": \"\u2796\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"heavy_division_sign\": {\n    \"keywords\": [\"divide\", \"math\", \"calculation\"],\n    \"char\": \"\u2797\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"heavy_multiplication_x\": {\n    \"keywords\": [\"math\", \"calculation\"],\n    \"char\": \"\u2716\uFE0F\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"infinity\": {\n    \"keywords\": [\"forever\"],\n    \"char\": \"\u267E\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"heavy_dollar_sign\": {\n    \"keywords\": [\"money\", \"sales\", \"payment\", \"currency\", \"buck\"],\n    \"char\": \"\uD83D\uDCB2\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"currency_exchange\": {\n    \"keywords\": [\"money\", \"sales\", \"dollar\", \"travel\"],\n    \"char\": \"\uD83D\uDCB1\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"copyright\": {\n    \"keywords\": [\"ip\", \"license\", \"circle\", \"law\", \"legal\"],\n    \"char\": \"\u00A9\uFE0F\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"registered\": {\n    \"keywords\": [\"alphabet\", \"circle\"],\n    \"char\": \"\u00AE\uFE0F\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"tm\": {\n    \"keywords\": [\"trademark\", \"brand\", \"law\", \"legal\"],\n    \"char\": \"\u2122\uFE0F\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"end\": {\n    \"keywords\": [\"words\", \"arrow\"],\n    \"char\": \"\uD83D\uDD1A\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"back\": {\n    \"keywords\": [\"arrow\", \"words\", \"return\"],\n    \"char\": \"\uD83D\uDD19\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"on\": {\n    \"keywords\": [\"arrow\", \"words\"],\n    \"char\": \"\uD83D\uDD1B\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"top\": {\n    \"keywords\": [\"words\", \"blue-square\"],\n    \"char\": \"\uD83D\uDD1D\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"soon\": {\n    \"keywords\": [\"arrow\", \"words\"],\n    \"char\": \"\uD83D\uDD1C\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"ballot_box_with_check\": {\n    \"keywords\": [\"ok\", \"agree\", \"confirm\", \"black-square\", \"vote\", \"election\", \"yes\", \"tick\"],\n    \"char\": \"\u2611\uFE0F\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"radio_button\": {\n    \"keywords\": [\"input\", \"old\", \"music\", \"circle\"],\n    \"char\": \"\uD83D\uDD18\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"white_circle\": {\n    \"keywords\": [\"shape\", \"round\"],\n    \"char\": \"\u26AA\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"black_circle\": {\n    \"keywords\": [\"shape\", \"button\", \"round\"],\n    \"char\": \"\u26AB\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"red_circle\": {\n    \"keywords\": [\"shape\", \"error\", \"danger\"],\n    \"char\": \"\uD83D\uDD34\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"large_blue_circle\": {\n    \"keywords\": [\"shape\", \"icon\", \"button\"],\n    \"char\": \"\uD83D\uDD35\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"small_orange_diamond\": {\n    \"keywords\": [\"shape\", \"jewel\", \"gem\"],\n    \"char\": \"\uD83D\uDD38\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"small_blue_diamond\": {\n    \"keywords\": [\"shape\", \"jewel\", \"gem\"],\n    \"char\": \"\uD83D\uDD39\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"large_orange_diamond\": {\n    \"keywords\": [\"shape\", \"jewel\", \"gem\"],\n    \"char\": \"\uD83D\uDD36\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"large_blue_diamond\": {\n    \"keywords\": [\"shape\", \"jewel\", \"gem\"],\n    \"char\": \"\uD83D\uDD37\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"small_red_triangle\": {\n    \"keywords\": [\"shape\", \"direction\", \"up\", \"top\"],\n    \"char\": \"\uD83D\uDD3A\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"black_small_square\": {\n    \"keywords\": [\"shape\", \"icon\"],\n    \"char\": \"\u25AA\uFE0F\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"white_small_square\": {\n    \"keywords\": [\"shape\", \"icon\"],\n    \"char\": \"\u25AB\uFE0F\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"black_large_square\": {\n    \"keywords\": [\"shape\", \"icon\", \"button\"],\n    \"char\": \"\u2B1B\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"white_large_square\": {\n    \"keywords\": [\"shape\", \"icon\", \"stone\", \"button\"],\n    \"char\": \"\u2B1C\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"small_red_triangle_down\": {\n    \"keywords\": [\"shape\", \"direction\", \"bottom\"],\n    \"char\": \"\uD83D\uDD3B\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"black_medium_square\": {\n    \"keywords\": [\"shape\", \"button\", \"icon\"],\n    \"char\": \"\u25FC\uFE0F\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"white_medium_square\": {\n    \"keywords\": [\"shape\", \"stone\", \"icon\"],\n    \"char\": \"\u25FB\uFE0F\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"black_medium_small_square\": {\n    \"keywords\": [\"icon\", \"shape\", \"button\"],\n    \"char\": \"\u25FE\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"white_medium_small_square\": {\n    \"keywords\": [\"shape\", \"stone\", \"icon\", \"button\"],\n    \"char\": \"\u25FD\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"black_square_button\": {\n    \"keywords\": [\"shape\", \"input\", \"frame\"],\n    \"char\": \"\uD83D\uDD32\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"white_square_button\": {\n    \"keywords\": [\"shape\", \"input\"],\n    \"char\": \"\uD83D\uDD33\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"speaker\": {\n    \"keywords\": [\"sound\", \"volume\", \"silence\", \"broadcast\"],\n    \"char\": \"\uD83D\uDD08\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"sound\": {\n    \"keywords\": [\"volume\", \"speaker\", \"broadcast\"],\n    \"char\": \"\uD83D\uDD09\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"loud_sound\": {\n    \"keywords\": [\"volume\", \"noise\", \"noisy\", \"speaker\", \"broadcast\"],\n    \"char\": \"\uD83D\uDD0A\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"mute\": {\n    \"keywords\": [\"sound\", \"volume\", \"silence\", \"quiet\"],\n    \"char\": \"\uD83D\uDD07\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"mega\": {\n    \"keywords\": [\"sound\", \"speaker\", \"volume\"],\n    \"char\": \"\uD83D\uDCE3\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"loudspeaker\": {\n    \"keywords\": [\"volume\", \"sound\"],\n    \"char\": \"\uD83D\uDCE2\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"bell\": {\n    \"keywords\": [\"sound\", \"notification\", \"christmas\", \"xmas\", \"chime\"],\n    \"char\": \"\uD83D\uDD14\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"no_bell\": {\n    \"keywords\": [\"sound\", \"volume\", \"mute\", \"quiet\", \"silent\"],\n    \"char\": \"\uD83D\uDD15\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"black_joker\": {\n    \"keywords\": [\"poker\", \"cards\", \"game\", \"play\", \"magic\"],\n    \"char\": \"\uD83C\uDCCF\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"mahjong\": {\n    \"keywords\": [\"game\", \"play\", \"chinese\", \"kanji\"],\n    \"char\": \"\uD83C\uDC04\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"spades\": {\n    \"keywords\": [\"poker\", \"cards\", \"suits\", \"magic\"],\n    \"char\": \"\u2660\uFE0F\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"clubs\": {\n    \"keywords\": [\"poker\", \"cards\", \"magic\", \"suits\"],\n    \"char\": \"\u2663\uFE0F\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"hearts\": {\n    \"keywords\": [\"poker\", \"cards\", \"magic\", \"suits\"],\n    \"char\": \"\u2665\uFE0F\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"diamonds\": {\n    \"keywords\": [\"poker\", \"cards\", \"magic\", \"suits\"],\n    \"char\": \"\u2666\uFE0F\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"flower_playing_cards\": {\n    \"keywords\": [\"game\", \"sunset\", \"red\"],\n    \"char\": \"\uD83C\uDFB4\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"thought_balloon\": {\n    \"keywords\": [\"bubble\", \"cloud\", \"speech\", \"thinking\", \"dream\"],\n    \"char\": \"\uD83D\uDCAD\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"right_anger_bubble\": {\n    \"keywords\": [\"caption\", \"speech\", \"thinking\", \"mad\"],\n    \"char\": \"\uD83D\uDDEF\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"speech_balloon\": {\n    \"keywords\": [\"bubble\", \"words\", \"message\", \"talk\", \"chatting\"],\n    \"char\": \"\uD83D\uDCAC\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"left_speech_bubble\": {\n    \"keywords\": [\"words\", \"message\", \"talk\", \"chatting\"],\n    \"char\": \"\uD83D\uDDE8\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"clock1\": {\n    \"keywords\": [\"time\", \"late\", \"early\", \"schedule\"],\n    \"char\": \"\uD83D\uDD50\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"clock2\": {\n    \"keywords\": [\"time\", \"late\", \"early\", \"schedule\"],\n    \"char\": \"\uD83D\uDD51\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"clock3\": {\n    \"keywords\": [\"time\", \"late\", \"early\", \"schedule\"],\n    \"char\": \"\uD83D\uDD52\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"clock4\": {\n    \"keywords\": [\"time\", \"late\", \"early\", \"schedule\"],\n    \"char\": \"\uD83D\uDD53\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"clock5\": {\n    \"keywords\": [\"time\", \"late\", \"early\", \"schedule\"],\n    \"char\": \"\uD83D\uDD54\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"clock6\": {\n    \"keywords\": [\"time\", \"late\", \"early\", \"schedule\", \"dawn\", \"dusk\"],\n    \"char\": \"\uD83D\uDD55\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"clock7\": {\n    \"keywords\": [\"time\", \"late\", \"early\", \"schedule\"],\n    \"char\": \"\uD83D\uDD56\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"clock8\": {\n    \"keywords\": [\"time\", \"late\", \"early\", \"schedule\"],\n    \"char\": \"\uD83D\uDD57\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"clock9\": {\n    \"keywords\": [\"time\", \"late\", \"early\", \"schedule\"],\n    \"char\": \"\uD83D\uDD58\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"clock10\": {\n    \"keywords\": [\"time\", \"late\", \"early\", \"schedule\"],\n    \"char\": \"\uD83D\uDD59\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"clock11\": {\n    \"keywords\": [\"time\", \"late\", \"early\", \"schedule\"],\n    \"char\": \"\uD83D\uDD5A\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"clock12\": {\n    \"keywords\": [\"time\", \"noon\", \"midnight\", \"midday\", \"late\", \"early\", \"schedule\"],\n    \"char\": \"\uD83D\uDD5B\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"clock130\": {\n    \"keywords\": [\"time\", \"late\", \"early\", \"schedule\"],\n    \"char\": \"\uD83D\uDD5C\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"clock230\": {\n    \"keywords\": [\"time\", \"late\", \"early\", \"schedule\"],\n    \"char\": \"\uD83D\uDD5D\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"clock330\": {\n    \"keywords\": [\"time\", \"late\", \"early\", \"schedule\"],\n    \"char\": \"\uD83D\uDD5E\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"clock430\": {\n    \"keywords\": [\"time\", \"late\", \"early\", \"schedule\"],\n    \"char\": \"\uD83D\uDD5F\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"clock530\": {\n    \"keywords\": [\"time\", \"late\", \"early\", \"schedule\"],\n    \"char\": \"\uD83D\uDD60\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"clock630\": {\n    \"keywords\": [\"time\", \"late\", \"early\", \"schedule\"],\n    \"char\": \"\uD83D\uDD61\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"clock730\": {\n    \"keywords\": [\"time\", \"late\", \"early\", \"schedule\"],\n    \"char\": \"\uD83D\uDD62\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"clock830\": {\n    \"keywords\": [\"time\", \"late\", \"early\", \"schedule\"],\n    \"char\": \"\uD83D\uDD63\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"clock930\": {\n    \"keywords\": [\"time\", \"late\", \"early\", \"schedule\"],\n    \"char\": \"\uD83D\uDD64\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"clock1030\": {\n    \"keywords\": [\"time\", \"late\", \"early\", \"schedule\"],\n    \"char\": \"\uD83D\uDD65\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"clock1130\": {\n    \"keywords\": [\"time\", \"late\", \"early\", \"schedule\"],\n    \"char\": \"\uD83D\uDD66\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"clock1230\": {\n    \"keywords\": [\"time\", \"late\", \"early\", \"schedule\"],\n    \"char\": \"\uD83D\uDD67\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"symbols\"\n  },\n  \"afghanistan\": {\n    \"keywords\": [\"af\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDE6\uD83C\uDDEB\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"aland_islands\": {\n    \"keywords\": [\"\u00C5land\", \"islands\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDE6\uD83C\uDDFD\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"albania\": {\n    \"keywords\": [\"al\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDE6\uD83C\uDDF1\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"algeria\": {\n    \"keywords\": [\"dz\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDE9\uD83C\uDDFF\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"american_samoa\": {\n    \"keywords\": [\"american\", \"ws\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDE6\uD83C\uDDF8\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"andorra\": {\n    \"keywords\": [\"ad\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDE6\uD83C\uDDE9\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"angola\": {\n    \"keywords\": [\"ao\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDE6\uD83C\uDDF4\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"anguilla\": {\n    \"keywords\": [\"ai\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDE6\uD83C\uDDEE\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"antarctica\": {\n    \"keywords\": [\"aq\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDE6\uD83C\uDDF6\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"antigua_barbuda\": {\n    \"keywords\": [\"antigua\", \"barbuda\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDE6\uD83C\uDDEC\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"argentina\": {\n    \"keywords\": [\"ar\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDE6\uD83C\uDDF7\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"armenia\": {\n    \"keywords\": [\"am\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDE6\uD83C\uDDF2\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"aruba\": {\n    \"keywords\": [\"aw\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDE6\uD83C\uDDFC\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"australia\": {\n    \"keywords\": [\"au\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDE6\uD83C\uDDFA\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"austria\": {\n    \"keywords\": [\"at\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDE6\uD83C\uDDF9\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"azerbaijan\": {\n    \"keywords\": [\"az\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDE6\uD83C\uDDFF\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"bahamas\": {\n    \"keywords\": [\"bs\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDE7\uD83C\uDDF8\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"bahrain\": {\n    \"keywords\": [\"bh\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDE7\uD83C\uDDED\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"bangladesh\": {\n    \"keywords\": [\"bd\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDE7\uD83C\uDDE9\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"barbados\": {\n    \"keywords\": [\"bb\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDE7\uD83C\uDDE7\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"belarus\": {\n    \"keywords\": [\"by\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDE7\uD83C\uDDFE\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"belgium\": {\n    \"keywords\": [\"be\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDE7\uD83C\uDDEA\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"belize\": {\n    \"keywords\": [\"bz\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDE7\uD83C\uDDFF\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"benin\": {\n    \"keywords\": [\"bj\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDE7\uD83C\uDDEF\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"bermuda\": {\n    \"keywords\": [\"bm\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDE7\uD83C\uDDF2\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"bhutan\": {\n    \"keywords\": [\"bt\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDE7\uD83C\uDDF9\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"bolivia\": {\n    \"keywords\": [\"bo\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDE7\uD83C\uDDF4\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"caribbean_netherlands\": {\n    \"keywords\": [\"bonaire\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDE7\uD83C\uDDF6\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"bosnia_herzegovina\": {\n    \"keywords\": [\"bosnia\", \"herzegovina\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDE7\uD83C\uDDE6\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"botswana\": {\n    \"keywords\": [\"bw\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDE7\uD83C\uDDFC\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"brazil\": {\n    \"keywords\": [\"br\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDE7\uD83C\uDDF7\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"british_indian_ocean_territory\": {\n    \"keywords\": [\"british\", \"indian\", \"ocean\", \"territory\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDEE\uD83C\uDDF4\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"british_virgin_islands\": {\n    \"keywords\": [\"british\", \"virgin\", \"islands\", \"bvi\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDFB\uD83C\uDDEC\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"brunei\": {\n    \"keywords\": [\"bn\", \"darussalam\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDE7\uD83C\uDDF3\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"bulgaria\": {\n    \"keywords\": [\"bg\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDE7\uD83C\uDDEC\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"burkina_faso\": {\n    \"keywords\": [\"burkina\", \"faso\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDE7\uD83C\uDDEB\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"burundi\": {\n    \"keywords\": [\"bi\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDE7\uD83C\uDDEE\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"cape_verde\": {\n    \"keywords\": [\"cabo\", \"verde\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDE8\uD83C\uDDFB\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"cambodia\": {\n    \"keywords\": [\"kh\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDF0\uD83C\uDDED\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"cameroon\": {\n    \"keywords\": [\"cm\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDE8\uD83C\uDDF2\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"canada\": {\n    \"keywords\": [\"ca\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDE8\uD83C\uDDE6\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"canary_islands\": {\n    \"keywords\": [\"canary\", \"islands\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDEE\uD83C\uDDE8\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"cayman_islands\": {\n    \"keywords\": [\"cayman\", \"islands\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDF0\uD83C\uDDFE\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"central_african_republic\": {\n    \"keywords\": [\"central\", \"african\", \"republic\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDE8\uD83C\uDDEB\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"chad\": {\n    \"keywords\": [\"td\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDF9\uD83C\uDDE9\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"chile\": {\n    \"keywords\": [\"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDE8\uD83C\uDDF1\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"cn\": {\n    \"keywords\": [\"china\", \"chinese\", \"prc\", \"flag\", \"country\", \"nation\", \"banner\"],\n    \"char\": \"\uD83C\uDDE8\uD83C\uDDF3\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"christmas_island\": {\n    \"keywords\": [\"christmas\", \"island\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDE8\uD83C\uDDFD\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"cocos_islands\": {\n    \"keywords\": [\"cocos\", \"keeling\", \"islands\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDE8\uD83C\uDDE8\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"colombia\": {\n    \"keywords\": [\"co\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDE8\uD83C\uDDF4\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"comoros\": {\n    \"keywords\": [\"km\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDF0\uD83C\uDDF2\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"congo_brazzaville\": {\n    \"keywords\": [\"congo\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDE8\uD83C\uDDEC\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"congo_kinshasa\": {\n    \"keywords\": [\"congo\", \"democratic\", \"republic\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDE8\uD83C\uDDE9\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"cook_islands\": {\n    \"keywords\": [\"cook\", \"islands\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDE8\uD83C\uDDF0\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"costa_rica\": {\n    \"keywords\": [\"costa\", \"rica\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDE8\uD83C\uDDF7\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"croatia\": {\n    \"keywords\": [\"hr\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDED\uD83C\uDDF7\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"cuba\": {\n    \"keywords\": [\"cu\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDE8\uD83C\uDDFA\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"curacao\": {\n    \"keywords\": [\"cura\u00E7ao\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDE8\uD83C\uDDFC\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"cyprus\": {\n    \"keywords\": [\"cy\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDE8\uD83C\uDDFE\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"czech_republic\": {\n    \"keywords\": [\"cz\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDE8\uD83C\uDDFF\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"denmark\": {\n    \"keywords\": [\"dk\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDE9\uD83C\uDDF0\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"djibouti\": {\n    \"keywords\": [\"dj\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDE9\uD83C\uDDEF\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"dominica\": {\n    \"keywords\": [\"dm\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDE9\uD83C\uDDF2\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"dominican_republic\": {\n    \"keywords\": [\"dominican\", \"republic\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDE9\uD83C\uDDF4\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"ecuador\": {\n    \"keywords\": [\"ec\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDEA\uD83C\uDDE8\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"egypt\": {\n    \"keywords\": [\"eg\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDEA\uD83C\uDDEC\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"el_salvador\": {\n    \"keywords\": [\"el\", \"salvador\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDF8\uD83C\uDDFB\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"equatorial_guinea\": {\n    \"keywords\": [\"equatorial\", \"gn\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDEC\uD83C\uDDF6\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"eritrea\": {\n    \"keywords\": [\"er\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDEA\uD83C\uDDF7\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"estonia\": {\n    \"keywords\": [\"ee\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDEA\uD83C\uDDEA\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"ethiopia\": {\n    \"keywords\": [\"et\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDEA\uD83C\uDDF9\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"eu\": {\n    \"keywords\": [\"european\", \"union\", \"flag\", \"banner\"],\n    \"char\": \"\uD83C\uDDEA\uD83C\uDDFA\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"falkland_islands\": {\n    \"keywords\": [\"falkland\", \"islands\", \"malvinas\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDEB\uD83C\uDDF0\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"faroe_islands\": {\n    \"keywords\": [\"faroe\", \"islands\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDEB\uD83C\uDDF4\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"fiji\": {\n    \"keywords\": [\"fj\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDEB\uD83C\uDDEF\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"finland\": {\n    \"keywords\": [\"fi\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDEB\uD83C\uDDEE\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"fr\": {\n    \"keywords\": [\"banner\", \"flag\", \"nation\", \"france\", \"french\", \"country\"],\n    \"char\": \"\uD83C\uDDEB\uD83C\uDDF7\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"french_guiana\": {\n    \"keywords\": [\"french\", \"guiana\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDEC\uD83C\uDDEB\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"french_polynesia\": {\n    \"keywords\": [\"french\", \"polynesia\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDF5\uD83C\uDDEB\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"french_southern_territories\": {\n    \"keywords\": [\"french\", \"southern\", \"territories\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDF9\uD83C\uDDEB\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"gabon\": {\n    \"keywords\": [\"ga\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDEC\uD83C\uDDE6\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"gambia\": {\n    \"keywords\": [\"gm\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDEC\uD83C\uDDF2\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"georgia\": {\n    \"keywords\": [\"ge\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDEC\uD83C\uDDEA\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"de\": {\n    \"keywords\": [\"german\", \"nation\", \"flag\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDE9\uD83C\uDDEA\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"ghana\": {\n    \"keywords\": [\"gh\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDEC\uD83C\uDDED\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"gibraltar\": {\n    \"keywords\": [\"gi\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDEC\uD83C\uDDEE\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"greece\": {\n    \"keywords\": [\"gr\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDEC\uD83C\uDDF7\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"greenland\": {\n    \"keywords\": [\"gl\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDEC\uD83C\uDDF1\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"grenada\": {\n    \"keywords\": [\"gd\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDEC\uD83C\uDDE9\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"guadeloupe\": {\n    \"keywords\": [\"gp\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDEC\uD83C\uDDF5\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"guam\": {\n    \"keywords\": [\"gu\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDEC\uD83C\uDDFA\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"guatemala\": {\n    \"keywords\": [\"gt\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDEC\uD83C\uDDF9\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"guernsey\": {\n    \"keywords\": [\"gg\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDEC\uD83C\uDDEC\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"guinea\": {\n    \"keywords\": [\"gn\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDEC\uD83C\uDDF3\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"guinea_bissau\": {\n    \"keywords\": [\"gw\", \"bissau\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDEC\uD83C\uDDFC\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"guyana\": {\n    \"keywords\": [\"gy\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDEC\uD83C\uDDFE\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"haiti\": {\n    \"keywords\": [\"ht\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDED\uD83C\uDDF9\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"honduras\": {\n    \"keywords\": [\"hn\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDED\uD83C\uDDF3\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"hong_kong\": {\n    \"keywords\": [\"hong\", \"kong\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDED\uD83C\uDDF0\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"hungary\": {\n    \"keywords\": [\"hu\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDED\uD83C\uDDFA\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"iceland\": {\n    \"keywords\": [\"is\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDEE\uD83C\uDDF8\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"india\": {\n    \"keywords\": [\"in\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDEE\uD83C\uDDF3\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"indonesia\": {\n    \"keywords\": [\"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDEE\uD83C\uDDE9\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"iran\": {\n    \"keywords\": [\"iran,\", \"islamic\", \"republic\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDEE\uD83C\uDDF7\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"iraq\": {\n    \"keywords\": [\"iq\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDEE\uD83C\uDDF6\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"ireland\": {\n    \"keywords\": [\"ie\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDEE\uD83C\uDDEA\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"isle_of_man\": {\n    \"keywords\": [\"isle\", \"man\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDEE\uD83C\uDDF2\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"israel\": {\n    \"keywords\": [\"il\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDEE\uD83C\uDDF1\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"it\": {\n    \"keywords\": [\"italy\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDEE\uD83C\uDDF9\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"cote_divoire\": {\n    \"keywords\": [\"ivory\", \"coast\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDE8\uD83C\uDDEE\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"jamaica\": {\n    \"keywords\": [\"jm\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDEF\uD83C\uDDF2\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"jp\": {\n    \"keywords\": [\"japanese\", \"nation\", \"flag\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDEF\uD83C\uDDF5\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"jersey\": {\n    \"keywords\": [\"je\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDEF\uD83C\uDDEA\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"jordan\": {\n    \"keywords\": [\"jo\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDEF\uD83C\uDDF4\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"kazakhstan\": {\n    \"keywords\": [\"kz\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDF0\uD83C\uDDFF\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"kenya\": {\n    \"keywords\": [\"ke\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDF0\uD83C\uDDEA\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"kiribati\": {\n    \"keywords\": [\"ki\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDF0\uD83C\uDDEE\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"kosovo\": {\n    \"keywords\": [\"xk\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDFD\uD83C\uDDF0\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"kuwait\": {\n    \"keywords\": [\"kw\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDF0\uD83C\uDDFC\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"kyrgyzstan\": {\n    \"keywords\": [\"kg\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDF0\uD83C\uDDEC\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"laos\": {\n    \"keywords\": [\"lao\", \"democratic\", \"republic\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDF1\uD83C\uDDE6\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"latvia\": {\n    \"keywords\": [\"lv\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDF1\uD83C\uDDFB\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"lebanon\": {\n    \"keywords\": [\"lb\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDF1\uD83C\uDDE7\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"lesotho\": {\n    \"keywords\": [\"ls\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDF1\uD83C\uDDF8\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"liberia\": {\n    \"keywords\": [\"lr\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDF1\uD83C\uDDF7\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"libya\": {\n    \"keywords\": [\"ly\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDF1\uD83C\uDDFE\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"liechtenstein\": {\n    \"keywords\": [\"li\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDF1\uD83C\uDDEE\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"lithuania\": {\n    \"keywords\": [\"lt\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDF1\uD83C\uDDF9\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"luxembourg\": {\n    \"keywords\": [\"lu\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDF1\uD83C\uDDFA\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"macau\": {\n    \"keywords\": [\"macao\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDF2\uD83C\uDDF4\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"macedonia\": {\n    \"keywords\": [\"macedonia,\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDF2\uD83C\uDDF0\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"madagascar\": {\n    \"keywords\": [\"mg\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDF2\uD83C\uDDEC\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"malawi\": {\n    \"keywords\": [\"mw\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDF2\uD83C\uDDFC\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"malaysia\": {\n    \"keywords\": [\"my\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDF2\uD83C\uDDFE\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"maldives\": {\n    \"keywords\": [\"mv\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDF2\uD83C\uDDFB\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"mali\": {\n    \"keywords\": [\"ml\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDF2\uD83C\uDDF1\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"malta\": {\n    \"keywords\": [\"mt\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDF2\uD83C\uDDF9\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"marshall_islands\": {\n    \"keywords\": [\"marshall\", \"islands\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDF2\uD83C\uDDED\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"martinique\": {\n    \"keywords\": [\"mq\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDF2\uD83C\uDDF6\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"mauritania\": {\n    \"keywords\": [\"mr\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDF2\uD83C\uDDF7\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"mauritius\": {\n    \"keywords\": [\"mu\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDF2\uD83C\uDDFA\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"mayotte\": {\n    \"keywords\": [\"yt\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDFE\uD83C\uDDF9\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"mexico\": {\n    \"keywords\": [\"mx\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDF2\uD83C\uDDFD\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"micronesia\": {\n    \"keywords\": [\"micronesia,\", \"federated\", \"states\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDEB\uD83C\uDDF2\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"moldova\": {\n    \"keywords\": [\"moldova,\", \"republic\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDF2\uD83C\uDDE9\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"monaco\": {\n    \"keywords\": [\"mc\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDF2\uD83C\uDDE8\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"mongolia\": {\n    \"keywords\": [\"mn\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDF2\uD83C\uDDF3\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"montenegro\": {\n    \"keywords\": [\"me\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDF2\uD83C\uDDEA\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"montserrat\": {\n    \"keywords\": [\"ms\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDF2\uD83C\uDDF8\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"morocco\": {\n    \"keywords\": [\"ma\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDF2\uD83C\uDDE6\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"mozambique\": {\n    \"keywords\": [\"mz\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDF2\uD83C\uDDFF\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"myanmar\": {\n    \"keywords\": [\"mm\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDF2\uD83C\uDDF2\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"namibia\": {\n    \"keywords\": [\"na\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDF3\uD83C\uDDE6\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"nauru\": {\n    \"keywords\": [\"nr\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDF3\uD83C\uDDF7\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"nepal\": {\n    \"keywords\": [\"np\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDF3\uD83C\uDDF5\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"netherlands\": {\n    \"keywords\": [\"nl\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDF3\uD83C\uDDF1\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"new_caledonia\": {\n    \"keywords\": [\"new\", \"caledonia\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDF3\uD83C\uDDE8\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"new_zealand\": {\n    \"keywords\": [\"new\", \"zealand\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDF3\uD83C\uDDFF\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"nicaragua\": {\n    \"keywords\": [\"ni\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDF3\uD83C\uDDEE\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"niger\": {\n    \"keywords\": [\"ne\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDF3\uD83C\uDDEA\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"nigeria\": {\n    \"keywords\": [\"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDF3\uD83C\uDDEC\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"niue\": {\n    \"keywords\": [\"nu\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDF3\uD83C\uDDFA\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"norfolk_island\": {\n    \"keywords\": [\"norfolk\", \"island\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDF3\uD83C\uDDEB\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"northern_mariana_islands\": {\n    \"keywords\": [\"northern\", \"mariana\", \"islands\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDF2\uD83C\uDDF5\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"north_korea\": {\n    \"keywords\": [\"north\", \"korea\", \"nation\", \"flag\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDF0\uD83C\uDDF5\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"norway\": {\n    \"keywords\": [\"no\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDF3\uD83C\uDDF4\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"oman\": {\n    \"keywords\": [\"om_symbol\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDF4\uD83C\uDDF2\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"pakistan\": {\n    \"keywords\": [\"pk\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDF5\uD83C\uDDF0\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"palau\": {\n    \"keywords\": [\"pw\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDF5\uD83C\uDDFC\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"palestinian_territories\": {\n    \"keywords\": [\"palestine\", \"palestinian\", \"territories\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDF5\uD83C\uDDF8\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"panama\": {\n    \"keywords\": [\"pa\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDF5\uD83C\uDDE6\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"papua_new_guinea\": {\n    \"keywords\": [\"papua\", \"new\", \"guinea\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDF5\uD83C\uDDEC\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"paraguay\": {\n    \"keywords\": [\"py\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDF5\uD83C\uDDFE\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"peru\": {\n    \"keywords\": [\"pe\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDF5\uD83C\uDDEA\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"philippines\": {\n    \"keywords\": [\"ph\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDF5\uD83C\uDDED\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"pitcairn_islands\": {\n    \"keywords\": [\"pitcairn\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDF5\uD83C\uDDF3\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"poland\": {\n    \"keywords\": [\"pl\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDF5\uD83C\uDDF1\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"portugal\": {\n    \"keywords\": [\"pt\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDF5\uD83C\uDDF9\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"puerto_rico\": {\n    \"keywords\": [\"puerto\", \"rico\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDF5\uD83C\uDDF7\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"qatar\": {\n    \"keywords\": [\"qa\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDF6\uD83C\uDDE6\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"reunion\": {\n    \"keywords\": [\"r\u00E9union\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDF7\uD83C\uDDEA\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"romania\": {\n    \"keywords\": [\"ro\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDF7\uD83C\uDDF4\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"ru\": {\n    \"keywords\": [\"russian\", \"federation\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDF7\uD83C\uDDFA\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"rwanda\": {\n    \"keywords\": [\"rw\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDF7\uD83C\uDDFC\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"st_barthelemy\": {\n    \"keywords\": [\"saint\", \"barth\u00E9lemy\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDE7\uD83C\uDDF1\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"st_helena\": {\n    \"keywords\": [\"saint\", \"helena\", \"ascension\", \"tristan\", \"cunha\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDF8\uD83C\uDDED\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"st_kitts_nevis\": {\n    \"keywords\": [\"saint\", \"kitts\", \"nevis\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDF0\uD83C\uDDF3\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"st_lucia\": {\n    \"keywords\": [\"saint\", \"lucia\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDF1\uD83C\uDDE8\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"st_pierre_miquelon\": {\n    \"keywords\": [\"saint\", \"pierre\", \"miquelon\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDF5\uD83C\uDDF2\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"st_vincent_grenadines\": {\n    \"keywords\": [\"saint\", \"vincent\", \"grenadines\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDFB\uD83C\uDDE8\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"samoa\": {\n    \"keywords\": [\"ws\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDFC\uD83C\uDDF8\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"san_marino\": {\n    \"keywords\": [\"san\", \"marino\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDF8\uD83C\uDDF2\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"sao_tome_principe\": {\n    \"keywords\": [\"sao\", \"tome\", \"principe\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDF8\uD83C\uDDF9\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"saudi_arabia\": {\n    \"keywords\": [\"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDF8\uD83C\uDDE6\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"senegal\": {\n    \"keywords\": [\"sn\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDF8\uD83C\uDDF3\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"serbia\": {\n    \"keywords\": [\"rs\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDF7\uD83C\uDDF8\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"seychelles\": {\n    \"keywords\": [\"sc\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDF8\uD83C\uDDE8\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"sierra_leone\": {\n    \"keywords\": [\"sierra\", \"leone\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDF8\uD83C\uDDF1\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"singapore\": {\n    \"keywords\": [\"sg\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDF8\uD83C\uDDEC\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"sint_maarten\": {\n    \"keywords\": [\"sint\", \"maarten\", \"dutch\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDF8\uD83C\uDDFD\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"slovakia\": {\n    \"keywords\": [\"sk\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDF8\uD83C\uDDF0\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"slovenia\": {\n    \"keywords\": [\"si\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDF8\uD83C\uDDEE\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"solomon_islands\": {\n    \"keywords\": [\"solomon\", \"islands\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDF8\uD83C\uDDE7\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"somalia\": {\n    \"keywords\": [\"so\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDF8\uD83C\uDDF4\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"south_africa\": {\n    \"keywords\": [\"south\", \"africa\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDFF\uD83C\uDDE6\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"south_georgia_south_sandwich_islands\": {\n    \"keywords\": [\"south\", \"georgia\", \"sandwich\", \"islands\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDEC\uD83C\uDDF8\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"kr\": {\n    \"keywords\": [\"south\", \"korea\", \"nation\", \"flag\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDF0\uD83C\uDDF7\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"south_sudan\": {\n    \"keywords\": [\"south\", \"sd\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDF8\uD83C\uDDF8\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"es\": {\n    \"keywords\": [\"spain\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDEA\uD83C\uDDF8\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"sri_lanka\": {\n    \"keywords\": [\"sri\", \"lanka\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDF1\uD83C\uDDF0\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"sudan\": {\n    \"keywords\": [\"sd\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDF8\uD83C\uDDE9\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"suriname\": {\n    \"keywords\": [\"sr\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDF8\uD83C\uDDF7\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"swaziland\": {\n    \"keywords\": [\"sz\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDF8\uD83C\uDDFF\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"sweden\": {\n    \"keywords\": [\"se\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDF8\uD83C\uDDEA\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"switzerland\": {\n    \"keywords\": [\"ch\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDE8\uD83C\uDDED\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"syria\": {\n    \"keywords\": [\"syrian\", \"arab\", \"republic\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDF8\uD83C\uDDFE\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"taiwan\": {\n    \"keywords\": [\"tw\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDF9\uD83C\uDDFC\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"tajikistan\": {\n    \"keywords\": [\"tj\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDF9\uD83C\uDDEF\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"tanzania\": {\n    \"keywords\": [\"tanzania,\", \"united\", \"republic\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDF9\uD83C\uDDFF\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"thailand\": {\n    \"keywords\": [\"th\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDF9\uD83C\uDDED\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"timor_leste\": {\n    \"keywords\": [\"timor\", \"leste\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDF9\uD83C\uDDF1\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"togo\": {\n    \"keywords\": [\"tg\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDF9\uD83C\uDDEC\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"tokelau\": {\n    \"keywords\": [\"tk\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDF9\uD83C\uDDF0\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"tonga\": {\n    \"keywords\": [\"to\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDF9\uD83C\uDDF4\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"trinidad_tobago\": {\n    \"keywords\": [\"trinidad\", \"tobago\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDF9\uD83C\uDDF9\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"tunisia\": {\n    \"keywords\": [\"tn\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDF9\uD83C\uDDF3\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"tr\": {\n    \"keywords\": [\"turkey\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDF9\uD83C\uDDF7\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"turkmenistan\": {\n    \"keywords\": [\"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDF9\uD83C\uDDF2\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"turks_caicos_islands\": {\n    \"keywords\": [\"turks\", \"caicos\", \"islands\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDF9\uD83C\uDDE8\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"tuvalu\": {\n    \"keywords\": [\"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDF9\uD83C\uDDFB\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"uganda\": {\n    \"keywords\": [\"ug\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDFA\uD83C\uDDEC\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"ukraine\": {\n    \"keywords\": [\"ua\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDFA\uD83C\uDDE6\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"united_arab_emirates\": {\n    \"keywords\": [\"united\", \"arab\", \"emirates\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDE6\uD83C\uDDEA\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"uk\": {\n    \"keywords\": [\"united\", \"kingdom\", \"great\", \"britain\", \"northern\", \"ireland\", \"flag\", \"nation\", \"country\", \"banner\", \"british\", \"UK\", \"english\", \"england\", \"union jack\"],\n    \"char\": \"\uD83C\uDDEC\uD83C\uDDE7\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"england\": {\n    \"keywords\": [\"flag\", \"english\"],\n    \"char\": \"\uD83C\uDFF4\uDB40\uDC67\uDB40\uDC62\uDB40\uDC65\uDB40\uDC6E\uDB40\uDC67\uDB40\uDC7F\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"scotland\": {\n    \"keywords\": [\"flag\", \"scottish\"],\n    \"char\": \"\uD83C\uDFF4\uDB40\uDC67\uDB40\uDC62\uDB40\uDC73\uDB40\uDC63\uDB40\uDC74\uDB40\uDC7F\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"wales\": {\n    \"keywords\": [\"flag\", \"welsh\"],\n    \"char\": \"\uD83C\uDFF4\uDB40\uDC67\uDB40\uDC62\uDB40\uDC77\uDB40\uDC6C\uDB40\uDC73\uDB40\uDC7F\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"us\": {\n    \"keywords\": [\"united\", \"states\", \"america\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDFA\uD83C\uDDF8\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"us_virgin_islands\": {\n    \"keywords\": [\"virgin\", \"islands\", \"us\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDFB\uD83C\uDDEE\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"uruguay\": {\n    \"keywords\": [\"uy\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDFA\uD83C\uDDFE\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"uzbekistan\": {\n    \"keywords\": [\"uz\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDFA\uD83C\uDDFF\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"vanuatu\": {\n    \"keywords\": [\"vu\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDFB\uD83C\uDDFA\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"vatican_city\": {\n    \"keywords\": [\"vatican\", \"city\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDFB\uD83C\uDDE6\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"venezuela\": {\n    \"keywords\": [\"ve\", \"bolivarian\", \"republic\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDFB\uD83C\uDDEA\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"vietnam\": {\n    \"keywords\": [\"viet\", \"nam\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDFB\uD83C\uDDF3\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"wallis_futuna\": {\n    \"keywords\": [\"wallis\", \"futuna\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDFC\uD83C\uDDEB\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"western_sahara\": {\n    \"keywords\": [\"western\", \"sahara\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDEA\uD83C\uDDED\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"yemen\": {\n    \"keywords\": [\"ye\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDFE\uD83C\uDDEA\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"zambia\": {\n    \"keywords\": [\"zm\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDFF\uD83C\uDDF2\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"zimbabwe\": {\n    \"keywords\": [\"zw\", \"flag\", \"nation\", \"country\", \"banner\"],\n    \"char\": \"\uD83C\uDDFF\uD83C\uDDFC\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"united_nations\": {\n    \"keywords\": [\"un\", \"flag\", \"banner\"],\n    \"char\": \"\uD83C\uDDFA\uD83C\uDDF3\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  },\n  \"pirate_flag\": {\n    \"keywords\": [\"skull\", \"crossbones\", \"flag\", \"banner\"],\n    \"char\": \"\uD83C\uDFF4\u200D\u2620\uFE0F\",\n    \"fitzpatrick_scale\": false,\n    \"category\": \"flags\"\n  }\n}\n", "[\n  \"grinning\",\n  \"smiley\",\n  \"smile\",\n  \"grin\",\n  \"laughing\",\n  \"sweat_smile\",\n  \"joy\",\n  \"rofl\",\n  \"relaxed\",\n  \"blush\",\n  \"innocent\",\n  \"slightly_smiling_face\",\n  \"upside_down_face\",\n  \"wink\",\n  \"relieved\",\n  \"heart_eyes\",\n  \"smiling_face_with_three_hearts\",\n  \"kissing_heart\",\n  \"kissing\",\n  \"kissing_smiling_eyes\",\n  \"kissing_closed_eyes\",\n  \"yum\",\n  \"stuck_out_tongue\",\n  \"stuck_out_tongue_closed_eyes\",\n  \"stuck_out_tongue_winking_eye\",\n  \"zany\",\n  \"raised_eyebrow\",\n  \"monocle\",\n  \"nerd_face\",\n  \"sunglasses\",\n  \"star_struck\",\n  \"partying\",\n  \"smirk\",\n  \"unamused\",\n  \"disappointed\",\n  \"pensive\",\n  \"worried\",\n  \"confused\",\n  \"slightly_frowning_face\",\n  \"frowning_face\",\n  \"persevere\",\n  \"confounded\",\n  \"tired_face\",\n  \"weary\",\n  \"pleading\",\n  \"cry\",\n  \"sob\",\n  \"triumph\",\n  \"angry\",\n  \"rage\",\n  \"symbols_over_mouth\",\n  \"exploding_head\",\n  \"flushed\",\n  \"hot\",\n  \"cold\",\n  \"scream\",\n  \"fearful\",\n  \"cold_sweat\",\n  \"disappointed_relieved\",\n  \"sweat\",\n  \"hugs\",\n  \"thinking\",\n  \"hand_over_mouth\",\n  \"shushing\",\n  \"lying_face\",\n  \"no_mouth\",\n  \"neutral_face\",\n  \"expressionless\",\n  \"grimacing\",\n  \"roll_eyes\",\n  \"hushed\",\n  \"frowning\",\n  \"anguished\",\n  \"open_mouth\",\n  \"astonished\",\n  \"sleeping\",\n  \"drooling_face\",\n  \"sleepy\",\n  \"dizzy_face\",\n  \"zipper_mouth_face\",\n  \"woozy\",\n  \"nauseated_face\",\n  \"vomiting\",\n  \"sneezing_face\",\n  \"mask\",\n  \"face_with_thermometer\",\n  \"face_with_head_bandage\",\n  \"money_mouth_face\",\n  \"cowboy_hat_face\",\n  \"smiling_imp\",\n  \"imp\",\n  \"japanese_ogre\",\n  \"japanese_goblin\",\n  \"clown_face\",\n  \"poop\",\n  \"ghost\",\n  \"skull\",\n  \"skull_and_crossbones\",\n  \"alien\",\n  \"space_invader\",\n  \"robot\",\n  \"jack_o_lantern\",\n  \"smiley_cat\",\n  \"smile_cat\",\n  \"joy_cat\",\n  \"heart_eyes_cat\",\n  \"smirk_cat\",\n  \"kissing_cat\",\n  \"scream_cat\",\n  \"crying_cat_face\",\n  \"pouting_cat\",\n  \"palms_up\",\n  \"open_hands\",\n  \"raised_hands\",\n  \"clap\",\n  \"handshake\",\n  \"+1\",\n  \"-1\",\n  \"facepunch\",\n  \"fist\",\n  \"fist_left\",\n  \"fist_right\",\n  \"crossed_fingers\",\n  \"v\",\n  \"love_you\",\n  \"metal\",\n  \"ok_hand\",\n  \"point_left\",\n  \"point_right\",\n  \"point_up\",\n  \"point_down\",\n  \"point_up_2\",\n  \"raised_hand\",\n  \"raised_back_of_hand\",\n  \"raised_hand_with_fingers_splayed\",\n  \"vulcan_salute\",\n  \"wave\",\n  \"call_me_hand\",\n  \"muscle\",\n  \"fu\",\n  \"writing_hand\",\n  \"pray\",\n  \"foot\",\n  \"leg\",\n  \"ring\",\n  \"lipstick\",\n  \"kiss\",\n  \"lips\",\n  \"tooth\",\n  \"tongue\",\n  \"ear\",\n  \"nose\",\n  \"footprints\",\n  \"eye\",\n  \"eyes\",\n  \"brain\",\n  \"speaking_head\",\n  \"bust_in_silhouette\",\n  \"busts_in_silhouette\",\n  \"baby\",\n  \"girl\",\n  \"child\",\n  \"boy\",\n  \"woman\",\n  \"adult\",\n  \"man\",\n  \"blonde_woman\",\n  \"blonde_man\",\n  \"bearded_person\",\n  \"older_woman\",\n  \"older_adult\",\n  \"older_man\",\n  \"man_with_gua_pi_mao\",\n  \"woman_with_headscarf\",\n  \"woman_with_turban\",\n  \"man_with_turban\",\n  \"policewoman\",\n  \"policeman\",\n  \"construction_worker_woman\",\n  \"construction_worker_man\",\n  \"guardswoman\",\n  \"guardsman\",\n  \"female_detective\",\n  \"male_detective\",\n  \"woman_health_worker\",\n  \"man_health_worker\",\n  \"woman_farmer\",\n  \"man_farmer\",\n  \"woman_cook\",\n  \"man_cook\",\n  \"woman_student\",\n  \"man_student\",\n  \"woman_singer\",\n  \"man_singer\",\n  \"woman_teacher\",\n  \"man_teacher\",\n  \"woman_factory_worker\",\n  \"man_factory_worker\",\n  \"woman_technologist\",\n  \"man_technologist\",\n  \"woman_office_worker\",\n  \"man_office_worker\",\n  \"woman_mechanic\",\n  \"man_mechanic\",\n  \"woman_scientist\",\n  \"man_scientist\",\n  \"woman_artist\",\n  \"man_artist\",\n  \"woman_firefighter\",\n  \"man_firefighter\",\n  \"woman_pilot\",\n  \"man_pilot\",\n  \"woman_astronaut\",\n  \"man_astronaut\",\n  \"woman_judge\",\n  \"man_judge\",\n  \"bride_with_veil\",\n  \"man_in_tuxedo\",\n  \"princess\",\n  \"prince\",\n  \"woman_superhero\",\n  \"man_superhero\",\n  \"woman_supervillain\",\n  \"man_supervillain\",\n  \"mrs_claus\",\n  \"santa\",\n  \"sorceress\",\n  \"wizard\",\n  \"woman_elf\",\n  \"man_elf\",\n  \"woman_vampire\",\n  \"man_vampire\",\n  \"woman_zombie\",\n  \"man_zombie\",\n  \"woman_genie\",\n  \"man_genie\",\n  \"mermaid\",\n  \"merman\",\n  \"woman_fairy\",\n  \"man_fairy\",\n  \"angel\",\n  \"pregnant_woman\",\n  \"breastfeeding\",\n  \"bowing_woman\",\n  \"bowing_man\",\n  \"tipping_hand_woman\",\n  \"tipping_hand_man\",\n  \"no_good_woman\",\n  \"no_good_man\",\n  \"ok_woman\",\n  \"ok_man\",\n  \"raising_hand_woman\",\n  \"raising_hand_man\",\n  \"woman_facepalming\",\n  \"man_facepalming\",\n  \"woman_shrugging\",\n  \"man_shrugging\",\n  \"pouting_woman\",\n  \"pouting_man\",\n  \"frowning_woman\",\n  \"frowning_man\",\n  \"haircut_woman\",\n  \"haircut_man\",\n  \"massage_woman\",\n  \"massage_man\",\n  \"woman_in_steamy_room\",\n  \"man_in_steamy_room\",\n  \"nail_care\",\n  \"selfie\",\n  \"dancer\",\n  \"man_dancing\",\n  \"dancing_women\",\n  \"dancing_men\",\n  \"business_suit_levitating\",\n  \"walking_woman\",\n  \"walking_man\",\n  \"running_woman\",\n  \"running_man\",\n  \"couple\",\n  \"two_women_holding_hands\",\n  \"two_men_holding_hands\",\n  \"couple_with_heart_woman_man\",\n  \"couple_with_heart_woman_woman\",\n  \"couple_with_heart_man_man\",\n  \"couplekiss_man_woman\",\n  \"couplekiss_woman_woman\",\n  \"couplekiss_man_man\",\n  \"family_man_woman_boy\",\n  \"family_man_woman_girl\",\n  \"family_man_woman_girl_boy\",\n  \"family_man_woman_boy_boy\",\n  \"family_man_woman_girl_girl\",\n  \"family_woman_woman_boy\",\n  \"family_woman_woman_girl\",\n  \"family_woman_woman_girl_boy\",\n  \"family_woman_woman_boy_boy\",\n  \"family_woman_woman_girl_girl\",\n  \"family_man_man_boy\",\n  \"family_man_man_girl\",\n  \"family_man_man_girl_boy\",\n  \"family_man_man_boy_boy\",\n  \"family_man_man_girl_girl\",\n  \"family_woman_boy\",\n  \"family_woman_girl\",\n  \"family_woman_girl_boy\",\n  \"family_woman_boy_boy\",\n  \"family_woman_girl_girl\",\n  \"family_man_boy\",\n  \"family_man_girl\",\n  \"family_man_girl_boy\",\n  \"family_man_boy_boy\",\n  \"family_man_girl_girl\",\n  \"yarn\",\n  \"thread\",\n  \"coat\",\n  \"labcoat\",\n  \"womans_clothes\",\n  \"tshirt\",\n  \"jeans\",\n  \"necktie\",\n  \"dress\",\n  \"bikini\",\n  \"kimono\",\n  \"flat_shoe\",\n  \"high_heel\",\n  \"sandal\",\n  \"boot\",\n  \"mans_shoe\",\n  \"athletic_shoe\",\n  \"hiking_boot\",\n  \"socks\",\n  \"gloves\",\n  \"scarf\",\n  \"tophat\",\n  \"billed_hat\",\n  \"womans_hat\",\n  \"mortar_board\",\n  \"rescue_worker_helmet\",\n  \"crown\",\n  \"pouch\",\n  \"purse\",\n  \"handbag\",\n  \"briefcase\",\n  \"school_satchel\",\n  \"luggage\",\n  \"eyeglasses\",\n  \"dark_sunglasses\",\n  \"goggles\",\n  \"closed_umbrella\",\n  \"dog\",\n  \"cat\",\n  \"mouse\",\n  \"hamster\",\n  \"rabbit\",\n  \"fox_face\",\n  \"bear\",\n  \"panda_face\",\n  \"koala\",\n  \"tiger\",\n  \"lion\",\n  \"cow\",\n  \"pig\",\n  \"pig_nose\",\n  \"frog\",\n  \"monkey_face\",\n  \"see_no_evil\",\n  \"hear_no_evil\",\n  \"speak_no_evil\",\n  \"monkey\",\n  \"chicken\",\n  \"penguin\",\n  \"bird\",\n  \"baby_chick\",\n  \"hatching_chick\",\n  \"hatched_chick\",\n  \"duck\",\n  \"eagle\",\n  \"owl\",\n  \"bat\",\n  \"wolf\",\n  \"boar\",\n  \"horse\",\n  \"unicorn\",\n  \"honeybee\",\n  \"bug\",\n  \"butterfly\",\n  \"snail\",\n  \"shell\",\n  \"beetle\",\n  \"ant\",\n  \"mosquito\",\n  \"grasshopper\",\n  \"spider\",\n  \"spider_web\",\n  \"scorpion\",\n  \"turtle\",\n  \"snake\",\n  \"lizard\",\n  \"t-rex\",\n  \"sauropod\",\n  \"octopus\",\n  \"squid\",\n  \"shrimp\",\n  \"lobster\",\n  \"crab\",\n  \"blowfish\",\n  \"tropical_fish\",\n  \"fish\",\n  \"dolphin\",\n  \"whale\",\n  \"whale2\",\n  \"shark\",\n  \"crocodile\",\n  \"tiger2\",\n  \"leopard\",\n  \"zebra\",\n  \"gorilla\",\n  \"elephant\",\n  \"hippopotamus\",\n  \"rhinoceros\",\n  \"dromedary_camel\",\n  \"giraffe\",\n  \"kangaroo\",\n  \"camel\",\n  \"water_buffalo\",\n  \"ox\",\n  \"cow2\",\n  \"racehorse\",\n  \"pig2\",\n  \"ram\",\n  \"sheep\",\n  \"llama\",\n  \"goat\",\n  \"deer\",\n  \"dog2\",\n  \"poodle\",\n  \"cat2\",\n  \"rooster\",\n  \"turkey\",\n  \"peacock\",\n  \"parrot\",\n  \"swan\",\n  \"dove\",\n  \"rabbit2\",\n  \"raccoon\",\n  \"badger\",\n  \"rat\",\n  \"mouse2\",\n  \"chipmunk\",\n  \"hedgehog\",\n  \"paw_prints\",\n  \"dragon\",\n  \"dragon_face\",\n  \"cactus\",\n  \"christmas_tree\",\n  \"evergreen_tree\",\n  \"deciduous_tree\",\n  \"palm_tree\",\n  \"seedling\",\n  \"herb\",\n  \"shamrock\",\n  \"four_leaf_clover\",\n  \"bamboo\",\n  \"tanabata_tree\",\n  \"leaves\",\n  \"fallen_leaf\",\n  \"maple_leaf\",\n  \"ear_of_rice\",\n  \"hibiscus\",\n  \"sunflower\",\n  \"rose\",\n  \"wilted_flower\",\n  \"tulip\",\n  \"blossom\",\n  \"cherry_blossom\",\n  \"bouquet\",\n  \"mushroom\",\n  \"earth_americas\",\n  \"earth_africa\",\n  \"earth_asia\",\n  \"full_moon\",\n  \"waning_gibbous_moon\",\n  \"last_quarter_moon\",\n  \"waning_crescent_moon\",\n  \"new_moon\",\n  \"waxing_crescent_moon\",\n  \"first_quarter_moon\",\n  \"waxing_gibbous_moon\",\n  \"new_moon_with_face\",\n  \"full_moon_with_face\",\n  \"first_quarter_moon_with_face\",\n  \"last_quarter_moon_with_face\",\n  \"sun_with_face\",\n  \"crescent_moon\",\n  \"star\",\n  \"star2\",\n  \"dizzy\",\n  \"sparkles\",\n  \"comet\",\n  \"sunny\",\n  \"sun_behind_small_cloud\",\n  \"partly_sunny\",\n  \"sun_behind_large_cloud\",\n  \"sun_behind_rain_cloud\",\n  \"cloud\",\n  \"cloud_with_rain\",\n  \"cloud_with_lightning_and_rain\",\n  \"cloud_with_lightning\",\n  \"zap\",\n  \"fire\",\n  \"boom\",\n  \"snowflake\",\n  \"cloud_with_snow\",\n  \"snowman\",\n  \"snowman_with_snow\",\n  \"wind_face\",\n  \"dash\",\n  \"tornado\",\n  \"fog\",\n  \"open_umbrella\",\n  \"umbrella\",\n  \"droplet\",\n  \"sweat_drops\",\n  \"ocean\",\n  \"green_apple\",\n  \"apple\",\n  \"pear\",\n  \"tangerine\",\n  \"lemon\",\n  \"banana\",\n  \"watermelon\",\n  \"grapes\",\n  \"strawberry\",\n  \"melon\",\n  \"cherries\",\n  \"peach\",\n  \"mango\",\n  \"pineapple\",\n  \"coconut\",\n  \"kiwi_fruit\",\n  \"tomato\",\n  \"eggplant\",\n  \"avocado\",\n  \"broccoli\",\n  \"leafy_greens\",\n  \"cucumber\",\n  \"hot_pepper\",\n  \"corn\",\n  \"carrot\",\n  \"potato\",\n  \"sweet_potato\",\n  \"croissant\",\n  \"bagel\",\n  \"bread\",\n  \"baguette_bread\",\n  \"pretzel\",\n  \"cheese\",\n  \"egg\",\n  \"fried_egg\",\n  \"pancakes\",\n  \"bacon\",\n  \"steak\",\n  \"poultry_leg\",\n  \"meat_on_bone\",\n  \"bone\",\n  \"hotdog\",\n  \"hamburger\",\n  \"fries\",\n  \"pizza\",\n  \"sandwich\",\n  \"stuffed_flatbread\",\n  \"taco\",\n  \"burrito\",\n  \"green_salad\",\n  \"shallow_pan_of_food\",\n  \"canned_food\",\n  \"spaghetti\",\n  \"ramen\",\n  \"stew\",\n  \"curry\",\n  \"sushi\",\n  \"bento\",\n  \"fried_shrimp\",\n  \"rice_ball\",\n  \"rice\",\n  \"rice_cracker\",\n  \"fish_cake\",\n  \"fortune_cookie\",\n  \"moon_cake\",\n  \"oden\",\n  \"dango\",\n  \"shaved_ice\",\n  \"ice_cream\",\n  \"icecream\",\n  \"pie\",\n  \"cupcake\",\n  \"cake\",\n  \"birthday\",\n  \"custard\",\n  \"lollipop\",\n  \"candy\",\n  \"chocolate_bar\",\n  \"popcorn\",\n  \"doughnut\",\n  \"dumpling\",\n  \"cookie\",\n  \"chestnut\",\n  \"peanuts\",\n  \"honey_pot\",\n  \"milk_glass\",\n  \"baby_bottle\",\n  \"coffee\",\n  \"tea\",\n  \"cup_with_straw\",\n  \"sake\",\n  \"beer\",\n  \"beers\",\n  \"clinking_glasses\",\n  \"wine_glass\",\n  \"tumbler_glass\",\n  \"cocktail\",\n  \"tropical_drink\",\n  \"champagne\",\n  \"spoon\",\n  \"fork_and_knife\",\n  \"plate_with_cutlery\",\n  \"bowl_with_spoon\",\n  \"takeout_box\",\n  \"chopsticks\",\n  \"salt\",\n  \"soccer\",\n  \"basketball\",\n  \"football\",\n  \"baseball\",\n  \"softball\",\n  \"tennis\",\n  \"volleyball\",\n  \"rugby_football\",\n  \"flying_disc\",\n  \"8ball\",\n  \"golf\",\n  \"golfing_woman\",\n  \"golfing_man\",\n  \"ping_pong\",\n  \"badminton\",\n  \"goal_net\",\n  \"ice_hockey\",\n  \"field_hockey\",\n  \"lacrosse\",\n  \"cricket\",\n  \"ski\",\n  \"skier\",\n  \"snowboarder\",\n  \"person_fencing\",\n  \"women_wrestling\",\n  \"men_wrestling\",\n  \"woman_cartwheeling\",\n  \"man_cartwheeling\",\n  \"woman_playing_handball\",\n  \"man_playing_handball\",\n  \"ice_skate\",\n  \"curling_stone\",\n  \"skateboard\",\n  \"sled\",\n  \"bow_and_arrow\",\n  \"fishing_pole_and_fish\",\n  \"boxing_glove\",\n  \"martial_arts_uniform\",\n  \"rowing_woman\",\n  \"rowing_man\",\n  \"climbing_woman\",\n  \"climbing_man\",\n  \"swimming_woman\",\n  \"swimming_man\",\n  \"woman_playing_water_polo\",\n  \"man_playing_water_polo\",\n  \"woman_in_lotus_position\",\n  \"man_in_lotus_position\",\n  \"surfing_woman\",\n  \"surfing_man\",\n  \"basketball_woman\",\n  \"basketball_man\",\n  \"weight_lifting_woman\",\n  \"weight_lifting_man\",\n  \"biking_woman\",\n  \"biking_man\",\n  \"mountain_biking_woman\",\n  \"mountain_biking_man\",\n  \"horse_racing\",\n  \"trophy\",\n  \"running_shirt_with_sash\",\n  \"medal_sports\",\n  \"medal_military\",\n  \"1st_place_medal\",\n  \"2nd_place_medal\",\n  \"3rd_place_medal\",\n  \"reminder_ribbon\",\n  \"rosette\",\n  \"ticket\",\n  \"tickets\",\n  \"performing_arts\",\n  \"art\",\n  \"circus_tent\",\n  \"woman_juggling\",\n  \"man_juggling\",\n  \"microphone\",\n  \"headphones\",\n  \"musical_score\",\n  \"musical_keyboard\",\n  \"drum\",\n  \"saxophone\",\n  \"trumpet\",\n  \"guitar\",\n  \"violin\",\n  \"clapper\",\n  \"video_game\",\n  \"dart\",\n  \"game_die\",\n  \"chess_pawn\",\n  \"slot_machine\",\n  \"jigsaw\",\n  \"bowling\",\n  \"red_car\",\n  \"taxi\",\n  \"blue_car\",\n  \"bus\",\n  \"trolleybus\",\n  \"racing_car\",\n  \"police_car\",\n  \"ambulance\",\n  \"fire_engine\",\n  \"minibus\",\n  \"truck\",\n  \"articulated_lorry\",\n  \"tractor\",\n  \"kick_scooter\",\n  \"motorcycle\",\n  \"bike\",\n  \"motor_scooter\",\n  \"rotating_light\",\n  \"oncoming_police_car\",\n  \"oncoming_bus\",\n  \"oncoming_automobile\",\n  \"oncoming_taxi\",\n  \"aerial_tramway\",\n  \"mountain_cableway\",\n  \"suspension_railway\",\n  \"railway_car\",\n  \"train\",\n  \"monorail\",\n  \"bullettrain_side\",\n  \"bullettrain_front\",\n  \"light_rail\",\n  \"mountain_railway\",\n  \"steam_locomotive\",\n  \"train2\",\n  \"metro\",\n  \"tram\",\n  \"station\",\n  \"flying_saucer\",\n  \"helicopter\",\n  \"small_airplane\",\n  \"airplane\",\n  \"flight_departure\",\n  \"flight_arrival\",\n  \"sailboat\",\n  \"motor_boat\",\n  \"speedboat\",\n  \"ferry\",\n  \"passenger_ship\",\n  \"rocket\",\n  \"artificial_satellite\",\n  \"seat\",\n  \"canoe\",\n  \"anchor\",\n  \"construction\",\n  \"fuelpump\",\n  \"busstop\",\n  \"vertical_traffic_light\",\n  \"traffic_light\",\n  \"ship\",\n  \"ferris_wheel\",\n  \"roller_coaster\",\n  \"carousel_horse\",\n  \"building_construction\",\n  \"foggy\",\n  \"tokyo_tower\",\n  \"factory\",\n  \"fountain\",\n  \"rice_scene\",\n  \"mountain\",\n  \"mountain_snow\",\n  \"mount_fuji\",\n  \"volcano\",\n  \"japan\",\n  \"camping\",\n  \"tent\",\n  \"national_park\",\n  \"motorway\",\n  \"railway_track\",\n  \"sunrise\",\n  \"sunrise_over_mountains\",\n  \"desert\",\n  \"beach_umbrella\",\n  \"desert_island\",\n  \"city_sunrise\",\n  \"city_sunset\",\n  \"cityscape\",\n  \"night_with_stars\",\n  \"bridge_at_night\",\n  \"milky_way\",\n  \"stars\",\n  \"sparkler\",\n  \"fireworks\",\n  \"rainbow\",\n  \"houses\",\n  \"european_castle\",\n  \"japanese_castle\",\n  \"stadium\",\n  \"statue_of_liberty\",\n  \"house\",\n  \"house_with_garden\",\n  \"derelict_house\",\n  \"office\",\n  \"department_store\",\n  \"post_office\",\n  \"european_post_office\",\n  \"hospital\",\n  \"bank\",\n  \"hotel\",\n  \"convenience_store\",\n  \"school\",\n  \"love_hotel\",\n  \"wedding\",\n  \"classical_building\",\n  \"church\",\n  \"mosque\",\n  \"synagogue\",\n  \"kaaba\",\n  \"shinto_shrine\",\n  \"watch\",\n  \"iphone\",\n  \"calling\",\n  \"computer\",\n  \"keyboard\",\n  \"desktop_computer\",\n  \"printer\",\n  \"computer_mouse\",\n  \"trackball\",\n  \"joystick\",\n  \"clamp\",\n  \"minidisc\",\n  \"floppy_disk\",\n  \"cd\",\n  \"dvd\",\n  \"vhs\",\n  \"camera\",\n  \"camera_flash\",\n  \"video_camera\",\n  \"movie_camera\",\n  \"film_projector\",\n  \"film_strip\",\n  \"telephone_receiver\",\n  \"phone\",\n  \"pager\",\n  \"fax\",\n  \"tv\",\n  \"radio\",\n  \"studio_microphone\",\n  \"level_slider\",\n  \"control_knobs\",\n  \"compass\",\n  \"stopwatch\",\n  \"timer_clock\",\n  \"alarm_clock\",\n  \"mantelpiece_clock\",\n  \"hourglass_flowing_sand\",\n  \"hourglass\",\n  \"satellite\",\n  \"battery\",\n  \"electric_plug\",\n  \"bulb\",\n  \"flashlight\",\n  \"candle\",\n  \"fire_extinguisher\",\n  \"wastebasket\",\n  \"oil_drum\",\n  \"money_with_wings\",\n  \"dollar\",\n  \"yen\",\n  \"euro\",\n  \"pound\",\n  \"moneybag\",\n  \"credit_card\",\n  \"gem\",\n  \"balance_scale\",\n  \"toolbox\",\n  \"wrench\",\n  \"hammer\",\n  \"hammer_and_pick\",\n  \"hammer_and_wrench\",\n  \"pick\",\n  \"nut_and_bolt\",\n  \"gear\",\n  \"brick\",\n  \"chains\",\n  \"magnet\",\n  \"gun\",\n  \"bomb\",\n  \"firecracker\",\n  \"hocho\",\n  \"dagger\",\n  \"crossed_swords\",\n  \"shield\",\n  \"smoking\",\n  \"coffin\",\n  \"funeral_urn\",\n  \"amphora\",\n  \"crystal_ball\",\n  \"prayer_beads\",\n  \"nazar_amulet\",\n  \"barber\",\n  \"alembic\",\n  \"telescope\",\n  \"microscope\",\n  \"hole\",\n  \"pill\",\n  \"syringe\",\n  \"dna\",\n  \"microbe\",\n  \"petri_dish\",\n  \"test_tube\",\n  \"thermometer\",\n  \"broom\",\n  \"basket\",\n  \"toilet_paper\",\n  \"label\",\n  \"bookmark\",\n  \"toilet\",\n  \"shower\",\n  \"bathtub\",\n  \"bath\",\n  \"soap\",\n  \"sponge\",\n  \"lotion_bottle\",\n  \"key\",\n  \"old_key\",\n  \"couch_and_lamp\",\n  \"sleeping_bed\",\n  \"bed\",\n  \"door\",\n  \"bellhop_bell\",\n  \"teddy_bear\",\n  \"framed_picture\",\n  \"world_map\",\n  \"parasol_on_ground\",\n  \"moyai\",\n  \"shopping\",\n  \"shopping_cart\",\n  \"balloon\",\n  \"flags\",\n  \"ribbon\",\n  \"gift\",\n  \"confetti_ball\",\n  \"tada\",\n  \"dolls\",\n  \"wind_chime\",\n  \"crossed_flags\",\n  \"izakaya_lantern\",\n  \"red_envelope\",\n  \"email\",\n  \"envelope_with_arrow\",\n  \"incoming_envelope\",\n  \"e-mail\",\n  \"love_letter\",\n  \"postbox\",\n  \"mailbox_closed\",\n  \"mailbox\",\n  \"mailbox_with_mail\",\n  \"mailbox_with_no_mail\",\n  \"package\",\n  \"postal_horn\",\n  \"inbox_tray\",\n  \"outbox_tray\",\n  \"scroll\",\n  \"page_with_curl\",\n  \"bookmark_tabs\",\n  \"receipt\",\n  \"bar_chart\",\n  \"chart_with_upwards_trend\",\n  \"chart_with_downwards_trend\",\n  \"page_facing_up\",\n  \"date\",\n  \"calendar\",\n  \"spiral_calendar\",\n  \"card_index\",\n  \"card_file_box\",\n  \"ballot_box\",\n  \"file_cabinet\",\n  \"clipboard\",\n  \"spiral_notepad\",\n  \"file_folder\",\n  \"open_file_folder\",\n  \"card_index_dividers\",\n  \"newspaper_roll\",\n  \"newspaper\",\n  \"notebook\",\n  \"closed_book\",\n  \"green_book\",\n  \"blue_book\",\n  \"orange_book\",\n  \"notebook_with_decorative_cover\",\n  \"ledger\",\n  \"books\",\n  \"open_book\",\n  \"safety_pin\",\n  \"link\",\n  \"paperclip\",\n  \"paperclips\",\n  \"scissors\",\n  \"triangular_ruler\",\n  \"straight_ruler\",\n  \"abacus\",\n  \"pushpin\",\n  \"round_pushpin\",\n  \"closed_lock_with_key\",\n  \"lock\",\n  \"unlock\",\n  \"lock_with_ink_pen\",\n  \"pen\",\n  \"fountain_pen\",\n  \"black_nib\",\n  \"memo\",\n  \"pencil2\",\n  \"crayon\",\n  \"paintbrush\",\n  \"mag\",\n  \"mag_right\",\n  \"heart\",\n  \"orange_heart\",\n  \"yellow_heart\",\n  \"green_heart\",\n  \"blue_heart\",\n  \"purple_heart\",\n  \"black_heart\",\n  \"broken_heart\",\n  \"heavy_heart_exclamation\",\n  \"two_hearts\",\n  \"revolving_hearts\",\n  \"heartbeat\",\n  \"heartpulse\",\n  \"sparkling_heart\",\n  \"cupid\",\n  \"gift_heart\",\n  \"heart_decoration\",\n  \"peace_symbol\",\n  \"latin_cross\",\n  \"star_and_crescent\",\n  \"om\",\n  \"wheel_of_dharma\",\n  \"star_of_david\",\n  \"six_pointed_star\",\n  \"menorah\",\n  \"yin_yang\",\n  \"orthodox_cross\",\n  \"place_of_worship\",\n  \"ophiuchus\",\n  \"aries\",\n  \"taurus\",\n  \"gemini\",\n  \"cancer\",\n  \"leo\",\n  \"virgo\",\n  \"libra\",\n  \"scorpius\",\n  \"sagittarius\",\n  \"capricorn\",\n  \"aquarius\",\n  \"pisces\",\n  \"id\",\n  \"atom_symbol\",\n  \"u7a7a\",\n  \"u5272\",\n  \"radioactive\",\n  \"biohazard\",\n  \"mobile_phone_off\",\n  \"vibration_mode\",\n  \"u6709\",\n  \"u7121\",\n  \"u7533\",\n  \"u55b6\",\n  \"u6708\",\n  \"eight_pointed_black_star\",\n  \"vs\",\n  \"accept\",\n  \"white_flower\",\n  \"ideograph_advantage\",\n  \"secret\",\n  \"congratulations\",\n  \"u5408\",\n  \"u6e80\",\n  \"u7981\",\n  \"a\",\n  \"b\",\n  \"ab\",\n  \"cl\",\n  \"o2\",\n  \"sos\",\n  \"no_entry\",\n  \"name_badge\",\n  \"no_entry_sign\",\n  \"x\",\n  \"o\",\n  \"stop_sign\",\n  \"anger\",\n  \"hotsprings\",\n  \"no_pedestrians\",\n  \"do_not_litter\",\n  \"no_bicycles\",\n  \"non-potable_water\",\n  \"underage\",\n  \"no_mobile_phones\",\n  \"exclamation\",\n  \"grey_exclamation\",\n  \"question\",\n  \"grey_question\",\n  \"bangbang\",\n  \"interrobang\",\n  \"100\",\n  \"low_brightness\",\n  \"high_brightness\",\n  \"trident\",\n  \"fleur_de_lis\",\n  \"part_alternation_mark\",\n  \"warning\",\n  \"children_crossing\",\n  \"beginner\",\n  \"recycle\",\n  \"u6307\",\n  \"chart\",\n  \"sparkle\",\n  \"eight_spoked_asterisk\",\n  \"negative_squared_cross_mark\",\n  \"white_check_mark\",\n  \"diamond_shape_with_a_dot_inside\",\n  \"cyclone\",\n  \"loop\",\n  \"globe_with_meridians\",\n  \"m\",\n  \"atm\",\n  \"zzz\",\n  \"sa\",\n  \"passport_control\",\n  \"customs\",\n  \"baggage_claim\",\n  \"left_luggage\",\n  \"wheelchair\",\n  \"no_smoking\",\n  \"wc\",\n  \"parking\",\n  \"potable_water\",\n  \"mens\",\n  \"womens\",\n  \"baby_symbol\",\n  \"restroom\",\n  \"put_litter_in_its_place\",\n  \"cinema\",\n  \"signal_strength\",\n  \"koko\",\n  \"ng\",\n  \"ok\",\n  \"up\",\n  \"cool\",\n  \"new\",\n  \"free\",\n  \"zero\",\n  \"one\",\n  \"two\",\n  \"three\",\n  \"four\",\n  \"five\",\n  \"six\",\n  \"seven\",\n  \"eight\",\n  \"nine\",\n  \"keycap_ten\",\n  \"asterisk\",\n  \"1234\",\n  \"eject_button\",\n  \"arrow_forward\",\n  \"pause_button\",\n  \"next_track_button\",\n  \"stop_button\",\n  \"record_button\",\n  \"play_or_pause_button\",\n  \"previous_track_button\",\n  \"fast_forward\",\n  \"rewind\",\n  \"twisted_rightwards_arrows\",\n  \"repeat\",\n  \"repeat_one\",\n  \"arrow_backward\",\n  \"arrow_up_small\",\n  \"arrow_down_small\",\n  \"arrow_double_up\",\n  \"arrow_double_down\",\n  \"arrow_right\",\n  \"arrow_left\",\n  \"arrow_up\",\n  \"arrow_down\",\n  \"arrow_upper_right\",\n  \"arrow_lower_right\",\n  \"arrow_lower_left\",\n  \"arrow_upper_left\",\n  \"arrow_up_down\",\n  \"left_right_arrow\",\n  \"arrows_counterclockwise\",\n  \"arrow_right_hook\",\n  \"leftwards_arrow_with_hook\",\n  \"arrow_heading_up\",\n  \"arrow_heading_down\",\n  \"hash\",\n  \"information_source\",\n  \"abc\",\n  \"abcd\",\n  \"capital_abcd\",\n  \"symbols\",\n  \"musical_note\",\n  \"notes\",\n  \"wavy_dash\",\n  \"curly_loop\",\n  \"heavy_check_mark\",\n  \"arrows_clockwise\",\n  \"heavy_plus_sign\",\n  \"heavy_minus_sign\",\n  \"heavy_division_sign\",\n  \"heavy_multiplication_x\",\n  \"infinity\",\n  \"heavy_dollar_sign\",\n  \"currency_exchange\",\n  \"copyright\",\n  \"registered\",\n  \"tm\",\n  \"end\",\n  \"back\",\n  \"on\",\n  \"top\",\n  \"soon\",\n  \"ballot_box_with_check\",\n  \"radio_button\",\n  \"white_circle\",\n  \"black_circle\",\n  \"red_circle\",\n  \"large_blue_circle\",\n  \"small_orange_diamond\",\n  \"small_blue_diamond\",\n  \"large_orange_diamond\",\n  \"large_blue_diamond\",\n  \"small_red_triangle\",\n  \"black_small_square\",\n  \"white_small_square\",\n  \"black_large_square\",\n  \"white_large_square\",\n  \"small_red_triangle_down\",\n  \"black_medium_square\",\n  \"white_medium_square\",\n  \"black_medium_small_square\",\n  \"white_medium_small_square\",\n  \"black_square_button\",\n  \"white_square_button\",\n  \"speaker\",\n  \"sound\",\n  \"loud_sound\",\n  \"mute\",\n  \"mega\",\n  \"loudspeaker\",\n  \"bell\",\n  \"no_bell\",\n  \"black_joker\",\n  \"mahjong\",\n  \"spades\",\n  \"clubs\",\n  \"hearts\",\n  \"diamonds\",\n  \"flower_playing_cards\",\n  \"thought_balloon\",\n  \"right_anger_bubble\",\n  \"speech_balloon\",\n  \"left_speech_bubble\",\n  \"clock1\",\n  \"clock2\",\n  \"clock3\",\n  \"clock4\",\n  \"clock5\",\n  \"clock6\",\n  \"clock7\",\n  \"clock8\",\n  \"clock9\",\n  \"clock10\",\n  \"clock11\",\n  \"clock12\",\n  \"clock130\",\n  \"clock230\",\n  \"clock330\",\n  \"clock430\",\n  \"clock530\",\n  \"clock630\",\n  \"clock730\",\n  \"clock830\",\n  \"clock930\",\n  \"clock1030\",\n  \"clock1130\",\n  \"clock1230\",\n  \"white_flag\",\n  \"black_flag\",\n  \"pirate_flag\",\n  \"checkered_flag\",\n  \"triangular_flag_on_post\",\n  \"rainbow_flag\",\n  \"united_nations\",\n  \"afghanistan\",\n  \"aland_islands\",\n  \"albania\",\n  \"algeria\",\n  \"american_samoa\",\n  \"andorra\",\n  \"angola\",\n  \"anguilla\",\n  \"antarctica\",\n  \"antigua_barbuda\",\n  \"argentina\",\n  \"armenia\",\n  \"aruba\",\n  \"australia\",\n  \"austria\",\n  \"azerbaijan\",\n  \"bahamas\",\n  \"bahrain\",\n  \"bangladesh\",\n  \"barbados\",\n  \"belarus\",\n  \"belgium\",\n  \"belize\",\n  \"benin\",\n  \"bermuda\",\n  \"bhutan\",\n  \"bolivia\",\n  \"caribbean_netherlands\",\n  \"bosnia_herzegovina\",\n  \"botswana\",\n  \"brazil\",\n  \"british_indian_ocean_territory\",\n  \"british_virgin_islands\",\n  \"brunei\",\n  \"bulgaria\",\n  \"burkina_faso\",\n  \"burundi\",\n  \"cape_verde\",\n  \"cambodia\",\n  \"cameroon\",\n  \"canada\",\n  \"canary_islands\",\n  \"cayman_islands\",\n  \"central_african_republic\",\n  \"chad\",\n  \"chile\",\n  \"cn\",\n  \"christmas_island\",\n  \"cocos_islands\",\n  \"colombia\",\n  \"comoros\",\n  \"congo_brazzaville\",\n  \"congo_kinshasa\",\n  \"cook_islands\",\n  \"costa_rica\",\n  \"croatia\",\n  \"cuba\",\n  \"curacao\",\n  \"cyprus\",\n  \"czech_republic\",\n  \"denmark\",\n  \"djibouti\",\n  \"dominica\",\n  \"dominican_republic\",\n  \"ecuador\",\n  \"egypt\",\n  \"el_salvador\",\n  \"equatorial_guinea\",\n  \"eritrea\",\n  \"estonia\",\n  \"ethiopia\",\n  \"eu\",\n  \"falkland_islands\",\n  \"faroe_islands\",\n  \"fiji\",\n  \"finland\",\n  \"fr\",\n  \"french_guiana\",\n  \"french_polynesia\",\n  \"french_southern_territories\",\n  \"gabon\",\n  \"gambia\",\n  \"georgia\",\n  \"de\",\n  \"ghana\",\n  \"gibraltar\",\n  \"greece\",\n  \"greenland\",\n  \"grenada\",\n  \"guadeloupe\",\n  \"guam\",\n  \"guatemala\",\n  \"guernsey\",\n  \"guinea\",\n  \"guinea_bissau\",\n  \"guyana\",\n  \"haiti\",\n  \"honduras\",\n  \"hong_kong\",\n  \"hungary\",\n  \"iceland\",\n  \"india\",\n  \"indonesia\",\n  \"iran\",\n  \"iraq\",\n  \"ireland\",\n  \"isle_of_man\",\n  \"israel\",\n  \"it\",\n  \"cote_divoire\",\n  \"jamaica\",\n  \"jp\",\n  \"jersey\",\n  \"jordan\",\n  \"kazakhstan\",\n  \"kenya\",\n  \"kiribati\",\n  \"kosovo\",\n  \"kuwait\",\n  \"kyrgyzstan\",\n  \"laos\",\n  \"latvia\",\n  \"lebanon\",\n  \"lesotho\",\n  \"liberia\",\n  \"libya\",\n  \"liechtenstein\",\n  \"lithuania\",\n  \"luxembourg\",\n  \"macau\",\n  \"macedonia\",\n  \"madagascar\",\n  \"malawi\",\n  \"malaysia\",\n  \"maldives\",\n  \"mali\",\n  \"malta\",\n  \"marshall_islands\",\n  \"martinique\",\n  \"mauritania\",\n  \"mauritius\",\n  \"mayotte\",\n  \"mexico\",\n  \"micronesia\",\n  \"moldova\",\n  \"monaco\",\n  \"mongolia\",\n  \"montenegro\",\n  \"montserrat\",\n  \"morocco\",\n  \"mozambique\",\n  \"myanmar\",\n  \"namibia\",\n  \"nauru\",\n  \"nepal\",\n  \"netherlands\",\n  \"new_caledonia\",\n  \"new_zealand\",\n  \"nicaragua\",\n  \"niger\",\n  \"nigeria\",\n  \"niue\",\n  \"norfolk_island\",\n  \"northern_mariana_islands\",\n  \"north_korea\",\n  \"norway\",\n  \"oman\",\n  \"pakistan\",\n  \"palau\",\n  \"palestinian_territories\",\n  \"panama\",\n  \"papua_new_guinea\",\n  \"paraguay\",\n  \"peru\",\n  \"philippines\",\n  \"pitcairn_islands\",\n  \"poland\",\n  \"portugal\",\n  \"puerto_rico\",\n  \"qatar\",\n  \"reunion\",\n  \"romania\",\n  \"ru\",\n  \"rwanda\",\n  \"st_barthelemy\",\n  \"st_helena\",\n  \"st_kitts_nevis\",\n  \"st_lucia\",\n  \"st_pierre_miquelon\",\n  \"st_vincent_grenadines\",\n  \"samoa\",\n  \"san_marino\",\n  \"sao_tome_principe\",\n  \"saudi_arabia\",\n  \"senegal\",\n  \"serbia\",\n  \"seychelles\",\n  \"sierra_leone\",\n  \"singapore\",\n  \"sint_maarten\",\n  \"slovakia\",\n  \"slovenia\",\n  \"solomon_islands\",\n  \"somalia\",\n  \"south_africa\",\n  \"south_georgia_south_sandwich_islands\",\n  \"kr\",\n  \"south_sudan\",\n  \"es\",\n  \"sri_lanka\",\n  \"sudan\",\n  \"suriname\",\n  \"swaziland\",\n  \"sweden\",\n  \"switzerland\",\n  \"syria\",\n  \"taiwan\",\n  \"tajikistan\",\n  \"tanzania\",\n  \"thailand\",\n  \"timor_leste\",\n  \"togo\",\n  \"tokelau\",\n  \"tonga\",\n  \"trinidad_tobago\",\n  \"tunisia\",\n  \"tr\",\n  \"turkmenistan\",\n  \"turks_caicos_islands\",\n  \"tuvalu\",\n  \"uganda\",\n  \"ukraine\",\n  \"united_arab_emirates\",\n  \"uk\",\n  \"england\",\n  \"scotland\",\n  \"wales\",\n  \"us\",\n  \"us_virgin_islands\",\n  \"uruguay\",\n  \"uzbekistan\",\n  \"vanuatu\",\n  \"vatican_city\",\n  \"venezuela\",\n  \"vietnam\",\n  \"wallis_futuna\",\n  \"western_sahara\",\n  \"yemen\",\n  \"zambia\",\n  \"zimbabwe\"\n]\n", "module.exports = {\n  lib: require('./emojis'),\n  ordered: require('./ordered'),\n  fitzpatrick_scale_modifiers: [\"\uD83C\uDFFB\", \"\uD83C\uDFFC\", \"\uD83C\uDFFD\", \"\uD83C\uDFFE\", \"\uD83C\uDFFF\"]\n}\n", "\"use strict\"\r\n\r\n// Based on: https://github.com/lodash/lodash/blob/6018350ac10d5ce6a5b7db625140b82aeab804df/.internal/unicodeSize.js\r\n\r\nmodule.exports = () => {\r\n\t// Used to compose unicode character classes.\r\n\tconst astralRange = \"\\\\ud800-\\\\udfff\"\r\n\tconst comboMarksRange = \"\\\\u0300-\\\\u036f\"\r\n\tconst comboHalfMarksRange = \"\\\\ufe20-\\\\ufe2f\"\r\n\tconst comboSymbolsRange = \"\\\\u20d0-\\\\u20ff\"\r\n\tconst comboMarksExtendedRange = \"\\\\u1ab0-\\\\u1aff\"\r\n\tconst comboMarksSupplementRange = \"\\\\u1dc0-\\\\u1dff\"\r\n\tconst comboRange = comboMarksRange + comboHalfMarksRange + comboSymbolsRange + comboMarksExtendedRange + comboMarksSupplementRange\r\n\tconst varRange = \"\\\\ufe0e\\\\ufe0f\"\r\n\tconst familyRange = \"\\\\uD83D\\\\uDC69\\\\uD83C\\\\uDFFB\\\\u200D\\\\uD83C\\\\uDF93\"\r\n\r\n\t// Used to compose unicode capture groups.\r\n\tconst astral = `[${astralRange}]`\r\n\tconst combo = `[${comboRange}]`\r\n\tconst fitz = \"\\\\ud83c[\\\\udffb-\\\\udfff]\"\r\n\tconst modifier = `(?:${combo}|${fitz})`\r\n\tconst nonAstral = `[^${astralRange}]`\r\n\tconst regional = \"(?:\\\\uD83C[\\\\uDDE6-\\\\uDDFF]){2}\"\r\n\tconst surrogatePair = \"[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]\"\r\n\tconst zwj = \"\\\\u200d\"\r\n\tconst blackFlag = \"(?:\\\\ud83c\\\\udff4\\\\udb40\\\\udc67\\\\udb40\\\\udc62\\\\udb40(?:\\\\udc65|\\\\udc73|\\\\udc77)\\\\udb40(?:\\\\udc6e|\\\\udc63|\\\\udc6c)\\\\udb40(?:\\\\udc67|\\\\udc74|\\\\udc73)\\\\udb40\\\\udc7f)\"\r\n\tconst family = `[${familyRange}]`\r\n\r\n\t// Used to compose unicode regexes.\r\n\tconst optModifier = `${modifier}?`\r\n\tconst optVar = `[${varRange}]?`\r\n\tconst optJoin = `(?:${zwj}(?:${[nonAstral, regional, surrogatePair].join(\"|\")})${optVar + optModifier})*`\r\n\tconst seq = optVar + optModifier + optJoin\r\n\tconst nonAstralCombo = `${nonAstral}${combo}?`\r\n\tconst symbol = `(?:${[nonAstralCombo, combo, regional, surrogatePair, astral, family].join(\"|\")})`\r\n\r\n\t// Used to match [String symbols](https://mathiasbynens.be/notes/javascript-unicode).\r\n\treturn new RegExp(`${blackFlag}|${fitz}(?=${fitz})|${symbol + seq}`, \"g\")\r\n}\r\n", "// Generated using `npm run build`. Do not edit!\nmodule.exports = new Set([\n\t0x261D,\n\t0x26F9,\n\t0x270A,\n\t0x270B,\n\t0x270C,\n\t0x270D,\n\t0x1F385,\n\t0x1F3C3,\n\t0x1F3C4,\n\t0x1F3CA,\n\t0x1F3CB,\n\t0x1F442,\n\t0x1F443,\n\t0x1F446,\n\t0x1F447,\n\t0x1F448,\n\t0x1F449,\n\t0x1F44A,\n\t0x1F44B,\n\t0x1F44C,\n\t0x1F44D,\n\t0x1F44E,\n\t0x1F44F,\n\t0x1F450,\n\t0x1F466,\n\t0x1F467,\n\t0x1F468,\n\t0x1F469,\n\t0x1F46E,\n\t0x1F470,\n\t0x1F471,\n\t0x1F472,\n\t0x1F473,\n\t0x1F474,\n\t0x1F475,\n\t0x1F476,\n\t0x1F477,\n\t0x1F478,\n\t0x1F47C,\n\t0x1F481,\n\t0x1F482,\n\t0x1F483,\n\t0x1F485,\n\t0x1F486,\n\t0x1F487,\n\t0x1F4AA,\n\t0x1F575,\n\t0x1F57A,\n\t0x1F590,\n\t0x1F595,\n\t0x1F596,\n\t0x1F645,\n\t0x1F646,\n\t0x1F647,\n\t0x1F64B,\n\t0x1F64C,\n\t0x1F64D,\n\t0x1F64E,\n\t0x1F64F,\n\t0x1F6A3,\n\t0x1F6B4,\n\t0x1F6B5,\n\t0x1F6B6,\n\t0x1F6C0,\n\t0x1F918,\n\t0x1F919,\n\t0x1F91A,\n\t0x1F91B,\n\t0x1F91C,\n\t0x1F91D,\n\t0x1F91E,\n\t0x1F926,\n\t0x1F930,\n\t0x1F933,\n\t0x1F934,\n\t0x1F935,\n\t0x1F936,\n\t0x1F937,\n\t0x1F938,\n\t0x1F939,\n\t0x1F93C,\n\t0x1F93D,\n\t0x1F93E\n]);\n", "'use strict';\nconst emojiModifierBase = require('unicode-emoji-modifier-base');\n\nconst skinTones = new Map([\n\t['none', ''],\n\t['white', '\uD83C\uDFFB'],\n\t['creamWhite', '\uD83C\uDFFC'],\n\t['lightBrown', '\uD83C\uDFFD'],\n\t['brown', '\uD83C\uDFFE'],\n\t['darkBrown', '\uD83C\uDFFF']\n]);\n\nmodule.exports = (emoji, tone) => {\n\tif (!skinTones.has(tone)) {\n\t\tthrow new TypeError(`Unexpected \\`skinTone\\` name: ${tone}`);\n\t}\n\n\temoji = emoji.replace(/[\\u{1f3fb}-\\u{1f3ff}]/u, '');\n\n\tif (emojiModifierBase.has(emoji.codePointAt(0)) && tone !== 'none') {\n\t\temoji += skinTones.get(tone);\n\t}\n\n\treturn emoji;\n};\n", "\n/**\n * Expose `isUrl`.\n */\n\nmodule.exports = isUrl;\n\n/**\n * RegExps.\n * A URL must match #1 and then at least one of #2/#3.\n * Use two levels of REs to avoid REDOS.\n */\n\nvar protocolAndDomainRE = /^(?:\\w+:)?\\/\\/(\\S+)$/;\n\nvar localhostDomainRE = /^localhost[\\:?\\d]*(?:[^\\:?\\d]\\S*)?$/\nvar nonLocalhostDomainRE = /^[^\\s\\.]+\\.\\S{2,}$/;\n\n/**\n * Loosely validate a URL `string`.\n *\n * @param {String} string\n * @return {Boolean}\n */\n\nfunction isUrl(string){\n  if (typeof string !== 'string') {\n    return false;\n  }\n\n  var match = string.match(protocolAndDomainRE);\n  if (!match) {\n    return false;\n  }\n\n  var everythingAfterProtocol = match[1];\n  if (!everythingAfterProtocol) {\n    return false;\n  }\n\n  if (localhostDomainRE.test(everythingAfterProtocol) ||\n      nonLocalhostDomainRE.test(everythingAfterProtocol)) {\n    return true;\n  }\n\n  return false;\n}\n", "/**\n * @typedef {import('mdast').Root|import('mdast').Content} Node\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [includeImageAlt=true]\n *   Whether to use `alt` for `image`s.\n * @property {boolean | null | undefined} [includeHtml=true]\n *   Whether to use `value` of HTML.\n */\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Get the text content of a node or list of nodes.\n *\n * Prefers the node\u2019s plain-text fields, otherwise serializes its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} value\n *   Thing to serialize, typically `Node`.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized `value`.\n */\nexport function toString(value, options) {\n  const settings = options || emptyOptions\n  const includeImageAlt =\n    typeof settings.includeImageAlt === 'boolean'\n      ? settings.includeImageAlt\n      : true\n  const includeHtml =\n    typeof settings.includeHtml === 'boolean' ? settings.includeHtml : true\n\n  return one(value, includeImageAlt, includeHtml)\n}\n\n/**\n * One node or several nodes.\n *\n * @param {unknown} value\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(value, includeImageAlt, includeHtml) {\n  if (node(value)) {\n    if ('value' in value) {\n      return value.type === 'html' && !includeHtml ? '' : value.value\n    }\n\n    if (includeImageAlt && 'alt' in value && value.alt) {\n      return value.alt\n    }\n\n    if ('children' in value) {\n      return all(value.children, includeImageAlt, includeHtml)\n    }\n  }\n\n  if (Array.isArray(value)) {\n    return all(value, includeImageAlt, includeHtml)\n  }\n\n  return ''\n}\n\n/**\n * Serialize a list of nodes.\n *\n * @param {Array<unknown>} values\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized nodes.\n */\nfunction all(values, includeImageAlt, includeHtml) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt, includeHtml)\n  }\n\n  return result.join('')\n}\n\n/**\n * Check if `value` looks like a node.\n *\n * @param {unknown} value\n *   Thing.\n * @returns {value is Node}\n *   Whether `value` is a node.\n */\nfunction node(value) {\n  return Boolean(value && typeof value === 'object')\n}\n", "/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {number} start\n *   Index to remove/insert at (can be negative).\n * @param {number} remove\n *   Number of items to remove.\n * @param {Array<T>} items\n *   Items to inject into `list`.\n * @returns {void}\n *   Nothing.\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length\n  let chunkStart = 0\n  /** @type {Array<unknown>} */\n  let parameters\n\n  // Make start between zero and `end` (included).\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n  remove = remove > 0 ? remove : 0\n\n  // No need to chunk the items if there\u2019s only a couple (10k) items.\n  if (items.length < 10000) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove)\n    // @ts-expect-error Hush, it\u2019s fine.\n    list.splice(...parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) list.splice(start, remove)\n\n    // Insert the items in chunks to not cause stack overflows.\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000)\n      parameters.unshift(start, 0)\n      // @ts-expect-error Hush, it\u2019s fine.\n      list.splice(...parameters)\n      chunkStart += 10000\n      start += 10000\n    }\n  }\n}\n\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {Array<T>} items\n *   Items to add to `list`.\n * @returns {Array<T>}\n *   Either `list` or `items`.\n */\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items)\n    return list\n  }\n  return items\n}\n", "/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Handles} Handles\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n * @typedef {import('micromark-util-types').NormalizedExtension} NormalizedExtension\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine multiple syntax extensions into one.\n *\n * @param {Array<Extension>} extensions\n *   List of syntax extensions.\n * @returns {NormalizedExtension}\n *   A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all\n *   Extension to merge into.\n * @param {Extension} extension\n *   Extension to merge.\n * @returns {void}\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {keyof Extension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    /** @type {Record<string, unknown>} */\n    const left = maybe || (all[hook] = {})\n    /** @type {Record<string, unknown> | undefined} */\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    if (right) {\n      for (code in right) {\n        if (!hasOwnProperty.call(left, code)) left[code] = []\n        const value = right[code]\n        constructs(\n          // @ts-expect-error Looks like a list.\n          left[code],\n          Array.isArray(value) ? value : value ? [value] : []\n        )\n      }\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {Array<unknown>} existing\n * @param {Array<unknown>} list\n * @returns {void}\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {Array<unknown>} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine multiple HTML extensions into one.\n *\n * @param {Array<HtmlExtension>} htmlExtensions\n *   List of HTML extensions.\n * @returns {HtmlExtension}\n *   A single combined HTML extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all\n *   Extension to merge into.\n * @param {HtmlExtension} extension\n *   Extension to merge.\n * @returns {void}\n */\nfunction htmlExtension(all, extension) {\n  /** @type {keyof HtmlExtension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {keyof Handles} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        // @ts-expect-error assume document vs regular handler are managed correctly.\n        left[type] = right[type]\n      }\n    }\n  }\n}\n", "// This module is generated by `script/`.\n//\n// CommonMark handles attention (emphasis, strong) markers based on what comes\n// before or after them.\n// One such difference is if those characters are Unicode punctuation.\n// This script is generated from the Unicode data.\n\n/**\n * Regular expression that matches a unicode punctuation character.\n */\nexport const unicodePunctuationRegex =\n  /[!-\\/:-@\\[-`\\{-~\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061D-\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1B7D\\u1B7E\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52-\\u2E5D\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]/\n", "/**\n * @typedef {import('micromark-util-types').Code} Code\n */\n\nimport {unicodePunctuationRegex} from './lib/unicode-punctuation-regex.js'\n\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiAlpha = regexCheck(/[A-Za-z]/)\n\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  )\n}\n\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiDigit = regexCheck(/\\d/)\n\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2\n}\n\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32)\n}\n\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32\n}\n\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodePunctuation = regexCheck(unicodePunctuationRegex)\n\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodeWhitespace = regexCheck(/\\s/)\n\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => boolean}\n */\nfunction regexCheck(regex) {\n  return check\n\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code\n   *   Character code.\n   * @returns {boolean}\n   *   Whether the character code matches the bound regex.\n   */\n  function check(code) {\n    return code !== null && regex.test(String.fromCharCode(code))\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {markdownSpace} from 'micromark-util-character'\n\n// To do: implement `spaceOrTab`, `spaceOrTabMinMax`, `spaceOrTabWithOptions`.\n\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   spaces in markdown are often optional, in which case this factory can be\n *     used and `ok` will be switched to whether spaces were found or not\n * *   one line ending or space can be detected with `markdownSpace(code)` right\n *     before using `factorySpace`\n *\n * ###### Examples\n *\n * Where `\u2409` represents a tab (plus how much it expands) and `\u2420` represents a\n * single space.\n *\n * ```markdown\n * \u2409\n * \u2420\u2420\u2420\u2420\n * \u2409\u2420\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {TokenType} type\n *   Type (`' \\t'`).\n * @param {number | undefined} [max=Infinity]\n *   Max (exclusive).\n * @returns\n *   Start state.\n */\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY\n  let size = 0\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n    return ok(code)\n  }\n\n  /** @type {State} */\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n    effects.exit(type)\n    return ok(code)\n  }\n}\n", "// This module is generated by `script/`.\n//\n// CommonMark handles attention (emphasis, strong) markers based on what comes\n// before or after them.\n// One such difference is if those characters are Unicode punctuation.\n// This script is generated from the Unicode data.\n\n/**\n * Regular expression that matches a unicode punctuation character.\n */\nexport const unicodePunctuationRegex =\n  /[!-\\/:-@\\[-`\\{-~\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061D-\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1B7D\\u1B7E\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52-\\u2E5D\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]/\n", "/**\n * @typedef {import('micromark-util-types').Code} Code\n */\n\nimport {unicodePunctuationRegex} from './lib/unicode-punctuation-regex.js'\n\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiAlpha = regexCheck(/[A-Za-z]/)\n\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  )\n}\n\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiDigit = regexCheck(/\\d/)\n\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2\n}\n\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32)\n}\n\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32\n}\n\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodePunctuation = regexCheck(unicodePunctuationRegex)\n\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodeWhitespace = regexCheck(/\\s/)\n\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => boolean}\n */\nfunction regexCheck(regex) {\n  return check\n\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code\n   *   Character code.\n   * @returns {boolean}\n   *   Whether the character code matches the bound regex.\n   */\n  function check(code) {\n    return code !== null && regex.test(String.fromCharCode(code))\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {InitialConstruct} */\nexport const content = {\n  tokenize: initializeContent\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Initializer}\n */\nfunction initializeContent(effects) {\n  const contentStart = effects.attempt(\n    this.parser.constructs.contentInitial,\n    afterContentStartConstruct,\n    paragraphInitial\n  )\n  /** @type {Token} */\n  let previous\n  return contentStart\n\n  /** @type {State} */\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, contentStart, 'linePrefix')\n  }\n\n  /** @type {State} */\n  function paragraphInitial(code) {\n    effects.enter('paragraph')\n    return lineStart(code)\n  }\n\n  /** @type {State} */\n  function lineStart(code) {\n    const token = effects.enter('chunkText', {\n      contentType: 'text',\n      previous\n    })\n    if (previous) {\n      previous.next = token\n    }\n    previous = token\n    return data(code)\n  }\n\n  /** @type {State} */\n  function data(code) {\n    if (code === null) {\n      effects.exit('chunkText')\n      effects.exit('paragraph')\n      effects.consume(code)\n      return\n    }\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      effects.exit('chunkText')\n      return lineStart\n    }\n\n    // Data.\n    effects.consume(code)\n    return data\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').ContainerState} ContainerState\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\n/**\n * @typedef {[Construct, ContainerState]} StackItem\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n/** @type {InitialConstruct} */\nexport const document = {\n  tokenize: initializeDocument\n}\n\n/** @type {Construct} */\nconst containerConstruct = {\n  tokenize: tokenizeContainer\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Initializer}\n */\nfunction initializeDocument(effects) {\n  const self = this\n  /** @type {Array<StackItem>} */\n  const stack = []\n  let continued = 0\n  /** @type {TokenizeContext | undefined} */\n  let childFlow\n  /** @type {Token | undefined} */\n  let childToken\n  /** @type {number} */\n  let lineStartOffset\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    // First we iterate through the open blocks, starting with the root\n    // document, and descending through last children down to the last open\n    // block.\n    // Each block imposes a condition that the line must satisfy if the block is\n    // to remain open.\n    // For example, a block quote requires a `>` character.\n    // A paragraph requires a non-blank line.\n    // In this phase we may match all or just some of the open blocks.\n    // But we cannot close unmatched blocks yet, because we may have a lazy\n    // continuation line.\n    if (continued < stack.length) {\n      const item = stack[continued]\n      self.containerState = item[1]\n      return effects.attempt(\n        item[0].continuation,\n        documentContinue,\n        checkNewContainers\n      )(code)\n    }\n\n    // Done.\n    return checkNewContainers(code)\n  }\n\n  /** @type {State} */\n  function documentContinue(code) {\n    continued++\n\n    // Note: this field is called `_closeFlow` but it also closes containers.\n    // Perhaps a good idea to rename it but it\u2019s already used in the wild by\n    // extensions.\n    if (self.containerState._closeFlow) {\n      self.containerState._closeFlow = undefined\n      if (childFlow) {\n        closeFlow()\n      }\n\n      // Note: this algorithm for moving events around is similar to the\n      // algorithm when dealing with lazy lines in `writeToChild`.\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {Point | undefined} */\n      let point\n\n      // Find the flow chunk.\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          point = self.events[indexBeforeFlow][1].end\n          break\n        }\n      }\n      exitContainers(continued)\n\n      // Fix positions.\n      let index = indexBeforeExits\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      }\n\n      // Inject the exits earlier (they\u2019re still also at the end).\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      )\n\n      // Discard the duplicate exits.\n      self.events.length = index\n      return checkNewContainers(code)\n    }\n    return start(code)\n  }\n\n  /** @type {State} */\n  function checkNewContainers(code) {\n    // Next, after consuming the continuation markers for existing blocks, we\n    // look for new block starts (e.g. `>` for a block quote).\n    // If we encounter a new block start, we close any blocks unmatched in\n    // step 1 before creating the new block as a child of the last matched\n    // block.\n    if (continued === stack.length) {\n      // No need to `check` whether there\u2019s a container, of `exitContainers`\n      // would be moot.\n      // We can instead immediately `attempt` to parse one.\n      if (!childFlow) {\n        return documentContinued(code)\n      }\n\n      // If we have concrete content, such as block HTML or fenced code,\n      // we can\u2019t have containers \u201Cpierce\u201D into them, so we can immediately\n      // start.\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        return flowStart(code)\n      }\n\n      // If we do have flow, it could still be a blank line,\n      // but we\u2019d be interrupting it w/ a new container if there\u2019s a current\n      // construct.\n      // To do: next major: remove `_gfmTableDynamicInterruptHack` (no longer\n      // needed in micromark-extension-gfm-table@1.0.6).\n      self.interrupt = Boolean(\n        childFlow.currentConstruct && !childFlow._gfmTableDynamicInterruptHack\n      )\n    }\n\n    // Check if there is a new container.\n    self.containerState = {}\n    return effects.check(\n      containerConstruct,\n      thereIsANewContainer,\n      thereIsNoNewContainer\n    )(code)\n  }\n\n  /** @type {State} */\n  function thereIsANewContainer(code) {\n    if (childFlow) closeFlow()\n    exitContainers(continued)\n    return documentContinued(code)\n  }\n\n  /** @type {State} */\n  function thereIsNoNewContainer(code) {\n    self.parser.lazy[self.now().line] = continued !== stack.length\n    lineStartOffset = self.now().offset\n    return flowStart(code)\n  }\n\n  /** @type {State} */\n  function documentContinued(code) {\n    // Try new containers.\n    self.containerState = {}\n    return effects.attempt(\n      containerConstruct,\n      containerContinue,\n      flowStart\n    )(code)\n  }\n\n  /** @type {State} */\n  function containerContinue(code) {\n    continued++\n    stack.push([self.currentConstruct, self.containerState])\n    // Try another.\n    return documentContinued(code)\n  }\n\n  /** @type {State} */\n  function flowStart(code) {\n    if (code === null) {\n      if (childFlow) closeFlow()\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n    childFlow = childFlow || self.parser.flow(self.now())\n    effects.enter('chunkFlow', {\n      contentType: 'flow',\n      previous: childToken,\n      _tokenizer: childFlow\n    })\n    return flowContinue(code)\n  }\n\n  /** @type {State} */\n  function flowContinue(code) {\n    if (code === null) {\n      writeToChild(effects.exit('chunkFlow'), true)\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      writeToChild(effects.exit('chunkFlow'))\n      // Get ready for the next line.\n      continued = 0\n      self.interrupt = undefined\n      return start\n    }\n    effects.consume(code)\n    return flowContinue\n  }\n\n  /**\n   * @param {Token} token\n   * @param {boolean | undefined} [eof]\n   * @returns {void}\n   */\n  function writeToChild(token, eof) {\n    const stream = self.sliceStream(token)\n    if (eof) stream.push(null)\n    token.previous = childToken\n    if (childToken) childToken.next = token\n    childToken = token\n    childFlow.defineSkip(token.start)\n    childFlow.write(stream)\n\n    // Alright, so we just added a lazy line:\n    //\n    // ```markdown\n    // > a\n    // b.\n    //\n    // Or:\n    //\n    // > ~~~c\n    // d\n    //\n    // Or:\n    //\n    // > | e |\n    // f\n    // ```\n    //\n    // The construct in the second example (fenced code) does not accept lazy\n    // lines, so it marked itself as done at the end of its first line, and\n    // then the content construct parses `d`.\n    // Most constructs in markdown match on the first line: if the first line\n    // forms a construct, a non-lazy line can\u2019t \u201Cunmake\u201D it.\n    //\n    // The construct in the third example is potentially a GFM table, and\n    // those are *weird*.\n    // It *could* be a table, from the first line, if the following line\n    // matches a condition.\n    // In this case, that second line is lazy, which \u201Cunmakes\u201D the first line\n    // and turns the whole into one content block.\n    //\n    // We\u2019ve now parsed the non-lazy and the lazy line, and can figure out\n    // whether the lazy line started a new flow block.\n    // If it did, we exit the current containers between the two flow blocks.\n    if (self.parser.lazy[token.start.line]) {\n      let index = childFlow.events.length\n      while (index--) {\n        if (\n          // The token starts before the line ending\u2026\n          childFlow.events[index][1].start.offset < lineStartOffset &&\n          // \u2026and either is not ended yet\u2026\n          (!childFlow.events[index][1].end ||\n            // \u2026or ends after it.\n            childFlow.events[index][1].end.offset > lineStartOffset)\n        ) {\n          // Exit: there\u2019s still something open, which means it\u2019s a lazy line\n          // part of something.\n          return\n        }\n      }\n\n      // Note: this algorithm for moving events around is similar to the\n      // algorithm when closing flow in `documentContinue`.\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {boolean | undefined} */\n      let seen\n      /** @type {Point | undefined} */\n      let point\n\n      // Find the previous chunk (the one before the lazy line).\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          if (seen) {\n            point = self.events[indexBeforeFlow][1].end\n            break\n          }\n          seen = true\n        }\n      }\n      exitContainers(continued)\n\n      // Fix positions.\n      index = indexBeforeExits\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      }\n\n      // Inject the exits earlier (they\u2019re still also at the end).\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      )\n\n      // Discard the duplicate exits.\n      self.events.length = index\n    }\n  }\n\n  /**\n   * @param {number} size\n   * @returns {void}\n   */\n  function exitContainers(size) {\n    let index = stack.length\n\n    // Exit open containers.\n    while (index-- > size) {\n      const entry = stack[index]\n      self.containerState = entry[1]\n      entry[0].exit.call(self, effects)\n    }\n    stack.length = size\n  }\n  function closeFlow() {\n    childFlow.write([null])\n    childToken = undefined\n    childFlow = undefined\n    self.containerState._closeFlow = undefined\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeContainer(effects, ok, nok) {\n  // Always populated by defaults.\n\n  return factorySpace(\n    effects,\n    effects.attempt(this.parser.constructs.document, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n", "// This module is generated by `script/`.\n//\n// CommonMark handles attention (emphasis, strong) markers based on what comes\n// before or after them.\n// One such difference is if those characters are Unicode punctuation.\n// This script is generated from the Unicode data.\n\n/**\n * Regular expression that matches a unicode punctuation character.\n */\nexport const unicodePunctuationRegex =\n  /[!-\\/:-@\\[-`\\{-~\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061D-\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1B7D\\u1B7E\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52-\\u2E5D\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]/\n", "/**\n * @typedef {import('micromark-util-types').Code} Code\n */\n\nimport {unicodePunctuationRegex} from './lib/unicode-punctuation-regex.js'\n\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiAlpha = regexCheck(/[A-Za-z]/)\n\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  )\n}\n\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiDigit = regexCheck(/\\d/)\n\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2\n}\n\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32)\n}\n\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32\n}\n\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodePunctuation = regexCheck(unicodePunctuationRegex)\n\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodeWhitespace = regexCheck(/\\s/)\n\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => boolean}\n */\nfunction regexCheck(regex) {\n  return check\n\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code\n   *   Character code.\n   * @returns {boolean}\n   *   Whether the character code matches the bound regex.\n   */\n  function check(code) {\n    return code !== null && regex.test(String.fromCharCode(code))\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').Code} Code\n */\n\nimport {\n  markdownLineEndingOrSpace,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\n/**\n * Classify whether a code represents whitespace, punctuation, or something\n * else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * > \uD83D\uDC49 **Note**: eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n *   Code.\n * @returns {typeof constants.characterGroupWhitespace | typeof constants.characterGroupPunctuation | undefined}\n *   Group.\n */\nexport function classifyCharacter(code) {\n  if (\n    code === null ||\n    markdownLineEndingOrSpace(code) ||\n    unicodeWhitespace(code)\n  ) {\n    return 1\n  }\n  if (unicodePunctuation(code)) {\n    return 2\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {Array<{resolveAll?: Resolver | undefined}>} constructs\n *   List of constructs, optionally with `resolveAll`s.\n * @param {Array<Event>} events\n *   List of events.\n * @param {TokenizeContext} context\n *   Context used by `tokenize`.\n * @returns {Array<Event>}\n *   Changed events.\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Array<Resolver>} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n", "/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {push, splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n/** @type {Construct} */\nexport const attention = {\n  name: 'attention',\n  tokenize: tokenizeAttention,\n  resolveAll: resolveAllAttention\n}\n\n/**\n * Take all events and resolve attention to emphasis or strong.\n *\n * @type {Resolver}\n */\nfunction resolveAllAttention(events, context) {\n  let index = -1\n  /** @type {number} */\n  let open\n  /** @type {Token} */\n  let group\n  /** @type {Token} */\n  let text\n  /** @type {Token} */\n  let openingSequence\n  /** @type {Token} */\n  let closingSequence\n  /** @type {number} */\n  let use\n  /** @type {Array<Event>} */\n  let nextEvents\n  /** @type {number} */\n  let offset\n\n  // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it\u2019s\n  // a bottleneck for malicious stuff.\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (\n      events[index][0] === 'enter' &&\n      events[index][1].type === 'attentionSequence' &&\n      events[index][1]._close\n    ) {\n      open = index\n\n      // Now walk back to find an opener.\n      while (open--) {\n        // Find a token that can open the closer.\n        if (\n          events[open][0] === 'exit' &&\n          events[open][1].type === 'attentionSequence' &&\n          events[open][1]._open &&\n          // If the markers are the same:\n          context.sliceSerialize(events[open][1]).charCodeAt(0) ===\n            context.sliceSerialize(events[index][1]).charCodeAt(0)\n        ) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don\u2019t match.\n          if (\n            (events[open][1]._close || events[index][1]._open) &&\n            (events[index][1].end.offset - events[index][1].start.offset) % 3 &&\n            !(\n              (events[open][1].end.offset -\n                events[open][1].start.offset +\n                events[index][1].end.offset -\n                events[index][1].start.offset) %\n              3\n            )\n          ) {\n            continue\n          }\n\n          // Number of markers to use from the sequence.\n          use =\n            events[open][1].end.offset - events[open][1].start.offset > 1 &&\n            events[index][1].end.offset - events[index][1].start.offset > 1\n              ? 2\n              : 1\n          const start = Object.assign({}, events[open][1].end)\n          const end = Object.assign({}, events[index][1].start)\n          movePoint(start, -use)\n          movePoint(end, use)\n          openingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start,\n            end: Object.assign({}, events[open][1].end)\n          }\n          closingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start: Object.assign({}, events[index][1].start),\n            end\n          }\n          text = {\n            type: use > 1 ? 'strongText' : 'emphasisText',\n            start: Object.assign({}, events[open][1].end),\n            end: Object.assign({}, events[index][1].start)\n          }\n          group = {\n            type: use > 1 ? 'strong' : 'emphasis',\n            start: Object.assign({}, openingSequence.start),\n            end: Object.assign({}, closingSequence.end)\n          }\n          events[open][1].end = Object.assign({}, openingSequence.start)\n          events[index][1].start = Object.assign({}, closingSequence.end)\n          nextEvents = []\n\n          // If there are more markers in the opening, add them before.\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = push(nextEvents, [\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context]\n            ])\n          }\n\n          // Opening.\n          nextEvents = push(nextEvents, [\n            ['enter', group, context],\n            ['enter', openingSequence, context],\n            ['exit', openingSequence, context],\n            ['enter', text, context]\n          ])\n\n          // Always populated by defaults.\n\n          // Between.\n          nextEvents = push(\n            nextEvents,\n            resolveAll(\n              context.parser.constructs.insideSpan.null,\n              events.slice(open + 1, index),\n              context\n            )\n          )\n\n          // Closing.\n          nextEvents = push(nextEvents, [\n            ['exit', text, context],\n            ['enter', closingSequence, context],\n            ['exit', closingSequence, context],\n            ['exit', group, context]\n          ])\n\n          // If there are more markers in the closing, add them after.\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2\n            nextEvents = push(nextEvents, [\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context]\n            ])\n          } else {\n            offset = 0\n          }\n          splice(events, open - 1, index - open + 3, nextEvents)\n          index = open + nextEvents.length - offset - 2\n          break\n        }\n      }\n    }\n  }\n\n  // Remove remaining sequences.\n  index = -1\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data'\n    }\n  }\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeAttention(effects, ok) {\n  const attentionMarkers = this.parser.constructs.attentionMarkers.null\n  const previous = this.previous\n  const before = classifyCharacter(previous)\n\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * Before a sequence.\n   *\n   * ```markdown\n   * > | **\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    marker = code\n    effects.enter('attentionSequence')\n    return inside(code)\n  }\n\n  /**\n   * In a sequence.\n   *\n   * ```markdown\n   * > | **\n   *     ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return inside\n    }\n    const token = effects.exit('attentionSequence')\n\n    // To do: next major: move this to resolver, just like `markdown-rs`.\n    const after = classifyCharacter(code)\n\n    // Always populated by defaults.\n\n    const open =\n      !after || (after === 2 && before) || attentionMarkers.includes(code)\n    const close =\n      !before || (before === 2 && after) || attentionMarkers.includes(previous)\n    token._open = Boolean(marker === 42 ? open : open && (before || !close))\n    token._close = Boolean(marker === 42 ? close : close && (after || !open))\n    return ok(code)\n  }\n}\n\n/**\n * Move a point a bit.\n *\n * Note: `move` only works inside lines! It\u2019s not possible to move past other\n * chunks (replacement characters, tabs, or line endings).\n *\n * @param {Point} point\n * @param {number} offset\n * @returns {void}\n */\nfunction movePoint(point, offset) {\n  point.column += offset\n  point.offset += offset\n  point._bufferIndex += offset\n}\n", "// This module is generated by `script/`.\n//\n// CommonMark handles attention (emphasis, strong) markers based on what comes\n// before or after them.\n// One such difference is if those characters are Unicode punctuation.\n// This script is generated from the Unicode data.\n\n/**\n * Regular expression that matches a unicode punctuation character.\n */\nexport const unicodePunctuationRegex =\n  /[!-\\/:-@\\[-`\\{-~\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061D-\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1B7D\\u1B7E\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52-\\u2E5D\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]/\n", "/**\n * @typedef {import('micromark-util-types').Code} Code\n */\n\nimport {unicodePunctuationRegex} from './lib/unicode-punctuation-regex.js'\n\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiAlpha = regexCheck(/[A-Za-z]/)\n\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  )\n}\n\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiDigit = regexCheck(/\\d/)\n\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2\n}\n\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32)\n}\n\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32\n}\n\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodePunctuation = regexCheck(unicodePunctuationRegex)\n\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodeWhitespace = regexCheck(/\\s/)\n\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => boolean}\n */\nfunction regexCheck(regex) {\n  return check\n\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code\n   *   Character code.\n   * @returns {boolean}\n   *   Whether the character code matches the bound regex.\n   */\n  function check(code) {\n    return code !== null && regex.test(String.fromCharCode(code))\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiAtext,\n  asciiControl\n} from 'micromark-util-character'\n/** @type {Construct} */\nexport const autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeAutolink(effects, ok, nok) {\n  let size = 0\n  return start\n\n  /**\n   * Start of an autolink.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *      ^\n   * > | a<user@example.com>b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('autolink')\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.enter('autolinkProtocol')\n    return open\n  }\n\n  /**\n   * After `<`, at protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *       ^\n   * > | a<user@example.com>b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return schemeOrEmailAtext\n    }\n    return emailAtext(code)\n  }\n\n  /**\n   * At second byte of protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *        ^\n   * > | a<user@example.com>b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function schemeOrEmailAtext(code) {\n    // ASCII alphanumeric and `+`, `-`, and `.`.\n    if (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) {\n      // Count the previous alphabetical from `open` too.\n      size = 1\n      return schemeInsideOrEmailAtext(code)\n    }\n    return emailAtext(code)\n  }\n\n  /**\n   * In ambiguous protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *        ^\n   * > | a<user@example.com>b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code)\n      size = 0\n      return urlInside\n    }\n\n    // ASCII alphanumeric and `+`, `-`, and `.`.\n    if (\n      (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) &&\n      size++ < 32\n    ) {\n      effects.consume(code)\n      return schemeInsideOrEmailAtext\n    }\n    size = 0\n    return emailAtext(code)\n  }\n\n  /**\n   * After protocol, in URL.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit('autolinkProtocol')\n      effects.enter('autolinkMarker')\n      effects.consume(code)\n      effects.exit('autolinkMarker')\n      effects.exit('autolink')\n      return ok\n    }\n\n    // ASCII control, space, or `<`.\n    if (code === null || code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return urlInside\n  }\n\n  /**\n   * In email atext.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code)\n      return emailAtSignOrDot\n    }\n    if (asciiAtext(code)) {\n      effects.consume(code)\n      return emailAtext\n    }\n    return nok(code)\n  }\n\n  /**\n   * In label, after at-sign or dot.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *                 ^       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code)\n  }\n\n  /**\n   * In label, where `.` and `>` are allowed.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *                   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n    if (code === 62) {\n      // Exit, then change the token type.\n      effects.exit('autolinkProtocol').type = 'autolinkEmail'\n      effects.enter('autolinkMarker')\n      effects.consume(code)\n      effects.exit('autolinkMarker')\n      effects.exit('autolink')\n      return ok\n    }\n    return emailValue(code)\n  }\n\n  /**\n   * In label, where `.` and `>` are *not* allowed.\n   *\n   * Though, this is also used in `emailLabel` to parse other values.\n   *\n   * ```markdown\n   * > | a<user.name@ex-ample.com>b\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailValue(code) {\n    // ASCII alphanumeric or `-`.\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      const next = code === 45 ? emailValue : emailLabel\n      effects.consume(code)\n      return next\n    }\n    return nok(code)\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const blankLine = {\n  tokenize: tokenizeBlankLine,\n  partial: true\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return start\n\n  /**\n   * Start of blank line.\n   *\n   * > \uD83D\uDC49 **Note**: `\u2420` represents a space character.\n   *\n   * ```markdown\n   * > | \u2420\u2420\u240A\n   *     ^\n   * > | \u240A\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    return markdownSpace(code)\n      ? factorySpace(effects, after, 'linePrefix')(code)\n      : after(code)\n  }\n\n  /**\n   * At eof/eol, after optional whitespace.\n   *\n   * > \uD83D\uDC49 **Note**: `\u2420` represents a space character.\n   *\n   * ```markdown\n   * > | \u2420\u2420\u240A\n   *       ^\n   * > | \u240A\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const blockQuote = {\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart,\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * Start of block quote.\n   *\n   * ```markdown\n   * > | > a\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 62) {\n      const state = self.containerState\n      if (!state.open) {\n        effects.enter('blockQuote', {\n          _container: true\n        })\n        state.open = true\n      }\n      effects.enter('blockQuotePrefix')\n      effects.enter('blockQuoteMarker')\n      effects.consume(code)\n      effects.exit('blockQuoteMarker')\n      return after\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `>`, before optional whitespace.\n   *\n   * ```markdown\n   * > | > a\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter('blockQuotePrefixWhitespace')\n      effects.consume(code)\n      effects.exit('blockQuotePrefixWhitespace')\n      effects.exit('blockQuotePrefix')\n      return ok\n    }\n    effects.exit('blockQuotePrefix')\n    return ok(code)\n  }\n}\n\n/**\n * Start of block quote continuation.\n *\n * ```markdown\n *   | > a\n * > | > b\n *     ^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  const self = this\n  return contStart\n\n  /**\n   * Start of block quote continuation.\n   *\n   * Also used to parse the first block quote opening.\n   *\n   * ```markdown\n   *   | > a\n   * > | > b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function contStart(code) {\n    if (markdownSpace(code)) {\n      // Always populated by defaults.\n\n      return factorySpace(\n        effects,\n        contBefore,\n        'linePrefix',\n        self.parser.constructs.disable.null.includes('codeIndented')\n          ? undefined\n          : 4\n      )(code)\n    }\n    return contBefore(code)\n  }\n\n  /**\n   * At `>`, after optional whitespace.\n   *\n   * Also used to parse the first block quote opening.\n   *\n   * ```markdown\n   *   | > a\n   * > | > b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function contBefore(code) {\n    return effects.attempt(blockQuote, ok, nok)(code)\n  }\n}\n\n/** @type {Exiter} */\nfunction exit(effects) {\n  effects.exit('blockQuote')\n}\n", "/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {asciiPunctuation} from 'micromark-util-character'\n/** @type {Construct} */\nexport const characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start\n\n  /**\n   * Start of character escape.\n   *\n   * ```markdown\n   * > | a\\*b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('characterEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    effects.exit('escapeMarker')\n    return inside\n  }\n\n  /**\n   * After `\\`, at punctuation.\n   *\n   * ```markdown\n   * > | a\\*b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    // ASCII punctuation.\n    if (asciiPunctuation(code)) {\n      effects.enter('characterEscapeValue')\n      effects.consume(code)\n      effects.exit('characterEscapeValue')\n      effects.exit('characterEscape')\n      return ok\n    }\n    return nok(code)\n  }\n}\n", "/// <reference lib=\"dom\" />\n\n/* eslint-env browser */\n\nconst element = document.createElement('i')\n\n/**\n * @param {string} value\n * @returns {string|false}\n */\nexport function decodeNamedCharacterReference(value) {\n  const characterReference = '&' + value + ';'\n  element.innerHTML = characterReference\n  const char = element.textContent\n\n  // Some named character references do not require the closing semicolon\n  // (`&not`, for instance), which leads to situations where parsing the assumed\n  // named reference of `&notit;` will result in the string `\u00ACit;`.\n  // When we encounter a trailing semicolon after parsing, and the character\n  // reference to decode was not a semicolon (`&semi;`), we can assume that the\n  // matching was not complete.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  if (char.charCodeAt(char.length - 1) === 59 /* `;` */ && value !== 'semi') {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the character reference was\n  // not valid.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  return char === characterReference ? false : char\n}\n", "/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {\n  asciiAlphanumeric,\n  asciiDigit,\n  asciiHexDigit\n} from 'micromark-util-character'\n/** @type {Construct} */\nexport const characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  const self = this\n  let size = 0\n  /** @type {number} */\n  let max\n  /** @type {(code: Code) => boolean} */\n  let test\n  return start\n\n  /**\n   * Start of character reference.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *      ^\n   * > | a&#123;b\n   *      ^\n   * > | a&#x9;b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('characterReference')\n    effects.enter('characterReferenceMarker')\n    effects.consume(code)\n    effects.exit('characterReferenceMarker')\n    return open\n  }\n\n  /**\n   * After `&`, at `#` for numeric references or alphanumeric for named\n   * references.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *       ^\n   * > | a&#123;b\n   *       ^\n   * > | a&#x9;b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 35) {\n      effects.enter('characterReferenceMarkerNumeric')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerNumeric')\n      return numeric\n    }\n    effects.enter('characterReferenceValue')\n    max = 31\n    test = asciiAlphanumeric\n    return value(code)\n  }\n\n  /**\n   * After `#`, at `x` for hexadecimals or digit for decimals.\n   *\n   * ```markdown\n   * > | a&#123;b\n   *        ^\n   * > | a&#x9;b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter('characterReferenceMarkerHexadecimal')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerHexadecimal')\n      effects.enter('characterReferenceValue')\n      max = 6\n      test = asciiHexDigit\n      return value\n    }\n    effects.enter('characterReferenceValue')\n    max = 7\n    test = asciiDigit\n    return value(code)\n  }\n\n  /**\n   * After markers (`&#x`, `&#`, or `&`), in value, before `;`.\n   *\n   * The character reference kind defines what and how many characters are\n   * allowed.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *       ^^^\n   * > | a&#123;b\n   *        ^^^\n   * > | a&#x9;b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function value(code) {\n    if (code === 59 && size) {\n      const token = effects.exit('characterReferenceValue')\n      if (\n        test === asciiAlphanumeric &&\n        !decodeNamedCharacterReference(self.sliceSerialize(token))\n      ) {\n        return nok(code)\n      }\n\n      // To do: `markdown-rs` uses a different name:\n      // `CharacterReferenceMarkerSemi`.\n      effects.enter('characterReferenceMarker')\n      effects.consume(code)\n      effects.exit('characterReferenceMarker')\n      effects.exit('characterReference')\n      return ok\n    }\n    if (test(code) && size++ < max) {\n      effects.consume(code)\n      return value\n    }\n    return nok(code)\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nconst nonLazyContinuation = {\n  tokenize: tokenizeNonLazyContinuation,\n  partial: true\n}\n\n/** @type {Construct} */\nexport const codeFenced = {\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced,\n  concrete: true\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  const self = this\n  /** @type {Construct} */\n  const closeStart = {\n    tokenize: tokenizeCloseStart,\n    partial: true\n  }\n  let initialPrefix = 0\n  let sizeOpen = 0\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * Start of code.\n   *\n   * ```markdown\n   * > | ~~~js\n   *     ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse whitespace like `markdown-rs`.\n    return beforeSequenceOpen(code)\n  }\n\n  /**\n   * In opening fence, after prefix, at sequence.\n   *\n   * ```markdown\n   * > | ~~~js\n   *     ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeSequenceOpen(code) {\n    const tail = self.events[self.events.length - 1]\n    initialPrefix =\n      tail && tail[1].type === 'linePrefix'\n        ? tail[2].sliceSerialize(tail[1], true).length\n        : 0\n    marker = code\n    effects.enter('codeFenced')\n    effects.enter('codeFencedFence')\n    effects.enter('codeFencedFenceSequence')\n    return sequenceOpen(code)\n  }\n\n  /**\n   * In opening fence sequence.\n   *\n   * ```markdown\n   * > | ~~~js\n   *      ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === marker) {\n      sizeOpen++\n      effects.consume(code)\n      return sequenceOpen\n    }\n    if (sizeOpen < 3) {\n      return nok(code)\n    }\n    effects.exit('codeFencedFenceSequence')\n    return markdownSpace(code)\n      ? factorySpace(effects, infoBefore, 'whitespace')(code)\n      : infoBefore(code)\n  }\n\n  /**\n   * In opening fence, after the sequence (and optional whitespace), before info.\n   *\n   * ```markdown\n   * > | ~~~js\n   *        ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function infoBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFencedFence')\n      return self.interrupt\n        ? ok(code)\n        : effects.check(nonLazyContinuation, atNonLazyBreak, after)(code)\n    }\n    effects.enter('codeFencedFenceInfo')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return info(code)\n  }\n\n  /**\n   * In info.\n   *\n   * ```markdown\n   * > | ~~~js\n   *        ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function info(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return infoBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return factorySpace(effects, metaBefore, 'whitespace')(code)\n    }\n    if (code === 96 && code === marker) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return info\n  }\n\n  /**\n   * In opening fence, after info and whitespace, before meta.\n   *\n   * ```markdown\n   * > | ~~~js eval\n   *           ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function metaBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return infoBefore(code)\n    }\n    effects.enter('codeFencedFenceMeta')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return meta(code)\n  }\n\n  /**\n   * In meta.\n   *\n   * ```markdown\n   * > | ~~~js eval\n   *           ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceMeta')\n      return infoBefore(code)\n    }\n    if (code === 96 && code === marker) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return meta\n  }\n\n  /**\n   * At eol/eof in code, before a non-lazy closing fence or content.\n   *\n   * ```markdown\n   * > | ~~~js\n   *          ^\n   * > | alert(1)\n   *             ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function atNonLazyBreak(code) {\n    return effects.attempt(closeStart, after, contentBefore)(code)\n  }\n\n  /**\n   * Before code content, not a closing fence, at eol.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *             ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentBefore(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return contentStart\n  }\n\n  /**\n   * Before code content, not a closing fence.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentStart(code) {\n    return initialPrefix > 0 && markdownSpace(code)\n      ? factorySpace(\n          effects,\n          beforeContentChunk,\n          'linePrefix',\n          initialPrefix + 1\n        )(code)\n      : beforeContentChunk(code)\n  }\n\n  /**\n   * Before code content, after optional prefix.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeContentChunk(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return effects.check(nonLazyContinuation, atNonLazyBreak, after)(code)\n    }\n    effects.enter('codeFlowValue')\n    return contentChunk(code)\n  }\n\n  /**\n   * In code content.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^^^^^^^^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentChunk(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return beforeContentChunk(code)\n    }\n    effects.consume(code)\n    return contentChunk\n  }\n\n  /**\n   * After code.\n   *\n   * ```markdown\n   *   | ~~~js\n   *   | alert(1)\n   * > | ~~~\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    effects.exit('codeFenced')\n    return ok(code)\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Tokenizer}\n   */\n  function tokenizeCloseStart(effects, ok, nok) {\n    let size = 0\n    return startBefore\n\n    /**\n     *\n     *\n     * @type {State}\n     */\n    function startBefore(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return start\n    }\n\n    /**\n     * Before closing fence, at optional whitespace.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function start(code) {\n      // Always populated by defaults.\n\n      // To do: `enter` here or in next state?\n      effects.enter('codeFencedFence')\n      return markdownSpace(code)\n        ? factorySpace(\n            effects,\n            beforeSequenceClose,\n            'linePrefix',\n            self.parser.constructs.disable.null.includes('codeIndented')\n              ? undefined\n              : 4\n          )(code)\n        : beforeSequenceClose(code)\n    }\n\n    /**\n     * In closing fence, after optional whitespace, at sequence.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function beforeSequenceClose(code) {\n      if (code === marker) {\n        effects.enter('codeFencedFenceSequence')\n        return sequenceClose(code)\n      }\n      return nok(code)\n    }\n\n    /**\n     * In closing fence sequence.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function sequenceClose(code) {\n      if (code === marker) {\n        size++\n        effects.consume(code)\n        return sequenceClose\n      }\n      if (size >= sizeOpen) {\n        effects.exit('codeFencedFenceSequence')\n        return markdownSpace(code)\n          ? factorySpace(effects, sequenceCloseAfter, 'whitespace')(code)\n          : sequenceCloseAfter(code)\n      }\n      return nok(code)\n    }\n\n    /**\n     * After closing fence sequence, after optional whitespace.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *        ^\n     * ```\n     *\n     * @type {State}\n     */\n    function sequenceCloseAfter(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit('codeFencedFence')\n        return ok(code)\n      }\n      return nok(code)\n    }\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeNonLazyContinuation(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === null) {\n      return nok(code)\n    }\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return lineStart\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function lineStart(code) {\n    return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented\n}\n\n/** @type {Construct} */\nconst furtherStart = {\n  tokenize: tokenizeFurtherStart,\n  partial: true\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * Start of code (indented).\n   *\n   * > **Parsing note**: it is not needed to check if this first line is a\n   * > filled line (that it has a non-whitespace character), because blank lines\n   * > are parsed already, so we never run into that.\n   *\n   * ```markdown\n   * > |     aaa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: manually check if interrupting like `markdown-rs`.\n\n    effects.enter('codeIndented')\n    // To do: use an improved `space_or_tab` function like `markdown-rs`,\n    // so that we can drop the next state.\n    return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)(code)\n  }\n\n  /**\n   * At start, after 1 or 4 spaces.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? atBreak(code)\n      : nok(code)\n  }\n\n  /**\n   * At a break.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^  ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === null) {\n      return after(code)\n    }\n    if (markdownLineEnding(code)) {\n      return effects.attempt(furtherStart, atBreak, after)(code)\n    }\n    effects.enter('codeFlowValue')\n    return inside(code)\n  }\n\n  /**\n   * In code content.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return atBreak(code)\n    }\n    effects.consume(code)\n    return inside\n  }\n\n  /** @type {State} */\n  function after(code) {\n    effects.exit('codeIndented')\n    // To do: allow interrupting like `markdown-rs`.\n    // Feel free to interrupt.\n    // tokenizer.interrupt = false\n    return ok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeFurtherStart(effects, ok, nok) {\n  const self = this\n  return furtherStart\n\n  /**\n   * At eol, trying to parse another indent.\n   *\n   * ```markdown\n   * > |     aaa\n   *            ^\n   *   |     bbb\n   * ```\n   *\n   * @type {State}\n   */\n  function furtherStart(code) {\n    // To do: improve `lazy` / `pierce` handling.\n    // If this is a lazy line, it can\u2019t be code.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code)\n    }\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return furtherStart\n    }\n\n    // To do: the code here in `micromark-js` is a bit different from\n    // `markdown-rs` because there it can attempt spaces.\n    // We can\u2019t yet.\n    //\n    // To do: use an improved `space_or_tab` function like `markdown-rs`,\n    // so that we can drop the next state.\n    return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)(code)\n  }\n\n  /**\n   * At start, after 1 or 4 spaces.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? ok(code)\n      : markdownLineEnding(code)\n      ? furtherStart(code)\n      : nok(code)\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {Construct} */\nexport const codeText = {\n  name: 'codeText',\n  tokenize: tokenizeCodeText,\n  resolve: resolveCodeText,\n  previous\n}\n\n// To do: next major: don\u2019t resolve, like `markdown-rs`.\n/** @type {Resolver} */\nfunction resolveCodeText(events) {\n  let tailExitIndex = events.length - 4\n  let headEnterIndex = 3\n  /** @type {number} */\n  let index\n  /** @type {number | undefined} */\n  let enter\n\n  // If we start and end with an EOL or a space.\n  if (\n    (events[headEnterIndex][1].type === 'lineEnding' ||\n      events[headEnterIndex][1].type === 'space') &&\n    (events[tailExitIndex][1].type === 'lineEnding' ||\n      events[tailExitIndex][1].type === 'space')\n  ) {\n    index = headEnterIndex\n\n    // And we have data.\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === 'codeTextData') {\n        // Then we have padding.\n        events[headEnterIndex][1].type = 'codeTextPadding'\n        events[tailExitIndex][1].type = 'codeTextPadding'\n        headEnterIndex += 2\n        tailExitIndex -= 2\n        break\n      }\n    }\n  }\n\n  // Merge adjacent spaces and data.\n  index = headEnterIndex - 1\n  tailExitIndex++\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== 'lineEnding') {\n        enter = index\n      }\n    } else if (\n      index === tailExitIndex ||\n      events[index][1].type === 'lineEnding'\n    ) {\n      events[enter][1].type = 'codeTextData'\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end\n        events.splice(enter + 2, index - enter - 2)\n        tailExitIndex -= index - enter - 2\n        index = enter + 2\n      }\n      enter = undefined\n    }\n  }\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Previous}\n */\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return (\n    code !== 96 ||\n    this.events[this.events.length - 1][1].type === 'characterEscape'\n  )\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCodeText(effects, ok, nok) {\n  const self = this\n  let sizeOpen = 0\n  /** @type {number} */\n  let size\n  /** @type {Token} */\n  let token\n  return start\n\n  /**\n   * Start of code (text).\n   *\n   * ```markdown\n   * > | `a`\n   *     ^\n   * > | \\`a`\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('codeText')\n    effects.enter('codeTextSequence')\n    return sequenceOpen(code)\n  }\n\n  /**\n   * In opening sequence.\n   *\n   * ```markdown\n   * > | `a`\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === 96) {\n      effects.consume(code)\n      sizeOpen++\n      return sequenceOpen\n    }\n    effects.exit('codeTextSequence')\n    return between(code)\n  }\n\n  /**\n   * Between something and something else.\n   *\n   * ```markdown\n   * > | `a`\n   *      ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function between(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code)\n    }\n\n    // To do: next major: don\u2019t do spaces in resolve, but when compiling,\n    // like `markdown-rs`.\n    // Tabs don\u2019t work, and virtual spaces don\u2019t make sense.\n    if (code === 32) {\n      effects.enter('space')\n      effects.consume(code)\n      effects.exit('space')\n      return between\n    }\n\n    // Closing fence? Could also be data.\n    if (code === 96) {\n      token = effects.enter('codeTextSequence')\n      size = 0\n      return sequenceClose(code)\n    }\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return between\n    }\n\n    // Data.\n    effects.enter('codeTextData')\n    return data(code)\n  }\n\n  /**\n   * In data.\n   *\n   * ```markdown\n   * > | `a`\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function data(code) {\n    if (\n      code === null ||\n      code === 32 ||\n      code === 96 ||\n      markdownLineEnding(code)\n    ) {\n      effects.exit('codeTextData')\n      return between(code)\n    }\n    effects.consume(code)\n    return data\n  }\n\n  /**\n   * In closing sequence.\n   *\n   * ```markdown\n   * > | `a`\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceClose(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code)\n      size++\n      return sequenceClose\n    }\n\n    // Done!\n    if (size === sizeOpen) {\n      effects.exit('codeTextSequence')\n      effects.exit('codeText')\n      return ok(code)\n    }\n\n    // More or less accents: mark as data.\n    token.type = 'codeTextData'\n    return data(code)\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Token} Token\n */\n\nimport {splice} from 'micromark-util-chunked'\n/**\n * Tokenize subcontent.\n *\n * @param {Array<Event>} events\n *   List of events.\n * @returns {boolean}\n *   Whether subtokens were found.\n */\nexport function subtokenize(events) {\n  /** @type {Record<string, number>} */\n  const jumps = {}\n  let index = -1\n  /** @type {Event} */\n  let event\n  /** @type {number | undefined} */\n  let lineIndex\n  /** @type {number} */\n  let otherIndex\n  /** @type {Event} */\n  let otherEvent\n  /** @type {Array<Event>} */\n  let parameters\n  /** @type {Array<Event>} */\n  let subevents\n  /** @type {boolean | undefined} */\n  let more\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index]\n    }\n    event = events[index]\n\n    // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n    if (\n      index &&\n      event[1].type === 'chunkFlow' &&\n      events[index - 1][1].type === 'listItemPrefix'\n    ) {\n      subevents = event[1]._tokenizer.events\n      otherIndex = 0\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'lineEndingBlank'\n      ) {\n        otherIndex += 2\n      }\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'content'\n      ) {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === 'content') {\n            break\n          }\n          if (subevents[otherIndex][1].type === 'chunkText') {\n            subevents[otherIndex][1]._isInFirstContentOfListItem = true\n            otherIndex++\n          }\n        }\n      }\n    }\n\n    // Enter.\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        Object.assign(jumps, subcontent(events, index))\n        index = jumps[index]\n        more = true\n      }\n    }\n    // Exit.\n    else if (event[1]._container) {\n      otherIndex = index\n      lineIndex = undefined\n      while (otherIndex--) {\n        otherEvent = events[otherIndex]\n        if (\n          otherEvent[1].type === 'lineEnding' ||\n          otherEvent[1].type === 'lineEndingBlank'\n        ) {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events[lineIndex][1].type = 'lineEndingBlank'\n            }\n            otherEvent[1].type = 'lineEnding'\n            lineIndex = otherIndex\n          }\n        } else {\n          break\n        }\n      }\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = Object.assign({}, events[lineIndex][1].start)\n\n        // Switch container exit w/ line endings.\n        parameters = events.slice(lineIndex, index)\n        parameters.unshift(event)\n        splice(events, lineIndex, index - lineIndex + 1, parameters)\n      }\n    }\n  }\n  return !more\n}\n\n/**\n * Tokenize embedded tokens.\n *\n * @param {Array<Event>} events\n * @param {number} eventIndex\n * @returns {Record<string, number>}\n */\nfunction subcontent(events, eventIndex) {\n  const token = events[eventIndex][1]\n  const context = events[eventIndex][2]\n  let startPosition = eventIndex - 1\n  /** @type {Array<number>} */\n  const startPositions = []\n  const tokenizer =\n    token._tokenizer || context.parser[token.contentType](token.start)\n  const childEvents = tokenizer.events\n  /** @type {Array<[number, number]>} */\n  const jumps = []\n  /** @type {Record<string, number>} */\n  const gaps = {}\n  /** @type {Array<Chunk>} */\n  let stream\n  /** @type {Token | undefined} */\n  let previous\n  let index = -1\n  /** @type {Token | undefined} */\n  let current = token\n  let adjust = 0\n  let start = 0\n  const breaks = [start]\n\n  // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n  while (current) {\n    // Find the position of the event for this token.\n    while (events[++startPosition][1] !== current) {\n      // Empty.\n    }\n    startPositions.push(startPosition)\n    if (!current._tokenizer) {\n      stream = context.sliceStream(current)\n      if (!current.next) {\n        stream.push(null)\n      }\n      if (previous) {\n        tokenizer.defineSkip(current.start)\n      }\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true\n      }\n      tokenizer.write(stream)\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined\n      }\n    }\n\n    // Unravel the next token.\n    previous = current\n    current = current.next\n  }\n\n  // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n  current = token\n  while (++index < childEvents.length) {\n    if (\n      // Find a void token that includes a break.\n      childEvents[index][0] === 'exit' &&\n      childEvents[index - 1][0] === 'enter' &&\n      childEvents[index][1].type === childEvents[index - 1][1].type &&\n      childEvents[index][1].start.line !== childEvents[index][1].end.line\n    ) {\n      start = index + 1\n      breaks.push(start)\n      // Help GC.\n      current._tokenizer = undefined\n      current.previous = undefined\n      current = current.next\n    }\n  }\n\n  // Help GC.\n  tokenizer.events = []\n\n  // If there\u2019s one more token (which is the cases for lines that end in an\n  // EOF), that\u2019s perfect: the last point we found starts it.\n  // If there isn\u2019t then make sure any remaining content is added to it.\n  if (current) {\n    // Help GC.\n    current._tokenizer = undefined\n    current.previous = undefined\n  } else {\n    breaks.pop()\n  }\n\n  // Now splice the events from the subtokenizer into the current events,\n  // moving back to front so that splice indices aren\u2019t affected.\n  index = breaks.length\n  while (index--) {\n    const slice = childEvents.slice(breaks[index], breaks[index + 1])\n    const start = startPositions.pop()\n    jumps.unshift([start, start + slice.length - 1])\n    splice(events, start, 2, slice)\n  }\n  index = -1\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1]\n    adjust += jumps[index][1] - jumps[index][0] - 1\n  }\n  return gaps\n}\n", "/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {subtokenize} from 'micromark-util-subtokenize'\n/**\n * No name because it must not be turned off.\n * @type {Construct}\n */\nexport const content = {\n  tokenize: tokenizeContent,\n  resolve: resolveContent\n}\n\n/** @type {Construct} */\nconst continuationConstruct = {\n  tokenize: tokenizeContinuation,\n  partial: true\n}\n\n/**\n * Content is transparent: it\u2019s parsed right now. That way, definitions are also\n * parsed right now: before text in paragraphs (specifically, media) are parsed.\n *\n * @type {Resolver}\n */\nfunction resolveContent(events) {\n  subtokenize(events)\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeContent(effects, ok) {\n  /** @type {Token | undefined} */\n  let previous\n  return chunkStart\n\n  /**\n   * Before a content chunk.\n   *\n   * ```markdown\n   * > | abc\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function chunkStart(code) {\n    effects.enter('content')\n    previous = effects.enter('chunkContent', {\n      contentType: 'content'\n    })\n    return chunkInside(code)\n  }\n\n  /**\n   * In a content chunk.\n   *\n   * ```markdown\n   * > | abc\n   *     ^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function chunkInside(code) {\n    if (code === null) {\n      return contentEnd(code)\n    }\n\n    // To do: in `markdown-rs`, each line is parsed on its own, and everything\n    // is stitched together resolving.\n    if (markdownLineEnding(code)) {\n      return effects.check(\n        continuationConstruct,\n        contentContinue,\n        contentEnd\n      )(code)\n    }\n\n    // Data.\n    effects.consume(code)\n    return chunkInside\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function contentEnd(code) {\n    effects.exit('chunkContent')\n    effects.exit('content')\n    return ok(code)\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function contentContinue(code) {\n    effects.consume(code)\n    effects.exit('chunkContent')\n    previous.next = effects.enter('chunkContent', {\n      contentType: 'content',\n      previous\n    })\n    previous = previous.next\n    return chunkInside\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeContinuation(effects, ok, nok) {\n  const self = this\n  return startLookahead\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function startLookahead(code) {\n    effects.exit('chunkContent')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, prefixed, 'linePrefix')\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    // Always populated by defaults.\n\n    const tail = self.events[self.events.length - 1]\n    if (\n      !self.parser.constructs.disable.null.includes('codeIndented') &&\n      tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n    ) {\n      return ok(code)\n    }\n    return effects.interrupt(self.parser.constructs.flow, nok, ok)(code)\n  }\n}\n", "// This module is generated by `script/`.\n//\n// CommonMark handles attention (emphasis, strong) markers based on what comes\n// before or after them.\n// One such difference is if those characters are Unicode punctuation.\n// This script is generated from the Unicode data.\n\n/**\n * Regular expression that matches a unicode punctuation character.\n */\nexport const unicodePunctuationRegex =\n  /[!-\\/:-@\\[-`\\{-~\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061D-\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1B7D\\u1B7E\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52-\\u2E5D\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]/\n", "/**\n * @typedef {import('micromark-util-types').Code} Code\n */\n\nimport {unicodePunctuationRegex} from './lib/unicode-punctuation-regex.js'\n\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiAlpha = regexCheck(/[A-Za-z]/)\n\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  )\n}\n\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiDigit = regexCheck(/\\d/)\n\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2\n}\n\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32)\n}\n\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32\n}\n\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodePunctuation = regexCheck(unicodePunctuationRegex)\n\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodeWhitespace = regexCheck(/\\s/)\n\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => boolean}\n */\nfunction regexCheck(regex) {\n  return check\n\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code\n   *   Character code.\n   * @returns {boolean}\n   *   Whether the character code matches the bound regex.\n   */\n  function check(code) {\n    return code !== null && regex.test(String.fromCharCode(code))\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {\n  asciiControl,\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\n/**\n * Parse destinations.\n *\n * ###### Examples\n *\n * ```markdown\n * <a>\n * <a\\>b>\n * <a b>\n * <a)>\n * a\n * a\\)b\n * a(b)c\n * a(b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type for whole (`<a>` or `b`).\n * @param {TokenType} literalType\n *   Type when enclosed (`<a>`).\n * @param {TokenType} literalMarkerType\n *   Type for enclosing (`<` and `>`).\n * @param {TokenType} rawType\n *   Type when not enclosed (`b`).\n * @param {TokenType} stringType\n *   Type for the value (`a` or `b`).\n * @param {number | undefined} [max=Infinity]\n *   Depth of nested parens (inclusive).\n * @returns {State}\n *   Start state.\n */ // eslint-disable-next-line max-params\nexport function factoryDestination(\n  effects,\n  ok,\n  nok,\n  type,\n  literalType,\n  literalMarkerType,\n  rawType,\n  stringType,\n  max\n) {\n  const limit = max || Number.POSITIVE_INFINITY\n  let balance = 0\n  return start\n\n  /**\n   * Start of destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *     ^\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type)\n      effects.enter(literalType)\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      return enclosedBefore\n    }\n\n    // ASCII control, space, closing paren.\n    if (code === null || code === 32 || code === 41 || asciiControl(code)) {\n      return nok(code)\n    }\n    effects.enter(type)\n    effects.enter(rawType)\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return raw(code)\n  }\n\n  /**\n   * After `<`, at an enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      effects.exit(literalType)\n      effects.exit(type)\n      return ok\n    }\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return enclosed(code)\n  }\n\n  /**\n   * In enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosed(code) {\n    if (code === 62) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      return enclosedBefore(code)\n    }\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return code === 92 ? enclosedEscape : enclosed\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | <a\\*a>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code)\n      return enclosed\n    }\n    return enclosed(code)\n  }\n\n  /**\n   * In raw destination.\n   *\n   * ```markdown\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function raw(code) {\n    if (\n      !balance &&\n      (code === null || code === 41 || markdownLineEndingOrSpace(code))\n    ) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      effects.exit(rawType)\n      effects.exit(type)\n      return ok(code)\n    }\n    if (balance < limit && code === 40) {\n      effects.consume(code)\n      balance++\n      return raw\n    }\n    if (code === 41) {\n      effects.consume(code)\n      balance--\n      return raw\n    }\n\n    // ASCII control (but *not* `\\0`) and space and `(`.\n    // Note: in `markdown-rs`, `\\0` exists in codes, in `micromark-js` it\n    // doesn\u2019t.\n    if (code === null || code === 32 || code === 40 || asciiControl(code)) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return code === 92 ? rawEscape : raw\n  }\n\n  /**\n   * After `\\`, at special character.\n   *\n   * ```markdown\n   * > | a\\*a\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function rawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code)\n      return raw\n    }\n    return raw(code)\n  }\n}\n", "// This module is generated by `script/`.\n//\n// CommonMark handles attention (emphasis, strong) markers based on what comes\n// before or after them.\n// One such difference is if those characters are Unicode punctuation.\n// This script is generated from the Unicode data.\n\n/**\n * Regular expression that matches a unicode punctuation character.\n */\nexport const unicodePunctuationRegex =\n  /[!-\\/:-@\\[-`\\{-~\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061D-\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1B7D\\u1B7E\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52-\\u2E5D\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]/\n", "/**\n * @typedef {import('micromark-util-types').Code} Code\n */\n\nimport {unicodePunctuationRegex} from './lib/unicode-punctuation-regex.js'\n\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiAlpha = regexCheck(/[A-Za-z]/)\n\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  )\n}\n\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiDigit = regexCheck(/\\d/)\n\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2\n}\n\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32)\n}\n\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32\n}\n\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodePunctuation = regexCheck(unicodePunctuationRegex)\n\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodeWhitespace = regexCheck(/\\s/)\n\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => boolean}\n */\nfunction regexCheck(regex) {\n  return check\n\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code\n   *   Character code.\n   * @returns {boolean}\n   *   Whether the character code matches the bound regex.\n   */\n  function check(code) {\n    return code !== null && regex.test(String.fromCharCode(code))\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/**\n * Parse labels.\n *\n * > \uD83D\uDC49 **Note**: labels in markdown are capped at 999 characters in the string.\n *\n * ###### Examples\n *\n * ```markdown\n * [a]\n * [a\n * b]\n * [a\\]b]\n * ```\n *\n * @this {TokenizeContext}\n *   Tokenize context.\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole label (`[a]`).\n * @param {TokenType} markerType\n *   Type for the markers (`[` and `]`).\n * @param {TokenType} stringType\n *   Type for the identifier (`a`).\n * @returns {State}\n *   Start state.\n */ // eslint-disable-next-line max-params\nexport function factoryLabel(effects, ok, nok, type, markerType, stringType) {\n  const self = this\n  let size = 0\n  /** @type {boolean} */\n  let seen\n  return start\n\n  /**\n   * Start of label.\n   *\n   * ```markdown\n   * > | [a]\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    effects.enter(stringType)\n    return atBreak\n  }\n\n  /**\n   * In label, at something, before something else.\n   *\n   * ```markdown\n   * > | [a]\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (\n      size > 999 ||\n      code === null ||\n      code === 91 ||\n      (code === 93 && !seen) ||\n      // To do: remove in the future once we\u2019ve switched from\n      // `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n      // which doesn\u2019t need this.\n      // Hidden footnotes hook.\n      /* c8 ignore next 3 */\n      (code === 94 &&\n        !size &&\n        '_hiddenFootnoteSupport' in self.parser.constructs)\n    ) {\n      return nok(code)\n    }\n    if (code === 93) {\n      effects.exit(stringType)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    // To do: indent? Link chunks and EOLs together?\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return atBreak\n    }\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return labelInside(code)\n  }\n\n  /**\n   * In label, in text.\n   *\n   * ```markdown\n   * > | [a]\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelInside(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      code === 93 ||\n      markdownLineEnding(code) ||\n      size++ > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n    effects.consume(code)\n    if (!seen) seen = !markdownSpace(code)\n    return code === 92 ? labelEscape : labelInside\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | [a\\*a]\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return labelInside\n    }\n    return labelInside(code)\n  }\n}\n", "// This module is generated by `script/`.\n//\n// CommonMark handles attention (emphasis, strong) markers based on what comes\n// before or after them.\n// One such difference is if those characters are Unicode punctuation.\n// This script is generated from the Unicode data.\n\n/**\n * Regular expression that matches a unicode punctuation character.\n */\nexport const unicodePunctuationRegex =\n  /[!-\\/:-@\\[-`\\{-~\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061D-\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1B7D\\u1B7E\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52-\\u2E5D\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]/\n", "/**\n * @typedef {import('micromark-util-types').Code} Code\n */\n\nimport {unicodePunctuationRegex} from './lib/unicode-punctuation-regex.js'\n\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiAlpha = regexCheck(/[A-Za-z]/)\n\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  )\n}\n\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiDigit = regexCheck(/\\d/)\n\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2\n}\n\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32)\n}\n\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32\n}\n\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodePunctuation = regexCheck(unicodePunctuationRegex)\n\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodeWhitespace = regexCheck(/\\s/)\n\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => boolean}\n */\nfunction regexCheck(regex) {\n  return check\n\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code\n   *   Character code.\n   * @returns {boolean}\n   *   Whether the character code matches the bound regex.\n   */\n  function check(code) {\n    return code !== null && regex.test(String.fromCharCode(code))\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/**\n * Parse titles.\n *\n * ###### Examples\n *\n * ```markdown\n * \"a\"\n * 'b'\n * (c)\n * \"a\n * b\"\n * 'a\n *     b'\n * (a\\)b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole title (`\"a\"`, `'b'`, `(c)`).\n * @param {TokenType} markerType\n *   Type for the markers (`\"`, `'`, `(`, and `)`).\n * @param {TokenType} stringType\n *   Type for the value (`a`).\n * @returns {State}\n *   Start state.\n */ // eslint-disable-next-line max-params\nexport function factoryTitle(effects, ok, nok, type, markerType, stringType) {\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * Start of title.\n   *\n   * ```markdown\n   * > | \"a\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      effects.enter(type)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      marker = code === 40 ? 41 : code\n      return begin\n    }\n    return nok(code)\n  }\n\n  /**\n   * After opening marker.\n   *\n   * This is also used at the closing marker.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function begin(code) {\n    if (code === marker) {\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n    effects.enter(stringType)\n    return atBreak(code)\n  }\n\n  /**\n   * At something, before something else.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType)\n      return begin(marker)\n    }\n    if (code === null) {\n      return nok(code)\n    }\n\n    // Note: blank lines can\u2019t exist in content.\n    if (markdownLineEnding(code)) {\n      // To do: use `space_or_tab_eol_with_options`, connect.\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, atBreak, 'linePrefix')\n    }\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return inside(code)\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n    effects.consume(code)\n    return code === 92 ? escape : inside\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | \"a\\*b\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function escape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code)\n      return inside\n    }\n    return inside(code)\n  }\n}\n", "// This module is generated by `script/`.\n//\n// CommonMark handles attention (emphasis, strong) markers based on what comes\n// before or after them.\n// One such difference is if those characters are Unicode punctuation.\n// This script is generated from the Unicode data.\n\n/**\n * Regular expression that matches a unicode punctuation character.\n */\nexport const unicodePunctuationRegex =\n  /[!-\\/:-@\\[-`\\{-~\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061D-\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1B7D\\u1B7E\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52-\\u2E5D\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]/\n", "/**\n * @typedef {import('micromark-util-types').Code} Code\n */\n\nimport {unicodePunctuationRegex} from './lib/unicode-punctuation-regex.js'\n\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiAlpha = regexCheck(/[A-Za-z]/)\n\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  )\n}\n\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiDigit = regexCheck(/\\d/)\n\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2\n}\n\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32)\n}\n\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32\n}\n\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodePunctuation = regexCheck(unicodePunctuationRegex)\n\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodeWhitespace = regexCheck(/\\s/)\n\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => boolean}\n */\nfunction regexCheck(regex) {\n  return check\n\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code\n   *   Character code.\n   * @returns {boolean}\n   *   Whether the character code matches the bound regex.\n   */\n  function check(code) {\n    return code !== null && regex.test(String.fromCharCode(code))\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   line endings or spaces in markdown are often optional, in which case this\n *     factory can be used and `ok` will be switched to whether spaces were found\n *     or not\n * *   one line ending or space can be detected with\n *     `markdownLineEndingOrSpace(code)` right before using `factoryWhitespace`\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @returns\n *   Start state.\n */\nexport function factoryWhitespace(effects, ok) {\n  /** @type {boolean} */\n  let seen\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      seen = true\n      return start\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        start,\n        seen ? 'linePrefix' : 'lineSuffix'\n      )(code)\n    }\n    return ok(code)\n  }\n}\n", "/**\n * Normalize an identifier (as found in references, definitions).\n *\n * Collapses markdown whitespace, trim, and then lower- and uppercase.\n *\n * Some characters are considered \u201Cuppercase\u201D, such as U+03F4 (`\u03F4`), but if their\n * lowercase counterpart (U+03B8 (`\u03B8`)) is uppercased will result in a different\n * uppercase character (U+0398 (`\u0398`)).\n * So, to get a canonical form, we perform both lower- and uppercase.\n *\n * Using uppercase last makes sure keys will never interact with default\n * prototypal values (such as `constructor`): nothing in the prototype of\n * `Object` is uppercase.\n *\n * @param {string} value\n *   Identifier to normalize.\n * @returns {string}\n *   Normalized identifier.\n */\nexport function normalizeIdentifier(value) {\n  return (\n    value\n      // Collapse markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, ' ')\n      // Trim.\n      .replace(/^ | $/g, '')\n      // Some characters are considered \u201Cuppercase\u201D, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n", "/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factorySpace} from 'micromark-factory-space'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\n/** @type {Construct} */\nexport const definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n}\n\n/** @type {Construct} */\nconst titleBefore = {\n  tokenize: tokenizeTitleBefore,\n  partial: true\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDefinition(effects, ok, nok) {\n  const self = this\n  /** @type {string} */\n  let identifier\n  return start\n\n  /**\n   * At start of a definition.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // Do not interrupt paragraphs (but do follow definitions).\n    // To do: do `interrupt` the way `markdown-rs` does.\n    // To do: parse whitespace the way `markdown-rs` does.\n    effects.enter('definition')\n    return before(code)\n  }\n\n  /**\n   * After optional whitespace, at `[`.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    // To do: parse whitespace the way `markdown-rs` does.\n\n    return factoryLabel.call(\n      self,\n      effects,\n      labelAfter,\n      // Note: we don\u2019t need to reset the way `markdown-rs` does.\n      nok,\n      'definitionLabel',\n      'definitionLabelMarker',\n      'definitionLabelString'\n    )(code)\n  }\n\n  /**\n   * After label.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(\n      self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n    )\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker')\n      return markerAfter\n    }\n    return nok(code)\n  }\n\n  /**\n   * After marker.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function markerAfter(code) {\n    // Note: whitespace is optional.\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, destinationBefore)(code)\n      : destinationBefore(code)\n  }\n\n  /**\n   * Before destination.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function destinationBefore(code) {\n    return factoryDestination(\n      effects,\n      destinationAfter,\n      // Note: we don\u2019t need to reset the way `markdown-rs` does.\n      nok,\n      'definitionDestination',\n      'definitionDestinationLiteral',\n      'definitionDestinationLiteralMarker',\n      'definitionDestinationRaw',\n      'definitionDestinationString'\n    )(code)\n  }\n\n  /**\n   * After destination.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function destinationAfter(code) {\n    return effects.attempt(titleBefore, after, after)(code)\n  }\n\n  /**\n   * After definition.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return markdownSpace(code)\n      ? factorySpace(effects, afterWhitespace, 'whitespace')(code)\n      : afterWhitespace(code)\n  }\n\n  /**\n   * After definition, after optional whitespace.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterWhitespace(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('definition')\n\n      // Note: we don\u2019t care about uniqueness.\n      // It\u2019s likely that that doesn\u2019t happen very frequently.\n      // It is more likely that it wastes precious time.\n      self.parser.defined.push(identifier)\n\n      // To do: `markdown-rs` interrupt.\n      // // You\u2019d be interrupting.\n      // tokenizer.interrupt = true\n      return ok(code)\n    }\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTitleBefore(effects, ok, nok) {\n  return titleBefore\n\n  /**\n   * After destination, at whitespace.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleBefore(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, beforeMarker)(code)\n      : nok(code)\n  }\n\n  /**\n   * At title.\n   *\n   * ```markdown\n   *   | [a]: b\n   * > | \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeMarker(code) {\n    return factoryTitle(\n      effects,\n      titleAfter,\n      nok,\n      'definitionTitle',\n      'definitionTitleMarker',\n      'definitionTitleString'\n    )(code)\n  }\n\n  /**\n   * After title.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleAfter(code) {\n    return markdownSpace(code)\n      ? factorySpace(effects, titleAfterOptionalWhitespace, 'whitespace')(code)\n      : titleAfterOptionalWhitespace(code)\n  }\n\n  /**\n   * After title, after optional whitespace.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleAfterOptionalWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {Construct} */\nexport const hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start\n\n  /**\n   * Start of a hard break (escape).\n   *\n   * ```markdown\n   * > | a\\\n   *      ^\n   *   | b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('hardBreakEscape')\n    effects.consume(code)\n    return after\n  }\n\n  /**\n   * After `\\`, at eol.\n   *\n   * ```markdown\n   * > | a\\\n   *       ^\n   *   | b\n   * ```\n   *\n   *  @type {State}\n   */\n  function after(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit('hardBreakEscape')\n      return ok(code)\n    }\n    return nok(code)\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n/** @type {Construct} */\nexport const headingAtx = {\n  name: 'headingAtx',\n  tokenize: tokenizeHeadingAtx,\n  resolve: resolveHeadingAtx\n}\n\n/** @type {Resolver} */\nfunction resolveHeadingAtx(events, context) {\n  let contentEnd = events.length - 2\n  let contentStart = 3\n  /** @type {Token} */\n  let content\n  /** @type {Token} */\n  let text\n\n  // Prefix whitespace, part of the opening.\n  if (events[contentStart][1].type === 'whitespace') {\n    contentStart += 2\n  }\n\n  // Suffix whitespace, part of the closing.\n  if (\n    contentEnd - 2 > contentStart &&\n    events[contentEnd][1].type === 'whitespace'\n  ) {\n    contentEnd -= 2\n  }\n  if (\n    events[contentEnd][1].type === 'atxHeadingSequence' &&\n    (contentStart === contentEnd - 1 ||\n      (contentEnd - 4 > contentStart &&\n        events[contentEnd - 2][1].type === 'whitespace'))\n  ) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4\n  }\n  if (contentEnd > contentStart) {\n    content = {\n      type: 'atxHeadingText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    }\n    text = {\n      type: 'chunkText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      contentType: 'text'\n    }\n    splice(events, contentStart, contentEnd - contentStart + 1, [\n      ['enter', content, context],\n      ['enter', text, context],\n      ['exit', text, context],\n      ['exit', content, context]\n    ])\n  }\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  let size = 0\n  return start\n\n  /**\n   * Start of a heading (atx).\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse indent like `markdown-rs`.\n    effects.enter('atxHeading')\n    return before(code)\n  }\n\n  /**\n   * After optional whitespace, at `#`.\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter('atxHeadingSequence')\n    return sequenceOpen(code)\n  }\n\n  /**\n   * In opening sequence.\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code)\n      return sequenceOpen\n    }\n\n    // Always at least one `#`.\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingSequence')\n      return atBreak(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * After something, before something else.\n   *\n   * ```markdown\n   * > | ## aa\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === 35) {\n      effects.enter('atxHeadingSequence')\n      return sequenceFurther(code)\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('atxHeading')\n      // To do: interrupt like `markdown-rs`.\n      // // Feel free to interrupt.\n      // tokenizer.interrupt = false\n      return ok(code)\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, 'whitespace')(code)\n    }\n\n    // To do: generate `data` tokens, add the `text` token later.\n    // Needs edit map, see: `markdown.rs`.\n    effects.enter('atxHeadingText')\n    return data(code)\n  }\n\n  /**\n   * In further sequence (after whitespace).\n   *\n   * Could be normal \u201Cvisible\u201D hashes in the heading or a final sequence.\n   *\n   * ```markdown\n   * > | ## aa ##\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceFurther(code) {\n    if (code === 35) {\n      effects.consume(code)\n      return sequenceFurther\n    }\n    effects.exit('atxHeadingSequence')\n    return atBreak(code)\n  }\n\n  /**\n   * In text.\n   *\n   * ```markdown\n   * > | ## aa\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingText')\n      return atBreak(code)\n    }\n    effects.consume(code)\n    return data\n  }\n}\n", "/**\n * List of lowercase HTML \u201Cblock\u201D tag names.\n *\n * The list, when parsing HTML (flow), results in more relaxed rules (condition\n * 6).\n * Because they are known blocks, the HTML-like syntax doesn\u2019t have to be\n * strictly parsed.\n * For tag names not in this list, a more strict algorithm (condition 7) is used\n * to detect whether the HTML-like syntax is seen as HTML (flow) or not.\n *\n * This is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * > \uD83D\uDC49 **Note**: `search` was added in `CommonMark@0.31`.\n */\nexport const htmlBlockNames = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'search',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\n/**\n * List of lowercase HTML \u201Craw\u201D tag names.\n *\n * The list, when parsing HTML (flow), results in HTML that can include lines\n * without exiting, until a closing tag also in this list is found (condition\n * 1).\n *\n * This module is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * > \uD83D\uDC49 **Note**: `textarea` was added in `CommonMark@0.30`.\n */\nexport const htmlRawNames = ['pre', 'script', 'style', 'textarea']\n", "/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {htmlBlockNames, htmlRawNames} from 'micromark-util-html-tag-name'\nimport {blankLine} from './blank-line.js'\n\n/** @type {Construct} */\nexport const htmlFlow = {\n  name: 'htmlFlow',\n  tokenize: tokenizeHtmlFlow,\n  resolveTo: resolveToHtmlFlow,\n  concrete: true\n}\n\n/** @type {Construct} */\nconst blankLineBefore = {\n  tokenize: tokenizeBlankLineBefore,\n  partial: true\n}\nconst nonLazyContinuationStart = {\n  tokenize: tokenizeNonLazyContinuationStart,\n  partial: true\n}\n\n/** @type {Resolver} */\nfunction resolveToHtmlFlow(events) {\n  let index = events.length\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === 'htmlFlow') {\n      break\n    }\n  }\n  if (index > 1 && events[index - 2][1].type === 'linePrefix') {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start\n    // Add the prefix start to the HTML line token.\n    events[index + 1][1].start = events[index - 2][1].start\n    // Remove the line prefix.\n    events.splice(index - 2, 2)\n  }\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  const self = this\n  /** @type {number} */\n  let marker\n  /** @type {boolean} */\n  let closingTag\n  /** @type {string} */\n  let buffer\n  /** @type {number} */\n  let index\n  /** @type {Code} */\n  let markerB\n  return start\n\n  /**\n   * Start of HTML (flow).\n   *\n   * ```markdown\n   * > | <x />\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse indent like `markdown-rs`.\n    return before(code)\n  }\n\n  /**\n   * At `<`, after optional whitespace.\n   *\n   * ```markdown\n   * > | <x />\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter('htmlFlow')\n    effects.enter('htmlFlowData')\n    effects.consume(code)\n    return open\n  }\n\n  /**\n   * After `<`, at tag name or other stuff.\n   *\n   * ```markdown\n   * > | <x />\n   *      ^\n   * > | <!doctype>\n   *      ^\n   * > | <!--xxx-->\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n    if (code === 47) {\n      effects.consume(code)\n      closingTag = true\n      return tagCloseStart\n    }\n    if (code === 63) {\n      effects.consume(code)\n      marker = 3\n      // To do:\n      // tokenizer.concrete = true\n      // To do: use `markdown-rs` style interrupt.\n      // While we\u2019re in an instruction instead of a declaration, we\u2019re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      // @ts-expect-error: not null.\n      buffer = String.fromCharCode(code)\n      return tagName\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `<!`, at declaration, comment, or CDATA.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *       ^\n   * > | <!--xxx-->\n   *       ^\n   * > | <![CDATA[>&<]]>\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      marker = 2\n      return commentOpenInside\n    }\n    if (code === 91) {\n      effects.consume(code)\n      marker = 5\n      index = 0\n      return cdataOpenInside\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      marker = 4\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `<!-`, inside a comment, at another `-`.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `<![`, inside CDATA, expecting `CDATA[`.\n   *\n   * ```markdown\n   * > | <![CDATA[>&<]]>\n   *        ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataOpenInside(code) {\n    const value = 'CDATA['\n    if (code === value.charCodeAt(index++)) {\n      effects.consume(code)\n      if (index === value.length) {\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok : continuation\n      }\n      return cdataOpenInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `</`, in closing tag, at tag name.\n   *\n   * ```markdown\n   * > | </x>\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      // @ts-expect-error: not null.\n      buffer = String.fromCharCode(code)\n      return tagName\n    }\n    return nok(code)\n  }\n\n  /**\n   * In tag name.\n   *\n   * ```markdown\n   * > | <ab>\n   *      ^^\n   * > | </ab>\n   *       ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagName(code) {\n    if (\n      code === null ||\n      code === 47 ||\n      code === 62 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      const slash = code === 47\n      const name = buffer.toLowerCase()\n      if (!slash && !closingTag && htmlRawNames.includes(name)) {\n        marker = 1\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n      if (htmlBlockNames.includes(buffer.toLowerCase())) {\n        marker = 6\n        if (slash) {\n          effects.consume(code)\n          return basicSelfClosing\n        }\n\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n      marker = 7\n      // Do not support complete HTML when interrupting.\n      return self.interrupt && !self.parser.lazy[self.now().line]\n        ? nok(code)\n        : closingTag\n        ? completeClosingTagAfter(code)\n        : completeAttributeNameBefore(code)\n    }\n\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return tagName\n    }\n    return nok(code)\n  }\n\n  /**\n   * After closing slash of a basic tag name.\n   *\n   * ```markdown\n   * > | <div/>\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code)\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuation\n    }\n    return nok(code)\n  }\n\n  /**\n   * After closing slash of a complete tag name.\n   *\n   * ```markdown\n   * > | <x/>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeClosingTagAfter\n    }\n    return completeEnd(code)\n  }\n\n  /**\n   * At an attribute name.\n   *\n   * At first, this state is used after a complete tag name, after whitespace,\n   * where it expects optional attributes or the end of the tag.\n   * It is also reused after attributes, when expecting more optional\n   * attributes.\n   *\n   * ```markdown\n   * > | <a />\n   *        ^\n   * > | <a :b>\n   *        ^\n   * > | <a _b>\n   *        ^\n   * > | <a b>\n   *        ^\n   * > | <a >\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return completeEnd\n    }\n\n    // ASCII alphanumerical and `:` and `_`.\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameBefore\n    }\n    return completeEnd(code)\n  }\n\n  /**\n   * In attribute name.\n   *\n   * ```markdown\n   * > | <a :b>\n   *         ^\n   * > | <a _b>\n   *         ^\n   * > | <a b>\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeName(code) {\n    // ASCII alphanumerical and `-`, `.`, `:`, and `_`.\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n    return completeAttributeNameAfter(code)\n  }\n\n  /**\n   * After attribute name, at an optional initializer, the end of the tag, or\n   * whitespace.\n   *\n   * ```markdown\n   * > | <a b>\n   *         ^\n   * > | <a b=c>\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameAfter\n    }\n    return completeAttributeNameBefore(code)\n  }\n\n  /**\n   * Before unquoted, double quoted, or single quoted attribute value, allowing\n   * whitespace.\n   *\n   * ```markdown\n   * > | <a b=c>\n   *          ^\n   * > | <a b=\"c\">\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      markerB = code\n      return completeAttributeValueQuoted\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n    return completeAttributeValueUnquoted(code)\n  }\n\n  /**\n   * In double or single quoted attribute value.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *           ^\n   * > | <a b='c'>\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueQuoted(code) {\n    if (code === markerB) {\n      effects.consume(code)\n      markerB = null\n      return completeAttributeValueQuotedAfter\n    }\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return completeAttributeValueQuoted\n  }\n\n  /**\n   * In unquoted attribute value.\n   *\n   * ```markdown\n   * > | <a b=c>\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 47 ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return completeAttributeNameAfter(code)\n    }\n    effects.consume(code)\n    return completeAttributeValueUnquoted\n  }\n\n  /**\n   * After double or single quoted attribute value, before whitespace or the\n   * end of the tag.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * In certain circumstances of a complete tag where only an `>` is allowed.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return completeAfter\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `>` in a complete tag.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return continuation(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAfter\n    }\n    return nok(code)\n  }\n\n  /**\n   * In continuation of any HTML kind.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuation(code) {\n    if (code === 45 && marker === 2) {\n      effects.consume(code)\n      return continuationCommentInside\n    }\n    if (code === 60 && marker === 1) {\n      effects.consume(code)\n      return continuationRawTagOpen\n    }\n    if (code === 62 && marker === 4) {\n      effects.consume(code)\n      return continuationClose\n    }\n    if (code === 63 && marker === 3) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n    if (code === 93 && marker === 5) {\n      effects.consume(code)\n      return continuationCdataInside\n    }\n    if (markdownLineEnding(code) && (marker === 6 || marker === 7)) {\n      effects.exit('htmlFlowData')\n      return effects.check(\n        blankLineBefore,\n        continuationAfter,\n        continuationStart\n      )(code)\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return continuationStart(code)\n    }\n    effects.consume(code)\n    return continuation\n  }\n\n  /**\n   * In continuation, at eol.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   *   | asd\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationStart(code) {\n    return effects.check(\n      nonLazyContinuationStart,\n      continuationStartNonLazy,\n      continuationAfter\n    )(code)\n  }\n\n  /**\n   * In continuation, at eol, before non-lazy content.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   *   | asd\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationStartNonLazy(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return continuationBefore\n  }\n\n  /**\n   * In continuation, before non-lazy content.\n   *\n   * ```markdown\n   *   | <x>\n   * > | asd\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return continuationStart(code)\n    }\n    effects.enter('htmlFlowData')\n    return continuation(code)\n  }\n\n  /**\n   * In comment continuation, after one `-`, expecting another.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In raw continuation, after `<`, at `/`.\n   *\n   * ```markdown\n   * > | <script>console.log(1)</script>\n   *                            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code)\n      buffer = ''\n      return continuationRawEndTag\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In raw continuation, after `</`, in a raw tag name.\n   *\n   * ```markdown\n   * > | <script>console.log(1)</script>\n   *                             ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationRawEndTag(code) {\n    if (code === 62) {\n      const name = buffer.toLowerCase()\n      if (htmlRawNames.includes(name)) {\n        effects.consume(code)\n        return continuationClose\n      }\n      return continuation(code)\n    }\n    if (asciiAlpha(code) && buffer.length < 8) {\n      effects.consume(code)\n      // @ts-expect-error: not null.\n      buffer += String.fromCharCode(code)\n      return continuationRawEndTag\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In cdata continuation, after `]`, expecting `]>`.\n   *\n   * ```markdown\n   * > | <![CDATA[>&<]]>\n   *                  ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationCdataInside(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In declaration or instruction continuation, at `>`.\n   *\n   * ```markdown\n   * > | <!-->\n   *         ^\n   * > | <?>\n   *       ^\n   * > | <!q>\n   *        ^\n   * > | <!--ab-->\n   *             ^\n   * > | <![CDATA[>&<]]>\n   *                   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    // More dashes.\n    if (code === 45 && marker === 2) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In closed continuation: everything we get until the eol/eof is part of it.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return continuationAfter(code)\n    }\n    effects.consume(code)\n    return continuationClose\n  }\n\n  /**\n   * Done.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationAfter(code) {\n    effects.exit('htmlFlow')\n    // // Feel free to interrupt.\n    // tokenizer.interrupt = false\n    // // No longer concrete.\n    // tokenizer.concrete = false\n    return ok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeNonLazyContinuationStart(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * At eol, before continuation.\n   *\n   * ```markdown\n   * > | * ```js\n   *            ^\n   *   | b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return after\n    }\n    return nok(code)\n  }\n\n  /**\n   * A continuation.\n   *\n   * ```markdown\n   *   | * ```js\n   * > | b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlankLineBefore(effects, ok, nok) {\n  return start\n\n  /**\n   * Before eol, expecting blank line.\n   *\n   * ```markdown\n   * > | <div>\n   *          ^\n   *   |\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return effects.attempt(blankLine, ok, nok)\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\n/** @type {Construct} */\nexport const htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHtmlText(effects, ok, nok) {\n  const self = this\n  /** @type {NonNullable<Code> | undefined} */\n  let marker\n  /** @type {number} */\n  let index\n  /** @type {State} */\n  let returnState\n  return start\n\n  /**\n   * Start of HTML (text).\n   *\n   * ```markdown\n   * > | a <b> c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('htmlText')\n    effects.enter('htmlTextData')\n    effects.consume(code)\n    return open\n  }\n\n  /**\n   * After `<`, at tag name or other stuff.\n   *\n   * ```markdown\n   * > | a <b> c\n   *        ^\n   * > | a <!doctype> c\n   *        ^\n   * > | a <!--b--> c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n    if (code === 63) {\n      effects.consume(code)\n      return instruction\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `<!`, at declaration, comment, or CDATA.\n   *\n   * ```markdown\n   * > | a <!doctype> c\n   *         ^\n   * > | a <!--b--> c\n   *         ^\n   * > | a <![CDATA[>&<]]> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentOpenInside\n    }\n    if (code === 91) {\n      effects.consume(code)\n      index = 0\n      return cdataOpenInside\n    }\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return declaration\n    }\n    return nok(code)\n  }\n\n  /**\n   * In a comment, after `<!-`, at another `-`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentEnd\n    }\n    return nok(code)\n  }\n\n  /**\n   * In comment.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function comment(code) {\n    if (code === null) {\n      return nok(code)\n    }\n    if (code === 45) {\n      effects.consume(code)\n      return commentClose\n    }\n    if (markdownLineEnding(code)) {\n      returnState = comment\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return comment\n  }\n\n  /**\n   * In comment, after `-`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentEnd\n    }\n    return comment(code)\n  }\n\n  /**\n   * In comment, after `--`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentEnd(code) {\n    return code === 62\n      ? end(code)\n      : code === 45\n      ? commentClose(code)\n      : comment(code)\n  }\n\n  /**\n   * After `<![`, in CDATA, expecting `CDATA[`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *          ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataOpenInside(code) {\n    const value = 'CDATA['\n    if (code === value.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === value.length ? cdata : cdataOpenInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * In CDATA.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                ^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdata(code) {\n    if (code === null) {\n      return nok(code)\n    }\n    if (code === 93) {\n      effects.consume(code)\n      return cdataClose\n    }\n    if (markdownLineEnding(code)) {\n      returnState = cdata\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return cdata\n  }\n\n  /**\n   * In CDATA, after `]`, at another `]`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n    return cdata(code)\n  }\n\n  /**\n   * In CDATA, after `]]`, at `>`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code)\n    }\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n    return cdata(code)\n  }\n\n  /**\n   * In declaration.\n   *\n   * ```markdown\n   * > | a <!b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code)\n    }\n    if (markdownLineEnding(code)) {\n      returnState = declaration\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return declaration\n  }\n\n  /**\n   * In instruction.\n   *\n   * ```markdown\n   * > | a <?b?> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function instruction(code) {\n    if (code === null) {\n      return nok(code)\n    }\n    if (code === 63) {\n      effects.consume(code)\n      return instructionClose\n    }\n    if (markdownLineEnding(code)) {\n      returnState = instruction\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return instruction\n  }\n\n  /**\n   * In instruction, after `?`, at `>`.\n   *\n   * ```markdown\n   * > | a <?b?> c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code)\n  }\n\n  /**\n   * After `</`, in closing tag, at tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseStart(code) {\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `</x`, in a tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagClose(code) {\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n    return tagCloseBetween(code)\n  }\n\n  /**\n   * In closing tag, after tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween\n      return lineEndingBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagCloseBetween\n    }\n    return end(code)\n  }\n\n  /**\n   * After `<x`, in opening tag name.\n   *\n   * ```markdown\n   * > | a <b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpen(code) {\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * In opening tag, after tag name.\n   *\n   * ```markdown\n   * > | a <b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return end\n    }\n\n    // ASCII alphabetical and `:` and `_`.\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween\n      return lineEndingBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenBetween\n    }\n    return end(code)\n  }\n\n  /**\n   * In attribute name.\n   *\n   * ```markdown\n   * > | a <b c> d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeName(code) {\n    // ASCII alphabetical and `-`, `.`, `:`, and `_`.\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n    return tagOpenAttributeNameAfter(code)\n  }\n\n  /**\n   * After attribute name, before initializer, the end of the tag, or\n   * whitespace.\n   *\n   * ```markdown\n   * > | a <b c> d\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter\n      return lineEndingBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeNameAfter\n    }\n    return tagOpenBetween(code)\n  }\n\n  /**\n   * Before unquoted, double quoted, or single quoted attribute value, allowing\n   * whitespace.\n   *\n   * ```markdown\n   * > | a <b c=d> e\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return tagOpenAttributeValueQuoted\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore\n      return lineEndingBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  }\n\n  /**\n   * In double or single quoted attribute value.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code)\n      marker = undefined\n      return tagOpenAttributeValueQuotedAfter\n    }\n    if (code === null) {\n      return nok(code)\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return tagOpenAttributeValueQuoted\n  }\n\n  /**\n   * In unquoted attribute value.\n   *\n   * ```markdown\n   * > | a <b c=d> e\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  }\n\n  /**\n   * After double or single quoted attribute value, before whitespace or the end\n   * of the tag.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * In certain circumstances of a tag where only an `>` is allowed.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code)\n      effects.exit('htmlTextData')\n      effects.exit('htmlText')\n      return ok\n    }\n    return nok(code)\n  }\n\n  /**\n   * At eol.\n   *\n   * > \uD83D\uDC49 **Note**: we can\u2019t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   * > | a <!--a\n   *            ^\n   *   | b-->\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingBefore(code) {\n    effects.exit('htmlTextData')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return lineEndingAfter\n  }\n\n  /**\n   * After eol, at optional whitespace.\n   *\n   * > \uD83D\uDC49 **Note**: we can\u2019t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   *   | a <!--a\n   * > | b-->\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingAfter(code) {\n    // Always populated by defaults.\n\n    return markdownSpace(code)\n      ? factorySpace(\n          effects,\n          lineEndingAfterPrefix,\n          'linePrefix',\n          self.parser.constructs.disable.null.includes('codeIndented')\n            ? undefined\n            : 4\n        )(code)\n      : lineEndingAfterPrefix(code)\n  }\n\n  /**\n   * After eol, after optional whitespace.\n   *\n   * > \uD83D\uDC49 **Note**: we can\u2019t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   *   | a <!--a\n   * > | b-->\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingAfterPrefix(code) {\n    effects.enter('htmlTextData')\n    return returnState(code)\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {markdownLineEndingOrSpace} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {resolveAll} from 'micromark-util-resolve-all'\n/** @type {Construct} */\nexport const labelEnd = {\n  name: 'labelEnd',\n  tokenize: tokenizeLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  resolveAll: resolveAllLabelEnd\n}\n\n/** @type {Construct} */\nconst resourceConstruct = {\n  tokenize: tokenizeResource\n}\n/** @type {Construct} */\nconst referenceFullConstruct = {\n  tokenize: tokenizeReferenceFull\n}\n/** @type {Construct} */\nconst referenceCollapsedConstruct = {\n  tokenize: tokenizeReferenceCollapsed\n}\n\n/** @type {Resolver} */\nfunction resolveAllLabelEnd(events) {\n  let index = -1\n  while (++index < events.length) {\n    const token = events[index][1]\n    if (\n      token.type === 'labelImage' ||\n      token.type === 'labelLink' ||\n      token.type === 'labelEnd'\n    ) {\n      // Remove the marker.\n      events.splice(index + 1, token.type === 'labelImage' ? 4 : 2)\n      token.type = 'data'\n      index++\n    }\n  }\n  return events\n}\n\n/** @type {Resolver} */\nfunction resolveToLabelEnd(events, context) {\n  let index = events.length\n  let offset = 0\n  /** @type {Token} */\n  let token\n  /** @type {number | undefined} */\n  let open\n  /** @type {number | undefined} */\n  let close\n  /** @type {Array<Event>} */\n  let media\n\n  // Find an opening.\n  while (index--) {\n    token = events[index][1]\n    if (open) {\n      // If we see another link, or inactive link label, we\u2019ve been here before.\n      if (\n        token.type === 'link' ||\n        (token.type === 'labelLink' && token._inactive)\n      ) {\n        break\n      }\n\n      // Mark other link openings as inactive, as we can\u2019t have links in\n      // links.\n      if (events[index][0] === 'enter' && token.type === 'labelLink') {\n        token._inactive = true\n      }\n    } else if (close) {\n      if (\n        events[index][0] === 'enter' &&\n        (token.type === 'labelImage' || token.type === 'labelLink') &&\n        !token._balanced\n      ) {\n        open = index\n        if (token.type !== 'labelLink') {\n          offset = 2\n          break\n        }\n      }\n    } else if (token.type === 'labelEnd') {\n      close = index\n    }\n  }\n  const group = {\n    type: events[open][1].type === 'labelLink' ? 'link' : 'image',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n  const label = {\n    type: 'label',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[close][1].end)\n  }\n  const text = {\n    type: 'labelText',\n    start: Object.assign({}, events[open + offset + 2][1].end),\n    end: Object.assign({}, events[close - 2][1].start)\n  }\n  media = [\n    ['enter', group, context],\n    ['enter', label, context]\n  ]\n\n  // Opening marker.\n  media = push(media, events.slice(open + 1, open + offset + 3))\n\n  // Text open.\n  media = push(media, [['enter', text, context]])\n\n  // Always populated by defaults.\n\n  // Between.\n  media = push(\n    media,\n    resolveAll(\n      context.parser.constructs.insideSpan.null,\n      events.slice(open + offset + 4, close - 3),\n      context\n    )\n  )\n\n  // Text close, marker close, label close.\n  media = push(media, [\n    ['exit', text, context],\n    events[close - 2],\n    events[close - 1],\n    ['exit', label, context]\n  ])\n\n  // Reference, resource, or so.\n  media = push(media, events.slice(close + 1))\n\n  // Media close.\n  media = push(media, [['exit', group, context]])\n  splice(events, open, events.length, media)\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {Token} */\n  let labelStart\n  /** @type {boolean} */\n  let defined\n\n  // Find an opening.\n  while (index--) {\n    if (\n      (self.events[index][1].type === 'labelImage' ||\n        self.events[index][1].type === 'labelLink') &&\n      !self.events[index][1]._balanced\n    ) {\n      labelStart = self.events[index][1]\n      break\n    }\n  }\n  return start\n\n  /**\n   * Start of label end.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *       ^\n   * > | [a][b] c\n   *       ^\n   * > | [a][] b\n   *       ^\n   * > | [a] b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // If there is not an okay opening.\n    if (!labelStart) {\n      return nok(code)\n    }\n\n    // If the corresponding label (link) start is marked as inactive,\n    // it means we\u2019d be wrapping a link, like this:\n    //\n    // ```markdown\n    // > | a [b [c](d) e](f) g.\n    //                  ^\n    // ```\n    //\n    // We can\u2019t have that, so it\u2019s just balanced brackets.\n    if (labelStart._inactive) {\n      return labelEndNok(code)\n    }\n    defined = self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize({\n          start: labelStart.end,\n          end: self.now()\n        })\n      )\n    )\n    effects.enter('labelEnd')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelEnd')\n    return after\n  }\n\n  /**\n   * After `]`.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *       ^\n   * > | [a][b] c\n   *       ^\n   * > | [a][] b\n   *       ^\n   * > | [a] b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // Note: `markdown-rs` also parses GFM footnotes here, which for us is in\n    // an extension.\n\n    // Resource (`[asd](fgh)`)?\n    if (code === 40) {\n      return effects.attempt(\n        resourceConstruct,\n        labelEndOk,\n        defined ? labelEndOk : labelEndNok\n      )(code)\n    }\n\n    // Full (`[asd][fgh]`) or collapsed (`[asd][]`) reference?\n    if (code === 91) {\n      return effects.attempt(\n        referenceFullConstruct,\n        labelEndOk,\n        defined ? referenceNotFull : labelEndNok\n      )(code)\n    }\n\n    // Shortcut (`[asd]`) reference?\n    return defined ? labelEndOk(code) : labelEndNok(code)\n  }\n\n  /**\n   * After `]`, at `[`, but not at a full reference.\n   *\n   * > \uD83D\uDC49 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] b\n   *        ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceNotFull(code) {\n    return effects.attempt(\n      referenceCollapsedConstruct,\n      labelEndOk,\n      labelEndNok\n    )(code)\n  }\n\n  /**\n   * Done, we found something.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *           ^\n   * > | [a][b] c\n   *           ^\n   * > | [a][] b\n   *          ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEndOk(code) {\n    // Note: `markdown-rs` does a bunch of stuff here.\n    return ok(code)\n  }\n\n  /**\n   * Done, it\u2019s nothing.\n   *\n   * There was an okay opening, but we didn\u2019t match anything.\n   *\n   * ```markdown\n   * > | [a](b c\n   *        ^\n   * > | [a][b c\n   *        ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEndNok(code) {\n    labelStart._balanced = true\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeResource(effects, ok, nok) {\n  return resourceStart\n\n  /**\n   * At a resource.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceStart(code) {\n    effects.enter('resource')\n    effects.enter('resourceMarker')\n    effects.consume(code)\n    effects.exit('resourceMarker')\n    return resourceBefore\n  }\n\n  /**\n   * In resource, after `(`, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceBefore(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, resourceOpen)(code)\n      : resourceOpen(code)\n  }\n\n  /**\n   * In resource, after optional whitespace, at `)` or a destination.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceOpen(code) {\n    if (code === 41) {\n      return resourceEnd(code)\n    }\n    return factoryDestination(\n      effects,\n      resourceDestinationAfter,\n      resourceDestinationMissing,\n      'resourceDestination',\n      'resourceDestinationLiteral',\n      'resourceDestinationLiteralMarker',\n      'resourceDestinationRaw',\n      'resourceDestinationString',\n      32\n    )(code)\n  }\n\n  /**\n   * In resource, after destination, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceDestinationAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, resourceBetween)(code)\n      : resourceEnd(code)\n  }\n\n  /**\n   * At invalid destination.\n   *\n   * ```markdown\n   * > | [a](<<) b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceDestinationMissing(code) {\n    return nok(code)\n  }\n\n  /**\n   * In resource, after destination and whitespace, at `(` or title.\n   *\n   * ```markdown\n   * > | [a](b ) c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceBetween(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        resourceTitleAfter,\n        nok,\n        'resourceTitle',\n        'resourceTitleMarker',\n        'resourceTitleString'\n      )(code)\n    }\n    return resourceEnd(code)\n  }\n\n  /**\n   * In resource, after title, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b \"c\") d\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceTitleAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, resourceEnd)(code)\n      : resourceEnd(code)\n  }\n\n  /**\n   * In resource, at `)`.\n   *\n   * ```markdown\n   * > | [a](b) d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceEnd(code) {\n    if (code === 41) {\n      effects.enter('resourceMarker')\n      effects.consume(code)\n      effects.exit('resourceMarker')\n      effects.exit('resource')\n      return ok\n    }\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeReferenceFull(effects, ok, nok) {\n  const self = this\n  return referenceFull\n\n  /**\n   * In a reference (full), at the `[`.\n   *\n   * ```markdown\n   * > | [a][b] d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFull(code) {\n    return factoryLabel.call(\n      self,\n      effects,\n      referenceFullAfter,\n      referenceFullMissing,\n      'reference',\n      'referenceMarker',\n      'referenceString'\n    )(code)\n  }\n\n  /**\n   * In a reference (full), after `]`.\n   *\n   * ```markdown\n   * > | [a][b] d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFullAfter(code) {\n    return self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n      )\n    )\n      ? ok(code)\n      : nok(code)\n  }\n\n  /**\n   * In reference (full) that was missing.\n   *\n   * ```markdown\n   * > | [a][b d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFullMissing(code) {\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeReferenceCollapsed(effects, ok, nok) {\n  return referenceCollapsedStart\n\n  /**\n   * In reference (collapsed), at `[`.\n   *\n   * > \uD83D\uDC49 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceCollapsedStart(code) {\n    // We only attempt a collapsed label if there\u2019s a `[`.\n\n    effects.enter('reference')\n    effects.enter('referenceMarker')\n    effects.consume(code)\n    effects.exit('referenceMarker')\n    return referenceCollapsedOpen\n  }\n\n  /**\n   * In reference (collapsed), at `]`.\n   *\n   * > \uD83D\uDC49 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] d\n   *         ^\n   * ```\n   *\n   *  @type {State}\n   */\n  function referenceCollapsedOpen(code) {\n    if (code === 93) {\n      effects.enter('referenceMarker')\n      effects.consume(code)\n      effects.exit('referenceMarker')\n      effects.exit('reference')\n      return ok\n    }\n    return nok(code)\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {labelEnd} from './label-end.js'\n\n/** @type {Construct} */\nexport const labelStartImage = {\n  name: 'labelStartImage',\n  tokenize: tokenizeLabelStartImage,\n  resolveAll: labelEnd.resolveAll\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * Start of label (image) start.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('labelImage')\n    effects.enter('labelImageMarker')\n    effects.consume(code)\n    effects.exit('labelImageMarker')\n    return open\n  }\n\n  /**\n   * After `!`, at `[`.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 91) {\n      effects.enter('labelMarker')\n      effects.consume(code)\n      effects.exit('labelMarker')\n      effects.exit('labelImage')\n      return after\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `![`.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *         ^\n   * ```\n   *\n   * This is needed in because, when GFM footnotes are enabled, images never\n   * form when started with a `^`.\n   * Instead, links form:\n   *\n   * ```markdown\n   * ![^a](b)\n   *\n   * ![^a][b]\n   *\n   * [b]: c\n   * ```\n   *\n   * ```html\n   * <p>!<a href=\\\"b\\\">^a</a></p>\n   * <p>!<a href=\\\"c\\\">^a</a></p>\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // To do: use a new field to do this, this is still needed for\n    // `micromark-extension-gfm-footnote`, but the `label-start-link`\n    // behavior isn\u2019t.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {labelEnd} from './label-end.js'\n\n/** @type {Construct} */\nexport const labelStartLink = {\n  name: 'labelStartLink',\n  tokenize: tokenizeLabelStartLink,\n  resolveAll: labelEnd.resolveAll\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * Start of label (link) start.\n   *\n   * ```markdown\n   * > | a [b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('labelLink')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelLink')\n    return after\n  }\n\n  /** @type {State} */\n  function after(code) {\n    // To do: this isn\u2019t needed in `micromark-extension-gfm-footnote`,\n    // remove.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {Construct} */\nexport const lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLineEnding(effects, ok) {\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, ok, 'linePrefix')\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  let size = 0\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * Start of thematic break.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('thematicBreak')\n    // To do: parse indent like `markdown-rs`.\n    return before(code)\n  }\n\n  /**\n   * After optional whitespace, at marker.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    marker = code\n    return atBreak(code)\n  }\n\n  /**\n   * After something, before something else.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter('thematicBreakSequence')\n      return sequence(code)\n    }\n    if (size >= 3 && (code === null || markdownLineEnding(code))) {\n      effects.exit('thematicBreak')\n      return ok(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * In sequence.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      size++\n      return sequence\n    }\n    effects.exit('thematicBreakSequence')\n    return markdownSpace(code)\n      ? factorySpace(effects, atBreak, 'whitespace')(code)\n      : atBreak(code)\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').ContainerState} ContainerState\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {asciiDigit, markdownSpace} from 'micromark-util-character'\nimport {blankLine} from './blank-line.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/** @type {Construct} */\nexport const list = {\n  name: 'list',\n  tokenize: tokenizeListStart,\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd\n}\n\n/** @type {Construct} */\nconst listItemPrefixWhitespaceConstruct = {\n  tokenize: tokenizeListItemPrefixWhitespace,\n  partial: true\n}\n\n/** @type {Construct} */\nconst indentConstruct = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n\n// To do: `markdown-rs` parses list items on their own and later stitches them\n// together.\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeListStart(effects, ok, nok) {\n  const self = this\n  const tail = self.events[self.events.length - 1]\n  let initialSize =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let size = 0\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    const kind =\n      self.containerState.type ||\n      (code === 42 || code === 43 || code === 45\n        ? 'listUnordered'\n        : 'listOrdered')\n    if (\n      kind === 'listUnordered'\n        ? !self.containerState.marker || code === self.containerState.marker\n        : asciiDigit(code)\n    ) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind\n        effects.enter(kind, {\n          _container: true\n        })\n      }\n      if (kind === 'listUnordered') {\n        effects.enter('listItemPrefix')\n        return code === 42 || code === 45\n          ? effects.check(thematicBreak, nok, atMarker)(code)\n          : atMarker(code)\n      }\n      if (!self.interrupt || code === 49) {\n        effects.enter('listItemPrefix')\n        effects.enter('listItemValue')\n        return inside(code)\n      }\n    }\n    return nok(code)\n  }\n\n  /** @type {State} */\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code)\n      return inside\n    }\n    if (\n      (!self.interrupt || size < 2) &&\n      (self.containerState.marker\n        ? code === self.containerState.marker\n        : code === 41 || code === 46)\n    ) {\n      effects.exit('listItemValue')\n      return atMarker(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * @type {State}\n   **/\n  function atMarker(code) {\n    effects.enter('listItemMarker')\n    effects.consume(code)\n    effects.exit('listItemMarker')\n    self.containerState.marker = self.containerState.marker || code\n    return effects.check(\n      blankLine,\n      // Can\u2019t be empty when interrupting.\n      self.interrupt ? nok : onBlank,\n      effects.attempt(\n        listItemPrefixWhitespaceConstruct,\n        endOfPrefix,\n        otherPrefix\n      )\n    )\n  }\n\n  /** @type {State} */\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true\n    initialSize++\n    return endOfPrefix(code)\n  }\n\n  /** @type {State} */\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter('listItemPrefixWhitespace')\n      effects.consume(code)\n      effects.exit('listItemPrefixWhitespace')\n      return endOfPrefix\n    }\n    return nok(code)\n  }\n\n  /** @type {State} */\n  function endOfPrefix(code) {\n    self.containerState.size =\n      initialSize +\n      self.sliceSerialize(effects.exit('listItemPrefix'), true).length\n    return ok(code)\n  }\n}\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeListContinuation(effects, ok, nok) {\n  const self = this\n  self.containerState._closeFlow = undefined\n  return effects.check(blankLine, onBlank, notBlank)\n\n  /** @type {State} */\n  function onBlank(code) {\n    self.containerState.furtherBlankLines =\n      self.containerState.furtherBlankLines ||\n      self.containerState.initialBlankLine\n\n    // We have a blank line.\n    // Still, try to consume at most the items size.\n    return factorySpace(\n      effects,\n      ok,\n      'listItemIndent',\n      self.containerState.size + 1\n    )(code)\n  }\n\n  /** @type {State} */\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = undefined\n      self.containerState.initialBlankLine = undefined\n      return notInCurrentItem(code)\n    }\n    self.containerState.furtherBlankLines = undefined\n    self.containerState.initialBlankLine = undefined\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code)\n  }\n\n  /** @type {State} */\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true\n    // As we\u2019re closing flow, we\u2019re no longer interrupting.\n    self.interrupt = undefined\n    // Always populated by defaults.\n\n    return factorySpace(\n      effects,\n      effects.attempt(list, ok, nok),\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )(code)\n  }\n}\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemIndent',\n    self.containerState.size + 1\n  )\n\n  /** @type {State} */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'listItemIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === self.containerState.size\n      ? ok(code)\n      : nok(code)\n  }\n}\n\n/**\n * @type {Exiter}\n * @this {TokenizeContext}\n */\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type)\n}\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  const self = this\n\n  // Always populated by defaults.\n\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemPrefixWhitespace',\n    self.parser.constructs.disable.null.includes('codeIndented')\n      ? undefined\n      : 4 + 1\n  )\n\n  /** @type {State} */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return !markdownSpace(code) &&\n      tail &&\n      tail[1].type === 'listItemPrefixWhitespace'\n      ? ok(code)\n      : nok(code)\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const setextUnderline = {\n  name: 'setextUnderline',\n  tokenize: tokenizeSetextUnderline,\n  resolveTo: resolveToSetextUnderline\n}\n\n/** @type {Resolver} */\nfunction resolveToSetextUnderline(events, context) {\n  // To do: resolve like `markdown-rs`.\n  let index = events.length\n  /** @type {number | undefined} */\n  let content\n  /** @type {number | undefined} */\n  let text\n  /** @type {number | undefined} */\n  let definition\n\n  // Find the opening of the content.\n  // It\u2019ll always exist: we don\u2019t tokenize if it isn\u2019t there.\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === 'content') {\n        content = index\n        break\n      }\n      if (events[index][1].type === 'paragraph') {\n        text = index\n      }\n    }\n    // Exit\n    else {\n      if (events[index][1].type === 'content') {\n        // Remove the content end (if needed we\u2019ll add it later)\n        events.splice(index, 1)\n      }\n      if (!definition && events[index][1].type === 'definition') {\n        definition = index\n      }\n    }\n  }\n  const heading = {\n    type: 'setextHeading',\n    start: Object.assign({}, events[text][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n\n  // Change the paragraph to setext heading text.\n  events[text][1].type = 'setextHeadingText'\n\n  // If we have definitions in the content, we\u2019ll keep on having content,\n  // but we need move it.\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context])\n    events.splice(definition + 1, 0, ['exit', events[content][1], context])\n    events[content][1].end = Object.assign({}, events[definition][1].end)\n  } else {\n    events[content][1] = heading\n  }\n\n  // Add the heading exit at the end.\n  events.push(['exit', heading, context])\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  const self = this\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * At start of heading (setext) underline.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    let index = self.events.length\n    /** @type {boolean | undefined} */\n    let paragraph\n    // Find an opening.\n    while (index--) {\n      // Skip enter/exit of line ending, line prefix, and content.\n      // We can now either have a definition or a paragraph.\n      if (\n        self.events[index][1].type !== 'lineEnding' &&\n        self.events[index][1].type !== 'linePrefix' &&\n        self.events[index][1].type !== 'content'\n      ) {\n        paragraph = self.events[index][1].type === 'paragraph'\n        break\n      }\n    }\n\n    // To do: handle lazy/pierce like `markdown-rs`.\n    // To do: parse indent like `markdown-rs`.\n    if (!self.parser.lazy[self.now().line] && (self.interrupt || paragraph)) {\n      effects.enter('setextHeadingLine')\n      marker = code\n      return before(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * After optional whitespace, at `-` or `=`.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter('setextHeadingLineSequence')\n    return inside(code)\n  }\n\n  /**\n   * In sequence.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return inside\n    }\n    effects.exit('setextHeadingLineSequence')\n    return markdownSpace(code)\n      ? factorySpace(effects, after, 'lineSuffix')(code)\n      : after(code)\n  }\n\n  /**\n   * After sequence, after optional whitespace.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('setextHeadingLine')\n      return ok(code)\n    }\n    return nok(code)\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\nimport {blankLine, content} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {InitialConstruct} */\nexport const flow = {\n  tokenize: initializeFlow\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Initializer}\n */\nfunction initializeFlow(effects) {\n  const self = this\n  const initial = effects.attempt(\n    // Try to parse a blank line.\n    blankLine,\n    atBlankEnding,\n    // Try to parse initial flow (essentially, only code).\n    effects.attempt(\n      this.parser.constructs.flowInitial,\n      afterConstruct,\n      factorySpace(\n        effects,\n        effects.attempt(\n          this.parser.constructs.flow,\n          afterConstruct,\n          effects.attempt(content, afterConstruct)\n        ),\n        'linePrefix'\n      )\n    )\n  )\n  return initial\n\n  /** @type {State} */\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    self.currentConstruct = undefined\n    return initial\n  }\n\n  /** @type {State} */\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    self.currentConstruct = undefined\n    return initial\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\nexport const resolver = {\n  resolveAll: createResolver()\n}\nexport const string = initializeFactory('string')\nexport const text = initializeFactory('text')\n\n/**\n * @param {'string' | 'text'} field\n * @returns {InitialConstruct}\n */\nfunction initializeFactory(field) {\n  return {\n    tokenize: initializeText,\n    resolveAll: createResolver(\n      field === 'text' ? resolveAllLineSuffixes : undefined\n    )\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Initializer}\n   */\n  function initializeText(effects) {\n    const self = this\n    const constructs = this.parser.constructs[field]\n    const text = effects.attempt(constructs, start, notText)\n    return start\n\n    /** @type {State} */\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code)\n    }\n\n    /** @type {State} */\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code)\n        return\n      }\n      effects.enter('data')\n      effects.consume(code)\n      return data\n    }\n\n    /** @type {State} */\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit('data')\n        return text(code)\n      }\n\n      // Data.\n      effects.consume(code)\n      return data\n    }\n\n    /**\n     * @param {Code} code\n     * @returns {boolean}\n     */\n    function atBreak(code) {\n      if (code === null) {\n        return true\n      }\n      const list = constructs[code]\n      let index = -1\n      if (list) {\n        // Always populated by defaults.\n\n        while (++index < list.length) {\n          const item = list[index]\n          if (!item.previous || item.previous.call(self, self.previous)) {\n            return true\n          }\n        }\n      }\n      return false\n    }\n  }\n}\n\n/**\n * @param {Resolver | undefined} [extraResolver]\n * @returns {Resolver}\n */\nfunction createResolver(extraResolver) {\n  return resolveAllText\n\n  /** @type {Resolver} */\n  function resolveAllText(events, context) {\n    let index = -1\n    /** @type {number | undefined} */\n    let enter\n\n    // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === 'data') {\n          enter = index\n          index++\n        }\n      } else if (!events[index] || events[index][1].type !== 'data') {\n        // Don\u2019t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end\n          events.splice(enter + 2, index - enter - 2)\n          index = enter + 2\n        }\n        enter = undefined\n      }\n    }\n    return extraResolver ? extraResolver(events, context) : events\n  }\n}\n\n/**\n * A rather ugly set of instructions which again looks at chunks in the input\n * stream.\n * The reason to do this here is that it is *much* faster to parse in reverse.\n * And that we can\u2019t hook into `null` to split the line suffix before an EOF.\n * To do: figure out if we can make this into a clean utility, or even in core.\n * As it will be useful for GFMs literal autolink extension (and maybe even\n * tables?)\n *\n * @type {Resolver}\n */\nfunction resolveAllLineSuffixes(events, context) {\n  let eventIndex = 0 // Skip first.\n\n  while (++eventIndex <= events.length) {\n    if (\n      (eventIndex === events.length ||\n        events[eventIndex][1].type === 'lineEnding') &&\n      events[eventIndex - 1][1].type === 'data'\n    ) {\n      const data = events[eventIndex - 1][1]\n      const chunks = context.sliceStream(data)\n      let index = chunks.length\n      let bufferIndex = -1\n      let size = 0\n      /** @type {boolean | undefined} */\n      let tabs\n      while (index--) {\n        const chunk = chunks[index]\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++\n            bufferIndex--\n          }\n          if (bufferIndex) break\n          bufferIndex = -1\n        }\n        // Number\n        else if (chunk === -2) {\n          tabs = true\n          size++\n        } else if (chunk === -1) {\n          // Empty\n        } else {\n          // Replacement character, exit.\n          index++\n          break\n        }\n      }\n      if (size) {\n        const token = {\n          type:\n            eventIndex === events.length || tabs || size < 2\n              ? 'lineSuffix'\n              : 'hardBreakTrailing',\n          start: {\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size,\n            _index: data.start._index + index,\n            _bufferIndex: index\n              ? bufferIndex\n              : data.start._bufferIndex + bufferIndex\n          },\n          end: Object.assign({}, data.end)\n        }\n        data.end = Object.assign({}, token.start)\n        if (data.start.offset === data.end.offset) {\n          Object.assign(data, token)\n        } else {\n          events.splice(\n            eventIndex,\n            0,\n            ['enter', token, context],\n            ['exit', token, context]\n          )\n          eventIndex += 2\n        }\n      }\n      eventIndex++\n    }\n  }\n  return events\n}\n", "/**\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenType} TokenType\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\n/**\n * @callback Restore\n * @returns {void}\n *\n * @typedef Info\n * @property {Restore} restore\n * @property {number} from\n *\n * @callback ReturnHandle\n *   Handle a successful run.\n * @param {Construct} construct\n * @param {Info} info\n * @returns {void}\n */\n\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {resolveAll} from 'micromark-util-resolve-all'\n/**\n * Create a tokenizer.\n * Tokenizers deal with one type of data (e.g., containers, flow, text).\n * The parser is the object dealing with it all.\n * `initialize` works like other constructs, except that only its `tokenize`\n * function is used, in which case it doesn\u2019t receive an `ok` or `nok`.\n * `from` can be given to set the point before the first character, although\n * when further lines are indented, they must be set with `defineSkip`.\n *\n * @param {ParseContext} parser\n * @param {InitialConstruct} initialize\n * @param {Omit<Point, '_bufferIndex' | '_index'> | undefined} [from]\n * @returns {TokenizeContext}\n */\nexport function createTokenizer(parser, initialize, from) {\n  /** @type {Point} */\n  let point = Object.assign(\n    from\n      ? Object.assign({}, from)\n      : {\n          line: 1,\n          column: 1,\n          offset: 0\n        },\n    {\n      _index: 0,\n      _bufferIndex: -1\n    }\n  )\n  /** @type {Record<string, number>} */\n  const columnStart = {}\n  /** @type {Array<Construct>} */\n  const resolveAllConstructs = []\n  /** @type {Array<Chunk>} */\n  let chunks = []\n  /** @type {Array<Token>} */\n  let stack = []\n  /** @type {boolean | undefined} */\n  let consumed = true\n\n  /**\n   * Tools used for tokenizing.\n   *\n   * @type {Effects}\n   */\n  const effects = {\n    consume,\n    enter,\n    exit,\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    })\n  }\n\n  /**\n   * State and tools for resolving and serializing.\n   *\n   * @type {TokenizeContext}\n   */\n  const context = {\n    previous: null,\n    code: null,\n    containerState: {},\n    events: [],\n    parser,\n    sliceStream,\n    sliceSerialize,\n    now,\n    defineSkip,\n    write\n  }\n\n  /**\n   * The state function.\n   *\n   * @type {State | void}\n   */\n  let state = initialize.tokenize.call(context, effects)\n\n  /**\n   * Track which character we expect to be consumed, to catch bugs.\n   *\n   * @type {Code}\n   */\n  let expectedCode\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize)\n  }\n  return context\n\n  /** @type {TokenizeContext['write']} */\n  function write(slice) {\n    chunks = push(chunks, slice)\n    main()\n\n    // Exit if we\u2019re not done, resolve might change stuff.\n    if (chunks[chunks.length - 1] !== null) {\n      return []\n    }\n    addResult(initialize, 0)\n\n    // Otherwise, resolve, and exit.\n    context.events = resolveAll(resolveAllConstructs, context.events, context)\n    return context.events\n  }\n\n  //\n  // Tools.\n  //\n\n  /** @type {TokenizeContext['sliceSerialize']} */\n  function sliceSerialize(token, expandTabs) {\n    return serializeChunks(sliceStream(token), expandTabs)\n  }\n\n  /** @type {TokenizeContext['sliceStream']} */\n  function sliceStream(token) {\n    return sliceChunks(chunks, token)\n  }\n\n  /** @type {TokenizeContext['now']} */\n  function now() {\n    // This is a hot path, so we clone manually instead of `Object.assign({}, point)`\n    const {line, column, offset, _index, _bufferIndex} = point\n    return {\n      line,\n      column,\n      offset,\n      _index,\n      _bufferIndex\n    }\n  }\n\n  /** @type {TokenizeContext['defineSkip']} */\n  function defineSkip(value) {\n    columnStart[value.line] = value.column\n    accountForPotentialSkip()\n  }\n\n  //\n  // State management.\n  //\n\n  /**\n   * Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n   * `consume`).\n   * Here is where we walk through the chunks, which either include strings of\n   * several characters, or numerical character codes.\n   * The reason to do this in a loop instead of a call is so the stack can\n   * drain.\n   *\n   * @returns {void}\n   */\n  function main() {\n    /** @type {number} */\n    let chunkIndex\n    while (point._index < chunks.length) {\n      const chunk = chunks[point._index]\n\n      // If we\u2019re in a buffer chunk, loop through it.\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0\n        }\n        while (\n          point._index === chunkIndex &&\n          point._bufferIndex < chunk.length\n        ) {\n          go(chunk.charCodeAt(point._bufferIndex))\n        }\n      } else {\n        go(chunk)\n      }\n    }\n  }\n\n  /**\n   * Deal with one code.\n   *\n   * @param {Code} code\n   * @returns {void}\n   */\n  function go(code) {\n    consumed = undefined\n    expectedCode = code\n    state = state(code)\n  }\n\n  /** @type {Effects['consume']} */\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++\n      point.column = 1\n      point.offset += code === -3 ? 2 : 1\n      accountForPotentialSkip()\n    } else if (code !== -1) {\n      point.column++\n      point.offset++\n    }\n\n    // Not in a string chunk.\n    if (point._bufferIndex < 0) {\n      point._index++\n    } else {\n      point._bufferIndex++\n\n      // At end of string chunk.\n      // @ts-expect-error Points w/ non-negative `_bufferIndex` reference\n      // strings.\n      if (point._bufferIndex === chunks[point._index].length) {\n        point._bufferIndex = -1\n        point._index++\n      }\n    }\n\n    // Expose the previous character.\n    context.previous = code\n\n    // Mark as consumed.\n    consumed = true\n  }\n\n  /** @type {Effects['enter']} */\n  function enter(type, fields) {\n    /** @type {Token} */\n    // @ts-expect-error Patch instead of assign required fields to help GC.\n    const token = fields || {}\n    token.type = type\n    token.start = now()\n    context.events.push(['enter', token, context])\n    stack.push(token)\n    return token\n  }\n\n  /** @type {Effects['exit']} */\n  function exit(type) {\n    const token = stack.pop()\n    token.end = now()\n    context.events.push(['exit', token, context])\n    return token\n  }\n\n  /**\n   * Use results.\n   *\n   * @type {ReturnHandle}\n   */\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from)\n  }\n\n  /**\n   * Discard results.\n   *\n   * @type {ReturnHandle}\n   */\n  function onsuccessfulcheck(_, info) {\n    info.restore()\n  }\n\n  /**\n   * Factory to attempt/check/interrupt.\n   *\n   * @param {ReturnHandle} onreturn\n   * @param {{interrupt?: boolean | undefined} | undefined} [fields]\n   */\n  function constructFactory(onreturn, fields) {\n    return hook\n\n    /**\n     * Handle either an object mapping codes to constructs, a list of\n     * constructs, or a single construct.\n     *\n     * @param {Array<Construct> | Construct | ConstructRecord} constructs\n     * @param {State} returnState\n     * @param {State | undefined} [bogusState]\n     * @returns {State}\n     */\n    function hook(constructs, returnState, bogusState) {\n      /** @type {Array<Construct>} */\n      let listOfConstructs\n      /** @type {number} */\n      let constructIndex\n      /** @type {Construct} */\n      let currentConstruct\n      /** @type {Info} */\n      let info\n      return Array.isArray(constructs) /* c8 ignore next 1 */\n        ? handleListOfConstructs(constructs)\n        : 'tokenize' in constructs\n        ? // @ts-expect-error Looks like a construct.\n          handleListOfConstructs([constructs])\n        : handleMapOfConstructs(constructs)\n\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ConstructRecord} map\n       * @returns {State}\n       */\n      function handleMapOfConstructs(map) {\n        return start\n\n        /** @type {State} */\n        function start(code) {\n          const def = code !== null && map[code]\n          const all = code !== null && map.null\n          const list = [\n            // To do: add more extension tests.\n            /* c8 ignore next 2 */\n            ...(Array.isArray(def) ? def : def ? [def] : []),\n            ...(Array.isArray(all) ? all : all ? [all] : [])\n          ]\n          return handleListOfConstructs(list)(code)\n        }\n      }\n\n      /**\n       * Handle a list of construct.\n       *\n       * @param {Array<Construct>} list\n       * @returns {State}\n       */\n      function handleListOfConstructs(list) {\n        listOfConstructs = list\n        constructIndex = 0\n        if (list.length === 0) {\n          return bogusState\n        }\n        return handleConstruct(list[constructIndex])\n      }\n\n      /**\n       * Handle a single construct.\n       *\n       * @param {Construct} construct\n       * @returns {State}\n       */\n      function handleConstruct(construct) {\n        return start\n\n        /** @type {State} */\n        function start(code) {\n          // To do: not needed to store if there is no bogus state, probably?\n          // Currently doesn\u2019t work because `inspect` in document does a check\n          // w/o a bogus, which doesn\u2019t make sense. But it does seem to help perf\n          // by not storing.\n          info = store()\n          currentConstruct = construct\n          if (!construct.partial) {\n            context.currentConstruct = construct\n          }\n\n          // Always populated by defaults.\n\n          if (\n            construct.name &&\n            context.parser.constructs.disable.null.includes(construct.name)\n          ) {\n            return nok(code)\n          }\n          return construct.tokenize.call(\n            // If we do have fields, create an object w/ `context` as its\n            // prototype.\n            // This allows a \u201Clive binding\u201D, which is needed for `interrupt`.\n            fields ? Object.assign(Object.create(context), fields) : context,\n            effects,\n            ok,\n            nok\n          )(code)\n        }\n      }\n\n      /** @type {State} */\n      function ok(code) {\n        consumed = true\n        onreturn(currentConstruct, info)\n        return returnState\n      }\n\n      /** @type {State} */\n      function nok(code) {\n        consumed = true\n        info.restore()\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex])\n        }\n        return bogusState\n      }\n    }\n  }\n\n  /**\n   * @param {Construct} construct\n   * @param {number} from\n   * @returns {void}\n   */\n  function addResult(construct, from) {\n    if (construct.resolveAll && !resolveAllConstructs.includes(construct)) {\n      resolveAllConstructs.push(construct)\n    }\n    if (construct.resolve) {\n      splice(\n        context.events,\n        from,\n        context.events.length - from,\n        construct.resolve(context.events.slice(from), context)\n      )\n    }\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context)\n    }\n  }\n\n  /**\n   * Store state.\n   *\n   * @returns {Info}\n   */\n  function store() {\n    const startPoint = now()\n    const startPrevious = context.previous\n    const startCurrentConstruct = context.currentConstruct\n    const startEventsIndex = context.events.length\n    const startStack = Array.from(stack)\n    return {\n      restore,\n      from: startEventsIndex\n    }\n\n    /**\n     * Restore state.\n     *\n     * @returns {void}\n     */\n    function restore() {\n      point = startPoint\n      context.previous = startPrevious\n      context.currentConstruct = startCurrentConstruct\n      context.events.length = startEventsIndex\n      stack = startStack\n      accountForPotentialSkip()\n    }\n  }\n\n  /**\n   * Move the current point a bit forward in the line when it\u2019s on a column\n   * skip.\n   *\n   * @returns {void}\n   */\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line]\n      point.offset += columnStart[point.line] - 1\n    }\n  }\n}\n\n/**\n * Get the chunks from a slice of chunks in the range of a token.\n *\n * @param {Array<Chunk>} chunks\n * @param {Pick<Token, 'end' | 'start'>} token\n * @returns {Array<Chunk>}\n */\nfunction sliceChunks(chunks, token) {\n  const startIndex = token.start._index\n  const startBufferIndex = token.start._bufferIndex\n  const endIndex = token.end._index\n  const endBufferIndex = token.end._bufferIndex\n  /** @type {Array<Chunk>} */\n  let view\n  if (startIndex === endIndex) {\n    // @ts-expect-error `_bufferIndex` is used on string chunks.\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)]\n  } else {\n    view = chunks.slice(startIndex, endIndex)\n    if (startBufferIndex > -1) {\n      const head = view[0]\n      if (typeof head === 'string') {\n        view[0] = head.slice(startBufferIndex)\n      } else {\n        view.shift()\n      }\n    }\n    if (endBufferIndex > 0) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view.push(chunks[endIndex].slice(0, endBufferIndex))\n    }\n  }\n  return view\n}\n\n/**\n * Get the string value of a slice of chunks.\n *\n * @param {Array<Chunk>} chunks\n * @param {boolean | undefined} [expandTabs=false]\n * @returns {string}\n */\nfunction serializeChunks(chunks, expandTabs) {\n  let index = -1\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {boolean | undefined} */\n  let atTab\n  while (++index < chunks.length) {\n    const chunk = chunks[index]\n    /** @type {string} */\n    let value\n    if (typeof chunk === 'string') {\n      value = chunk\n    } else\n      switch (chunk) {\n        case -5: {\n          value = '\\r'\n          break\n        }\n        case -4: {\n          value = '\\n'\n          break\n        }\n        case -3: {\n          value = '\\r' + '\\n'\n          break\n        }\n        case -2: {\n          value = expandTabs ? ' ' : '\\t'\n          break\n        }\n        case -1: {\n          if (!expandTabs && atTab) continue\n          value = ' '\n          break\n        }\n        default: {\n          // Currently only replacement character.\n          value = String.fromCharCode(chunk)\n        }\n      }\n    atTab = chunk === -2\n    result.push(value)\n  }\n  return result.join('')\n}\n", "/**\n * @typedef {import('micromark-util-types').Extension} Extension\n */\n\nimport {\n  attention,\n  autolink,\n  blockQuote,\n  characterEscape,\n  characterReference,\n  codeFenced,\n  codeIndented,\n  codeText,\n  definition,\n  hardBreakEscape,\n  headingAtx,\n  htmlFlow,\n  htmlText,\n  labelEnd,\n  labelStartImage,\n  labelStartLink,\n  lineEnding,\n  list,\n  setextUnderline,\n  thematicBreak\n} from 'micromark-core-commonmark'\nimport {resolver as resolveText} from './initialize/text.js'\n\n/** @satisfies {Extension['document']} */\nexport const document = {\n  [42]: list,\n  [43]: list,\n  [45]: list,\n  [48]: list,\n  [49]: list,\n  [50]: list,\n  [51]: list,\n  [52]: list,\n  [53]: list,\n  [54]: list,\n  [55]: list,\n  [56]: list,\n  [57]: list,\n  [62]: blockQuote\n}\n\n/** @satisfies {Extension['contentInitial']} */\nexport const contentInitial = {\n  [91]: definition\n}\n\n/** @satisfies {Extension['flowInitial']} */\nexport const flowInitial = {\n  [-2]: codeIndented,\n  [-1]: codeIndented,\n  [32]: codeIndented\n}\n\n/** @satisfies {Extension['flow']} */\nexport const flow = {\n  [35]: headingAtx,\n  [42]: thematicBreak,\n  [45]: [setextUnderline, thematicBreak],\n  [60]: htmlFlow,\n  [61]: setextUnderline,\n  [95]: thematicBreak,\n  [96]: codeFenced,\n  [126]: codeFenced\n}\n\n/** @satisfies {Extension['string']} */\nexport const string = {\n  [38]: characterReference,\n  [92]: characterEscape\n}\n\n/** @satisfies {Extension['text']} */\nexport const text = {\n  [-5]: lineEnding,\n  [-4]: lineEnding,\n  [-3]: lineEnding,\n  [33]: labelStartImage,\n  [38]: characterReference,\n  [42]: attention,\n  [60]: [autolink, htmlText],\n  [91]: labelStartLink,\n  [92]: [hardBreakEscape, characterEscape],\n  [93]: labelEnd,\n  [95]: attention,\n  [96]: codeText\n}\n\n/** @satisfies {Extension['insideSpan']} */\nexport const insideSpan = {\n  null: [attention, resolveText]\n}\n\n/** @satisfies {Extension['attentionMarkers']} */\nexport const attentionMarkers = {\n  null: [42, 95]\n}\n\n/** @satisfies {Extension['disable']} */\nexport const disable = {\n  null: []\n}\n", "/**\n * @typedef {import('micromark-util-types').Create} Create\n * @typedef {import('micromark-util-types').FullNormalizedExtension} FullNormalizedExtension\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n */\n\nimport {combineExtensions} from 'micromark-util-combine-extensions'\nimport {content} from './initialize/content.js'\nimport {document} from './initialize/document.js'\nimport {flow} from './initialize/flow.js'\nimport {text, string} from './initialize/text.js'\nimport {createTokenizer} from './create-tokenizer.js'\nimport * as defaultConstructs from './constructs.js'\n\n/**\n * @param {ParseOptions | null | undefined} [options]\n * @returns {ParseContext}\n */\nexport function parse(options) {\n  const settings = options || {}\n  const constructs =\n    /** @type {FullNormalizedExtension} */\n    combineExtensions([defaultConstructs, ...(settings.extensions || [])])\n\n  /** @type {ParseContext} */\n  const parser = {\n    defined: [],\n    lazy: {},\n    constructs,\n    content: create(content),\n    document: create(document),\n    flow: create(flow),\n    string: create(string),\n    text: create(text)\n  }\n  return parser\n\n  /**\n   * @param {InitialConstruct} initial\n   */\n  function create(initial) {\n    return creator\n    /** @type {Create} */\n    function creator(from) {\n      return createTokenizer(parser, initial, from)\n    }\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Value} Value\n */\n\n/**\n * @callback Preprocessor\n * @param {Value} value\n * @param {Encoding | null | undefined} [encoding]\n * @param {boolean | null | undefined} [end=false]\n * @returns {Array<Chunk>}\n */\n\nconst search = /[\\0\\t\\n\\r]/g\n\n/**\n * @returns {Preprocessor}\n */\nexport function preprocess() {\n  let column = 1\n  let buffer = ''\n  /** @type {boolean | undefined} */\n  let start = true\n  /** @type {boolean | undefined} */\n  let atCarriageReturn\n  return preprocessor\n\n  /** @type {Preprocessor} */\n  function preprocessor(value, encoding, end) {\n    /** @type {Array<Chunk>} */\n    const chunks = []\n    /** @type {RegExpMatchArray | null} */\n    let match\n    /** @type {number} */\n    let next\n    /** @type {number} */\n    let startPosition\n    /** @type {number} */\n    let endPosition\n    /** @type {Code} */\n    let code\n\n    // @ts-expect-error `Buffer` does allow an encoding.\n    value = buffer + value.toString(encoding)\n    startPosition = 0\n    buffer = ''\n    if (start) {\n      // To do: `markdown-rs` actually parses BOMs (byte order mark).\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++\n      }\n      start = undefined\n    }\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition\n      match = search.exec(value)\n      endPosition =\n        match && match.index !== undefined ? match.index : value.length\n      code = value.charCodeAt(endPosition)\n      if (!match) {\n        buffer = value.slice(startPosition)\n        break\n      }\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3)\n        atCarriageReturn = undefined\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5)\n          atCarriageReturn = undefined\n        }\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition))\n          column += endPosition - startPosition\n        }\n        switch (code) {\n          case 0: {\n            chunks.push(65533)\n            column++\n            break\n          }\n          case 9: {\n            next = Math.ceil(column / 4) * 4\n            chunks.push(-2)\n            while (column++ < next) chunks.push(-1)\n            break\n          }\n          case 10: {\n            chunks.push(-4)\n            column = 1\n            break\n          }\n          default: {\n            atCarriageReturn = true\n            column = 1\n          }\n        }\n      }\n      startPosition = endPosition + 1\n    }\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5)\n      if (buffer) chunks.push(buffer)\n      chunks.push(null)\n    }\n    return chunks\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').Event} Event\n */\n\nimport {subtokenize} from 'micromark-util-subtokenize'\n\n/**\n * @param {Array<Event>} events\n * @returns {Array<Event>}\n */\nexport function postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n  return events\n}\n", "/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * Sort of like `String.fromCharCode(Number.parseInt(value, base))`, but makes\n * non-characters and control characters safe.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n *   Character.\n */\nexport function decodeNumericCharacterReference(value, base) {\n  const code = Number.parseInt(value, base)\n  if (\n    // C0 except for HT, LF, FF, CR, space.\n    code < 9 ||\n    code === 11 ||\n    (code > 13 && code < 32) ||\n    // Control character (DEL) of C0, and C1 controls.\n    (code > 126 && code < 160) ||\n    // Lone high surrogates and low surrogates.\n    (code > 55295 && code < 57344) ||\n    // Noncharacters.\n    (code > 64975 && code < 65008) /* eslint-disable no-bitwise */ ||\n    (code & 65535) === 65535 ||\n    (code & 65535) === 65534 /* eslint-enable no-bitwise */ ||\n    // Out of range\n    code > 1114111\n  ) {\n    return '\\uFFFD'\n  }\n  return String.fromCharCode(code)\n}\n", "import {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nconst characterEscapeOrReference =\n  /\\\\([!-/:-@[-`{-~])|&(#(?:\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi\n\n/**\n * Decode markdown strings (which occur in places such as fenced code info\n * strings, destinations, labels, and titles).\n *\n * The \u201Cstring\u201D content type allows character escapes and -references.\n * This decodes those.\n *\n * @param {string} value\n *   Value to decode.\n * @returns {string}\n *   Decoded value.\n */\nexport function decodeString(value) {\n  return value.replace(characterEscapeOrReference, decode)\n}\n\n/**\n * @param {string} $0\n * @param {string} $1\n * @param {string} $2\n * @returns {string}\n */\nfunction decode($0, $1, $2) {\n  if ($1) {\n    // Escape.\n    return $1\n  }\n\n  // Reference.\n  const head = $2.charCodeAt(0)\n  if (head === 35) {\n    const head = $2.charCodeAt(1)\n    const hex = head === 120 || head === 88\n    return decodeNumericCharacterReference($2.slice(hex ? 2 : 1), hex ? 16 : 10)\n  }\n  return decodeNamedCharacterReference($2) || $0\n}\n", "/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Serialize the positional info of a point, position (start and end points),\n * or node.\n *\n * @param {Node | NodeLike | Position | PositionLike | Point | PointLike | null | undefined} [value]\n *   Node, position, or point.\n * @returns {string}\n *   Pretty printed positional info of a node (`string`).\n *\n *   In the format of a range `ls:cs-le:ce` (when given `node` or `position`)\n *   or a point `l:c` (when given `point`), where `l` stands for line, `c` for\n *   column, `s` for `start`, and `e` for end.\n *   An empty string (`''`) is returned if the given value is neither `node`,\n *   `position`, nor `point`.\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point | PointLike | null | undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position | PositionLike | null | undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number | null | undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n", "/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Value} Value\n *\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist').Point} Point\n *\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').StaticPhrasingContent} StaticPhrasingContent\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Break} Break\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('mdast').Code} Code\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('mdast').HTML} HTML\n * @typedef {import('mdast').Image} Image\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').List} List\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('mdast').Text} Text\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('mdast').ReferenceType} ReferenceType\n * @typedef {import('../index.js').CompileData} CompileData\n */\n\n/**\n * @typedef {Root | Content} Node\n * @typedef {Extract<Node, UnistParent>} Parent\n *\n * @typedef {Omit<UnistParent, 'type' | 'children'> & {type: 'fragment', children: Array<PhrasingContent>}} Fragment\n */\n\n/**\n * @callback Transform\n *   Extra transform, to change the AST afterwards.\n * @param {Root} tree\n *   Tree to transform.\n * @returns {Root | undefined | null | void}\n *   New tree or nothing (in which case the current tree is used).\n *\n * @callback Handle\n *   Handle a token.\n * @param {CompileContext} this\n *   Context.\n * @param {Token} token\n *   Current token.\n * @returns {void}\n *   Nothing.\n *\n * @typedef {Record<string, Handle>} Handles\n *   Token types mapping to handles\n *\n * @callback OnEnterError\n *   Handle the case where the `right` token is open, but it is closed (by the\n *   `left` token) or because we reached the end of the document.\n * @param {Omit<CompileContext, 'sliceSerialize'>} this\n *   Context.\n * @param {Token | undefined} left\n *   Left token.\n * @param {Token} right\n *   Right token.\n * @returns {void}\n *   Nothing.\n *\n * @callback OnExitError\n *   Handle the case where the `right` token is open but it is closed by\n *   exiting the `left` token.\n * @param {Omit<CompileContext, 'sliceSerialize'>} this\n *   Context.\n * @param {Token} left\n *   Left token.\n * @param {Token} right\n *   Right token.\n * @returns {void}\n *   Nothing.\n *\n * @typedef {[Token, OnEnterError | undefined]} TokenTuple\n *   Open token on the stack, with an optional error handler for when\n *   that token isn\u2019t closed properly.\n */\n\n/**\n * @typedef Config\n *   Configuration.\n *\n *   We have our defaults, but extensions will add more.\n * @property {Array<string>} canContainEols\n *   Token types where line endings are used.\n * @property {Handles} enter\n *   Opening handles.\n * @property {Handles} exit\n *   Closing handles.\n * @property {Array<Transform>} transforms\n *   Tree transforms.\n *\n * @typedef {Partial<Config>} Extension\n *   Change how markdown tokens from micromark are turned into mdast.\n *\n * @typedef CompileContext\n *   mdast compiler context.\n * @property {Array<Node | Fragment>} stack\n *   Stack of nodes.\n * @property {Array<TokenTuple>} tokenStack\n *   Stack of tokens.\n * @property {<Key extends keyof CompileData>(key: Key) => CompileData[Key]} getData\n *   Get data from the key/value store.\n * @property {<Key extends keyof CompileData>(key: Key, value?: CompileData[Key]) => void} setData\n *   Set data into the key/value store.\n * @property {(this: CompileContext) => void} buffer\n *   Capture some of the output data.\n * @property {(this: CompileContext) => string} resume\n *   Stop capturing and access the output data.\n * @property {<Kind extends Node>(this: CompileContext, node: Kind, token: Token, onError?: OnEnterError) => Kind} enter\n *   Enter a token.\n * @property {(this: CompileContext, token: Token, onError?: OnExitError) => Node} exit\n *   Exit a token.\n * @property {TokenizeContext['sliceSerialize']} sliceSerialize\n *   Get the string value of a token.\n * @property {Config} config\n *   Configuration.\n *\n * @typedef FromMarkdownOptions\n *   Configuration for how to build mdast.\n * @property {Array<Extension | Array<Extension>> | null | undefined} [mdastExtensions]\n *   Extensions for this utility to change how tokens are turned into a tree.\n *\n * @typedef {ParseOptions & FromMarkdownOptions} Options\n *   Configuration.\n */\n\n// To do: micromark: create a registry of tokens?\n// To do: next major: don\u2019t return given `Node` from `enter`.\n// To do: next major: remove setter/getter.\n\nimport {toString} from 'mdast-util-to-string'\nimport {parse} from 'micromark/lib/parse.js'\nimport {preprocess} from 'micromark/lib/preprocess.js'\nimport {postprocess} from 'micromark/lib/postprocess.js'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nimport {decodeString} from 'micromark-util-decode-string'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {stringifyPosition} from 'unist-util-stringify-position'\nconst own = {}.hasOwnProperty\n\n/**\n * @param value\n *   Markdown to parse.\n * @param encoding\n *   Character encoding for when `value` is `Buffer`.\n * @param options\n *   Configuration.\n * @returns\n *   mdast tree.\n */\nexport const fromMarkdown =\n  /**\n   * @type {(\n   *   ((value: Value, encoding: Encoding, options?: Options | null | undefined) => Root) &\n   *   ((value: Value, options?: Options | null | undefined) => Root)\n   * )}\n   */\n\n  /**\n   * @param {Value} value\n   * @param {Encoding | Options | null | undefined} [encoding]\n   * @param {Options | null | undefined} [options]\n   * @returns {Root}\n   */\n  function (value, encoding, options) {\n    if (typeof encoding !== 'string') {\n      options = encoding\n      encoding = undefined\n    }\n    return compiler(options)(\n      postprocess(\n        parse(options).document().write(preprocess()(value, encoding, true))\n      )\n    )\n  }\n\n/**\n * Note this compiler only understand complete buffering, not streaming.\n *\n * @param {Options | null | undefined} [options]\n */\nfunction compiler(options) {\n  /** @type {Config} */\n  const config = {\n    transforms: [],\n    canContainEols: ['emphasis', 'fragment', 'heading', 'paragraph', 'strong'],\n    enter: {\n      autolink: opener(link),\n      autolinkProtocol: onenterdata,\n      autolinkEmail: onenterdata,\n      atxHeading: opener(heading),\n      blockQuote: opener(blockQuote),\n      characterEscape: onenterdata,\n      characterReference: onenterdata,\n      codeFenced: opener(codeFlow),\n      codeFencedFenceInfo: buffer,\n      codeFencedFenceMeta: buffer,\n      codeIndented: opener(codeFlow, buffer),\n      codeText: opener(codeText, buffer),\n      codeTextData: onenterdata,\n      data: onenterdata,\n      codeFlowValue: onenterdata,\n      definition: opener(definition),\n      definitionDestinationString: buffer,\n      definitionLabelString: buffer,\n      definitionTitleString: buffer,\n      emphasis: opener(emphasis),\n      hardBreakEscape: opener(hardBreak),\n      hardBreakTrailing: opener(hardBreak),\n      htmlFlow: opener(html, buffer),\n      htmlFlowData: onenterdata,\n      htmlText: opener(html, buffer),\n      htmlTextData: onenterdata,\n      image: opener(image),\n      label: buffer,\n      link: opener(link),\n      listItem: opener(listItem),\n      listItemValue: onenterlistitemvalue,\n      listOrdered: opener(list, onenterlistordered),\n      listUnordered: opener(list),\n      paragraph: opener(paragraph),\n      reference: onenterreference,\n      referenceString: buffer,\n      resourceDestinationString: buffer,\n      resourceTitleString: buffer,\n      setextHeading: opener(heading),\n      strong: opener(strong),\n      thematicBreak: opener(thematicBreak)\n    },\n    exit: {\n      atxHeading: closer(),\n      atxHeadingSequence: onexitatxheadingsequence,\n      autolink: closer(),\n      autolinkEmail: onexitautolinkemail,\n      autolinkProtocol: onexitautolinkprotocol,\n      blockQuote: closer(),\n      characterEscapeValue: onexitdata,\n      characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n      characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n      characterReferenceValue: onexitcharacterreferencevalue,\n      codeFenced: closer(onexitcodefenced),\n      codeFencedFence: onexitcodefencedfence,\n      codeFencedFenceInfo: onexitcodefencedfenceinfo,\n      codeFencedFenceMeta: onexitcodefencedfencemeta,\n      codeFlowValue: onexitdata,\n      codeIndented: closer(onexitcodeindented),\n      codeText: closer(onexitcodetext),\n      codeTextData: onexitdata,\n      data: onexitdata,\n      definition: closer(),\n      definitionDestinationString: onexitdefinitiondestinationstring,\n      definitionLabelString: onexitdefinitionlabelstring,\n      definitionTitleString: onexitdefinitiontitlestring,\n      emphasis: closer(),\n      hardBreakEscape: closer(onexithardbreak),\n      hardBreakTrailing: closer(onexithardbreak),\n      htmlFlow: closer(onexithtmlflow),\n      htmlFlowData: onexitdata,\n      htmlText: closer(onexithtmltext),\n      htmlTextData: onexitdata,\n      image: closer(onexitimage),\n      label: onexitlabel,\n      labelText: onexitlabeltext,\n      lineEnding: onexitlineending,\n      link: closer(onexitlink),\n      listItem: closer(),\n      listOrdered: closer(),\n      listUnordered: closer(),\n      paragraph: closer(),\n      referenceString: onexitreferencestring,\n      resourceDestinationString: onexitresourcedestinationstring,\n      resourceTitleString: onexitresourcetitlestring,\n      resource: onexitresource,\n      setextHeading: closer(onexitsetextheading),\n      setextHeadingLineSequence: onexitsetextheadinglinesequence,\n      setextHeadingText: onexitsetextheadingtext,\n      strong: closer(),\n      thematicBreak: closer()\n    }\n  }\n  configure(config, (options || {}).mdastExtensions || [])\n\n  /** @type {CompileData} */\n  const data = {}\n  return compile\n\n  /**\n   * Turn micromark events into an mdast tree.\n   *\n   * @param {Array<Event>} events\n   *   Events.\n   * @returns {Root}\n   *   mdast tree.\n   */\n  function compile(events) {\n    /** @type {Root} */\n    let tree = {\n      type: 'root',\n      children: []\n    }\n    /** @type {Omit<CompileContext, 'sliceSerialize'>} */\n    const context = {\n      stack: [tree],\n      tokenStack: [],\n      config,\n      enter,\n      exit,\n      buffer,\n      resume,\n      setData,\n      getData\n    }\n    /** @type {Array<number>} */\n    const listStack = []\n    let index = -1\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (\n        events[index][1].type === 'listOrdered' ||\n        events[index][1].type === 'listUnordered'\n      ) {\n        if (events[index][0] === 'enter') {\n          listStack.push(index)\n        } else {\n          const tail = listStack.pop()\n          index = prepareList(events, tail, index)\n        }\n      }\n    }\n    index = -1\n    while (++index < events.length) {\n      const handler = config[events[index][0]]\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(\n          Object.assign(\n            {\n              sliceSerialize: events[index][2].sliceSerialize\n            },\n            context\n          ),\n          events[index][1]\n        )\n      }\n    }\n\n    // Handle tokens still being open.\n    if (context.tokenStack.length > 0) {\n      const tail = context.tokenStack[context.tokenStack.length - 1]\n      const handler = tail[1] || defaultOnError\n      handler.call(context, undefined, tail[0])\n    }\n\n    // Figure out `root` position.\n    tree.position = {\n      start: point(\n        events.length > 0\n          ? events[0][1].start\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      ),\n      end: point(\n        events.length > 0\n          ? events[events.length - 2][1].end\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      )\n    }\n\n    // Call transforms.\n    index = -1\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree\n    }\n    return tree\n  }\n\n  /**\n   * @param {Array<Event>} events\n   * @param {number} start\n   * @param {number} length\n   * @returns {number}\n   */\n  function prepareList(events, start, length) {\n    let index = start - 1\n    let containerBalance = -1\n    let listSpread = false\n    /** @type {Token | undefined} */\n    let listItem\n    /** @type {number | undefined} */\n    let lineIndex\n    /** @type {number | undefined} */\n    let firstBlankLineIndex\n    /** @type {boolean | undefined} */\n    let atMarker\n    while (++index <= length) {\n      const event = events[index]\n      if (\n        event[1].type === 'listUnordered' ||\n        event[1].type === 'listOrdered' ||\n        event[1].type === 'blockQuote'\n      ) {\n        if (event[0] === 'enter') {\n          containerBalance++\n        } else {\n          containerBalance--\n        }\n        atMarker = undefined\n      } else if (event[1].type === 'lineEndingBlank') {\n        if (event[0] === 'enter') {\n          if (\n            listItem &&\n            !atMarker &&\n            !containerBalance &&\n            !firstBlankLineIndex\n          ) {\n            firstBlankLineIndex = index\n          }\n          atMarker = undefined\n        }\n      } else if (\n        event[1].type === 'linePrefix' ||\n        event[1].type === 'listItemValue' ||\n        event[1].type === 'listItemMarker' ||\n        event[1].type === 'listItemPrefix' ||\n        event[1].type === 'listItemPrefixWhitespace'\n      ) {\n        // Empty.\n      } else {\n        atMarker = undefined\n      }\n      if (\n        (!containerBalance &&\n          event[0] === 'enter' &&\n          event[1].type === 'listItemPrefix') ||\n        (containerBalance === -1 &&\n          event[0] === 'exit' &&\n          (event[1].type === 'listUnordered' ||\n            event[1].type === 'listOrdered'))\n      ) {\n        if (listItem) {\n          let tailIndex = index\n          lineIndex = undefined\n          while (tailIndex--) {\n            const tailEvent = events[tailIndex]\n            if (\n              tailEvent[1].type === 'lineEnding' ||\n              tailEvent[1].type === 'lineEndingBlank'\n            ) {\n              if (tailEvent[0] === 'exit') continue\n              if (lineIndex) {\n                events[lineIndex][1].type = 'lineEndingBlank'\n                listSpread = true\n              }\n              tailEvent[1].type = 'lineEnding'\n              lineIndex = tailIndex\n            } else if (\n              tailEvent[1].type === 'linePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefixWhitespace' ||\n              tailEvent[1].type === 'blockQuoteMarker' ||\n              tailEvent[1].type === 'listItemIndent'\n            ) {\n              // Empty\n            } else {\n              break\n            }\n          }\n          if (\n            firstBlankLineIndex &&\n            (!lineIndex || firstBlankLineIndex < lineIndex)\n          ) {\n            listItem._spread = true\n          }\n\n          // Fix position.\n          listItem.end = Object.assign(\n            {},\n            lineIndex ? events[lineIndex][1].start : event[1].end\n          )\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]])\n          index++\n          length++\n        }\n\n        // Create a new list item.\n        if (event[1].type === 'listItemPrefix') {\n          listItem = {\n            type: 'listItem',\n            _spread: false,\n            start: Object.assign({}, event[1].start),\n            // @ts-expect-error: we\u2019ll add `end` in a second.\n            end: undefined\n          }\n          // @ts-expect-error: `listItem` is most definitely defined, TS...\n          events.splice(index, 0, ['enter', listItem, event[2]])\n          index++\n          length++\n          firstBlankLineIndex = undefined\n          atMarker = true\n        }\n      }\n    }\n    events[start][1]._spread = listSpread\n    return length\n  }\n\n  /**\n   * Set data.\n   *\n   * @template {keyof CompileData} Key\n   *   Field type.\n   * @param {Key} key\n   *   Key of field.\n   * @param {CompileData[Key]} [value]\n   *   New value.\n   * @returns {void}\n   *   Nothing.\n   */\n  function setData(key, value) {\n    data[key] = value\n  }\n\n  /**\n   * Get data.\n   *\n   * @template {keyof CompileData} Key\n   *   Field type.\n   * @param {Key} key\n   *   Key of field.\n   * @returns {CompileData[Key]}\n   *   Value.\n   */\n  function getData(key) {\n    return data[key]\n  }\n\n  /**\n   * Create an opener handle.\n   *\n   * @param {(token: Token) => Node} create\n   *   Create a node.\n   * @param {Handle} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function opener(create, and) {\n    return open\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n    function open(token) {\n      enter.call(this, create(token), token)\n      if (and) and.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @returns {void}\n   */\n  function buffer() {\n    this.stack.push({\n      type: 'fragment',\n      children: []\n    })\n  }\n\n  /**\n   * @template {Node} Kind\n   *   Node type.\n   * @this {CompileContext}\n   *   Context.\n   * @param {Kind} node\n   *   Node to enter.\n   * @param {Token} token\n   *   Corresponding token.\n   * @param {OnEnterError | undefined} [errorHandler]\n   *   Handle the case where this token is open, but it is closed by something else.\n   * @returns {Kind}\n   *   The given node.\n   */\n  function enter(node, token, errorHandler) {\n    const parent = this.stack[this.stack.length - 1]\n    // @ts-expect-error: Assume `Node` can exist as a child of `parent`.\n    parent.children.push(node)\n    this.stack.push(node)\n    this.tokenStack.push([token, errorHandler])\n    // @ts-expect-error: `end` will be patched later.\n    node.position = {\n      start: point(token.start)\n    }\n    return node\n  }\n\n  /**\n   * Create a closer handle.\n   *\n   * @param {Handle} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function closer(and) {\n    return close\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n    function close(token) {\n      if (and) and.call(this, token)\n      exit.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   *   Context.\n   * @param {Token} token\n   *   Corresponding token.\n   * @param {OnExitError | undefined} [onExitError]\n   *   Handle the case where another token is open.\n   * @returns {Node}\n   *   The closed node.\n   */\n  function exit(token, onExitError) {\n    const node = this.stack.pop()\n    const open = this.tokenStack.pop()\n    if (!open) {\n      throw new Error(\n        'Cannot close `' +\n          token.type +\n          '` (' +\n          stringifyPosition({\n            start: token.start,\n            end: token.end\n          }) +\n          '): it\u2019s not open'\n      )\n    } else if (open[0].type !== token.type) {\n      if (onExitError) {\n        onExitError.call(this, token, open[0])\n      } else {\n        const handler = open[1] || defaultOnError\n        handler.call(this, token, open[0])\n      }\n    }\n    node.position.end = point(token.end)\n    return node\n  }\n\n  /**\n   * @this {CompileContext}\n   * @returns {string}\n   */\n  function resume() {\n    return toString(this.stack.pop())\n  }\n\n  //\n  // Handlers.\n  //\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistordered() {\n    setData('expectingFirstListItemValue', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistitemvalue(token) {\n    if (getData('expectingFirstListItemValue')) {\n      const ancestor = this.stack[this.stack.length - 2]\n      ancestor.start = Number.parseInt(this.sliceSerialize(token), 10)\n      setData('expectingFirstListItemValue')\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfenceinfo() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.lang = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfencemeta() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.meta = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (getData('flowCodeInside')) return\n    this.buffer()\n    setData('flowCodeInside', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefenced() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '')\n    setData('flowCodeInside')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodeindented() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data.replace(/(\\r?\\n|\\r)$/g, '')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitionlabelstring(token) {\n    const label = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiontitlestring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.title = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiondestinationstring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.url = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitatxheadingsequence(token) {\n    const node = this.stack[this.stack.length - 1]\n    if (!node.depth) {\n      const depth = this.sliceSerialize(token).length\n      node.depth = depth\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadingtext() {\n    setData('setextHeadingSlurpLineEnding', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadinglinesequence(token) {\n    const node = this.stack[this.stack.length - 1]\n    node.depth = this.sliceSerialize(token).charCodeAt(0) === 61 ? 1 : 2\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheading() {\n    setData('setextHeadingSlurpLineEnding')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterdata(token) {\n    const node = this.stack[this.stack.length - 1]\n    let tail = node.children[node.children.length - 1]\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text()\n      // @ts-expect-error: we\u2019ll add `end` later.\n      tail.position = {\n        start: point(token.start)\n      }\n      // @ts-expect-error: Assume `parent` accepts `text`.\n      node.children.push(tail)\n    }\n    this.stack.push(tail)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitdata(token) {\n    const tail = this.stack.pop()\n    tail.value += this.sliceSerialize(token)\n    tail.position.end = point(token.end)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlineending(token) {\n    const context = this.stack[this.stack.length - 1]\n    // If we\u2019re at a hard break, include the line ending in there.\n    if (getData('atHardBreak')) {\n      const tail = context.children[context.children.length - 1]\n      tail.position.end = point(token.end)\n      setData('atHardBreak')\n      return\n    }\n    if (\n      !getData('setextHeadingSlurpLineEnding') &&\n      config.canContainEols.includes(context.type)\n    ) {\n      onenterdata.call(this, token)\n      onexitdata.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithardbreak() {\n    setData('atHardBreak', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmlflow() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmltext() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcodetext() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlink() {\n    const node = this.stack[this.stack.length - 1]\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n    // To do: clean.\n    if (getData('inReference')) {\n      /** @type {ReferenceType} */\n      const referenceType = getData('referenceType') || 'shortcut'\n      node.type += 'Reference'\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType\n      // @ts-expect-error: mutate.\n      delete node.url\n      delete node.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier\n      // @ts-expect-error: mutate.\n      delete node.label\n    }\n    setData('referenceType')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitimage() {\n    const node = this.stack[this.stack.length - 1]\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n    // To do: clean.\n    if (getData('inReference')) {\n      /** @type {ReferenceType} */\n      const referenceType = getData('referenceType') || 'shortcut'\n      node.type += 'Reference'\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType\n      // @ts-expect-error: mutate.\n      delete node.url\n      delete node.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier\n      // @ts-expect-error: mutate.\n      delete node.label\n    }\n    setData('referenceType')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabeltext(token) {\n    const string = this.sliceSerialize(token)\n    const ancestor = this.stack[this.stack.length - 2]\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    ancestor.label = decodeString(string)\n    // @ts-expect-error: same as above.\n    ancestor.identifier = normalizeIdentifier(string).toLowerCase()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabel() {\n    const fragment = this.stack[this.stack.length - 1]\n    const value = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    // Assume a reference.\n    setData('inReference', true)\n    if (node.type === 'link') {\n      /** @type {Array<StaticPhrasingContent>} */\n      // @ts-expect-error: Assume static phrasing content.\n      const children = fragment.children\n      node.children = children\n    } else {\n      node.alt = value\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcedestinationstring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.url = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcetitlestring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.title = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresource() {\n    setData('inReference')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterreference() {\n    setData('referenceType', 'collapsed')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitreferencestring(token) {\n    const label = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    node.label = label\n    // @ts-expect-error: same as above.\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n    setData('referenceType', 'full')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcharacterreferencemarker(token) {\n    setData('characterReferenceType', token.type)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcharacterreferencevalue(token) {\n    const data = this.sliceSerialize(token)\n    const type = getData('characterReferenceType')\n    /** @type {string} */\n    let value\n    if (type) {\n      value = decodeNumericCharacterReference(\n        data,\n        type === 'characterReferenceMarkerNumeric' ? 10 : 16\n      )\n      setData('characterReferenceType')\n    } else {\n      const result = decodeNamedCharacterReference(data)\n      value = result\n    }\n    const tail = this.stack.pop()\n    tail.value += value\n    tail.position.end = point(token.end)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token)\n    const node = this.stack[this.stack.length - 1]\n    node.url = this.sliceSerialize(token)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token)\n    const node = this.stack[this.stack.length - 1]\n    node.url = 'mailto:' + this.sliceSerialize(token)\n  }\n\n  //\n  // Creaters.\n  //\n\n  /** @returns {Blockquote} */\n  function blockQuote() {\n    return {\n      type: 'blockquote',\n      children: []\n    }\n  }\n\n  /** @returns {Code} */\n  function codeFlow() {\n    return {\n      type: 'code',\n      lang: null,\n      meta: null,\n      value: ''\n    }\n  }\n\n  /** @returns {InlineCode} */\n  function codeText() {\n    return {\n      type: 'inlineCode',\n      value: ''\n    }\n  }\n\n  /** @returns {Definition} */\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    }\n  }\n\n  /** @returns {Emphasis} */\n  function emphasis() {\n    return {\n      type: 'emphasis',\n      children: []\n    }\n  }\n\n  /** @returns {Heading} */\n  function heading() {\n    // @ts-expect-error `depth` will be set later.\n    return {\n      type: 'heading',\n      depth: undefined,\n      children: []\n    }\n  }\n\n  /** @returns {Break} */\n  function hardBreak() {\n    return {\n      type: 'break'\n    }\n  }\n\n  /** @returns {HTML} */\n  function html() {\n    return {\n      type: 'html',\n      value: ''\n    }\n  }\n\n  /** @returns {Image} */\n  function image() {\n    return {\n      type: 'image',\n      title: null,\n      url: '',\n      alt: null\n    }\n  }\n\n  /** @returns {Link} */\n  function link() {\n    return {\n      type: 'link',\n      title: null,\n      url: '',\n      children: []\n    }\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {List}\n   */\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      spread: token._spread,\n      children: []\n    }\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {ListItem}\n   */\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      spread: token._spread,\n      checked: null,\n      children: []\n    }\n  }\n\n  /** @returns {Paragraph} */\n  function paragraph() {\n    return {\n      type: 'paragraph',\n      children: []\n    }\n  }\n\n  /** @returns {Strong} */\n  function strong() {\n    return {\n      type: 'strong',\n      children: []\n    }\n  }\n\n  /** @returns {Text} */\n  function text() {\n    return {\n      type: 'text',\n      value: ''\n    }\n  }\n\n  /** @returns {ThematicBreak} */\n  function thematicBreak() {\n    return {\n      type: 'thematicBreak'\n    }\n  }\n}\n\n/**\n * Copy a point-like value.\n *\n * @param {Point} d\n *   Point-like value.\n * @returns {Point}\n *   unist point.\n */\nfunction point(d) {\n  return {\n    line: d.line,\n    column: d.column,\n    offset: d.offset\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Array<Extension | Array<Extension>>} extensions\n * @returns {void}\n */\nfunction configure(combined, extensions) {\n  let index = -1\n  while (++index < extensions.length) {\n    const value = extensions[index]\n    if (Array.isArray(value)) {\n      configure(combined, value)\n    } else {\n      extension(combined, value)\n    }\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Extension} extension\n * @returns {void}\n */\nfunction extension(combined, extension) {\n  /** @type {keyof Extension} */\n  let key\n  for (key in extension) {\n    if (own.call(extension, key)) {\n      if (key === 'canContainEols') {\n        const right = extension[key]\n        if (right) {\n          combined[key].push(...right)\n        }\n      } else if (key === 'transforms') {\n        const right = extension[key]\n        if (right) {\n          combined[key].push(...right)\n        }\n      } else if (key === 'enter' || key === 'exit') {\n        const right = extension[key]\n        if (right) {\n          Object.assign(combined[key], right)\n        }\n      }\n    }\n  }\n}\n\n/** @type {OnEnterError} */\nfunction defaultOnError(left, right) {\n  if (left) {\n    throw new Error(\n      'Cannot close `' +\n        left.type +\n        '` (' +\n        stringifyPosition({\n          start: left.start,\n          end: left.end\n        }) +\n        '): a different token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is open'\n    )\n  } else {\n    throw new Error(\n      'Cannot close document, a token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is still open'\n    )\n  }\n}\n", "/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').Options} Options\n */\n\nimport {fromMarkdown} from 'mdast-util-from-markdown'\n\n/**\n * @this {import('unified').Processor}\n * @type {import('unified').Plugin<[Options?] | void[], string, Root>}\n */\nexport default function remarkParse(options) {\n  /** @type {import('unified').ParserFunction<Root>} */\n  const parser = (doc) => {\n    // Assume options.\n    const settings = /** @type {Options} */ (this.data('settings'))\n\n    return fromMarkdown(\n      doc,\n      Object.assign({}, settings, options, {\n        // Note: these options are not in the readme.\n        // The goal is for them to be set by plugins on `data` instead of being\n        // passed by users.\n        extensions: this.data('micromarkExtensions') || [],\n        mdastExtensions: this.data('fromMarkdownExtensions') || []\n      })\n    )\n  }\n\n  Object.assign(this, {Parser: parser})\n}\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `blockquote` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Blockquote} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function blockquote(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'blockquote',\n    properties: {},\n    children: state.wrap(state.all(node), true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').Break} Break\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `break` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Break} node\n *   mdast node.\n * @returns {Array<Element | Text>}\n *   hast element content.\n */\nexport function hardBreak(state, node) {\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'br', properties: {}, children: []}\n  state.patch(node, result)\n  return [state.applyData(node, result), {type: 'text', value: '\\n'}]\n}\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Code} Code\n * @typedef {import('../state.js').State} State\n\n */\n\n/**\n * Turn an mdast `code` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Code} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function code(state, node) {\n  const value = node.value ? node.value + '\\n' : ''\n  // To do: next major, use `node.lang` w/o regex, the splitting\u2019s been going\n  // on for years in remark now.\n  const lang = node.lang ? node.lang.match(/^[^ \\t]+(?=[ \\t]|$)/) : null\n  /** @type {Properties} */\n  const properties = {}\n\n  if (lang) {\n    properties.className = ['language-' + lang]\n  }\n\n  // Create `<code>`.\n  /** @type {Element} */\n  let result = {\n    type: 'element',\n    tagName: 'code',\n    properties,\n    children: [{type: 'text', value}]\n  }\n\n  if (node.meta) {\n    result.data = {meta: node.meta}\n  }\n\n  state.patch(node, result)\n  result = state.applyData(node, result)\n\n  // Create `<pre>`.\n  result = {type: 'element', tagName: 'pre', properties: {}, children: [result]}\n  state.patch(node, result)\n  return result\n}\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('../state.js').State} State\n\n */\n\n/**\n * Turn an mdast `delete` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Delete} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strikethrough(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'del',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `emphasis` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Emphasis} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function emphasis(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'em',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n", "// This module is generated by `script/`.\n//\n// CommonMark handles attention (emphasis, strong) markers based on what comes\n// before or after them.\n// One such difference is if those characters are Unicode punctuation.\n// This script is generated from the Unicode data.\n\n/**\n * Regular expression that matches a unicode punctuation character.\n */\nexport const unicodePunctuationRegex =\n  /[!-\\/:-@\\[-`\\{-~\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061D-\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1B7D\\u1B7E\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52-\\u2E5D\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]/\n", "/**\n * @typedef {import('micromark-util-types').Code} Code\n */\n\nimport {unicodePunctuationRegex} from './lib/unicode-punctuation-regex.js'\n\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiAlpha = regexCheck(/[A-Za-z]/)\n\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  )\n}\n\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiDigit = regexCheck(/\\d/)\n\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2\n}\n\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32)\n}\n\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32\n}\n\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodePunctuation = regexCheck(unicodePunctuationRegex)\n\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodeWhitespace = regexCheck(/\\s/)\n\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => boolean}\n */\nfunction regexCheck(regex) {\n  return check\n\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code\n   *   Character code.\n   * @returns {boolean}\n   *   Whether the character code matches the bound regex.\n   */\n  function check(code) {\n    return code !== null && regex.test(String.fromCharCode(code))\n  }\n}\n", "import {asciiAlphanumeric} from 'micromark-util-character'\nimport {encode} from 'micromark-util-encode'\n/**\n * Make a value safe for injection as a URL.\n *\n * This encodes unsafe characters with percent-encoding and skips already\n * encoded sequences (see `normalizeUri`).\n * Further unsafe characters are encoded as character references (see\n * `micromark-util-encode`).\n *\n * A regex of allowed protocols can be given, in which case the URL is\n * sanitized.\n * For example, `/^(https?|ircs?|mailto|xmpp)$/i` can be used for `a[href]`, or\n * `/^https?$/i` for `img[src]` (this is what `github.com` allows).\n * If the URL includes an unknown protocol (one not matched by `protocol`, such\n * as a dangerous example, `javascript:`), the value is ignored.\n *\n * @param {string | undefined} url\n *   URI to sanitize.\n * @param {RegExp | null | undefined} [protocol]\n *   Allowed protocols.\n * @returns {string}\n *   Sanitized URI.\n */\nexport function sanitizeUri(url, protocol) {\n  const value = encode(normalizeUri(url || ''))\n  if (!protocol) {\n    return value\n  }\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n  if (\n    // If there is no protocol, it\u2019s relative.\n    colon < 0 ||\n    // If the first colon is after a `?`, `#`, or `/`, it\u2019s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign) ||\n    // It is a protocol, it should be allowed.\n    protocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n  return ''\n}\n\n/**\n * Normalize a URL.\n *\n * Encode unsafe characters with percent-encoding, skipping already encoded\n * sequences.\n *\n * @param {string} value\n *   URI to normalize.\n * @returns {string}\n *   Normalized URI.\n */\nexport function normalizeUri(value) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n  let start = 0\n  let skip = 0\n  while (++index < value.length) {\n    const code = value.charCodeAt(index)\n    /** @type {string} */\n    let replace = ''\n\n    // A correct percent encoded value.\n    if (\n      code === 37 &&\n      asciiAlphanumeric(value.charCodeAt(index + 1)) &&\n      asciiAlphanumeric(value.charCodeAt(index + 2))\n    ) {\n      skip = 2\n    }\n    // ASCII.\n    else if (code < 128) {\n      if (!/[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(code))) {\n        replace = String.fromCharCode(code)\n      }\n    }\n    // Astral.\n    else if (code > 55295 && code < 57344) {\n      const next = value.charCodeAt(index + 1)\n\n      // A correct surrogate pair.\n      if (code < 56320 && next > 56319 && next < 57344) {\n        replace = String.fromCharCode(code, next)\n        skip = 1\n      }\n      // Lone surrogate.\n      else {\n        replace = '\\uFFFD'\n      }\n    }\n    // Unicode.\n    else {\n      replace = String.fromCharCode(code)\n    }\n    if (replace) {\n      result.push(value.slice(start, index), encodeURIComponent(replace))\n      start = index + skip + 1\n      replace = ''\n    }\n    if (skip) {\n      index += skip\n      skip = 0\n    }\n  }\n  return result.join('') + value.slice(start)\n}\n", "/**\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('hast').Element} Element\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `footnoteReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {FootnoteReference} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function footnoteReference(state, node) {\n  const id = String(node.identifier).toUpperCase()\n  const safeId = normalizeUri(id.toLowerCase())\n  const index = state.footnoteOrder.indexOf(id)\n  /** @type {number} */\n  let counter\n\n  if (index === -1) {\n    state.footnoteOrder.push(id)\n    state.footnoteCounts[id] = 1\n    counter = state.footnoteOrder.length\n  } else {\n    state.footnoteCounts[id]++\n    counter = index + 1\n  }\n\n  const reuseCounter = state.footnoteCounts[id]\n\n  /** @type {Element} */\n  const link = {\n    type: 'element',\n    tagName: 'a',\n    properties: {\n      href: '#' + state.clobberPrefix + 'fn-' + safeId,\n      id:\n        state.clobberPrefix +\n        'fnref-' +\n        safeId +\n        (reuseCounter > 1 ? '-' + reuseCounter : ''),\n      dataFootnoteRef: true,\n      ariaDescribedBy: ['footnote-label']\n    },\n    children: [{type: 'text', value: String(counter)}]\n  }\n  state.patch(node, link)\n\n  /** @type {Element} */\n  const sup = {\n    type: 'element',\n    tagName: 'sup',\n    properties: {},\n    children: [link]\n  }\n  state.patch(node, sup)\n  return state.applyData(node, sup)\n}\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Footnote} Footnote\n * @typedef {import('../state.js').State} State\n */\n\nimport {footnoteReference} from './footnote-reference.js'\n\n// To do: when both:\n// * <https://github.com/micromark/micromark-extension-footnote>\n// * <https://github.com/syntax-tree/mdast-util-footnote>\n// \u2026are archived, remove this (also from mdast).\n// These inline notes are not used in GFM.\n\n/**\n * Turn an mdast `footnote` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Footnote} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function footnote(state, node) {\n  const footnoteById = state.footnoteById\n  let no = 1\n\n  while (no in footnoteById) no++\n\n  const identifier = String(no)\n\n  footnoteById[identifier] = {\n    type: 'footnoteDefinition',\n    identifier,\n    children: [{type: 'paragraph', children: node.children}],\n    position: node.position\n  }\n\n  return footnoteReference(state, {\n    type: 'footnoteReference',\n    identifier,\n    position: node.position\n  })\n}\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `heading` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Heading} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function heading(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'h' + node.depth,\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').HTML} Html\n * @typedef {import('../state.js').State} State\n * @typedef {import('../../index.js').Raw} Raw\n */\n\n/**\n * Turn an mdast `html` node into hast (`raw` node in dangerous mode, otherwise\n * nothing).\n *\n * @param {State} state\n *   Info passed around.\n * @param {Html} node\n *   mdast node.\n * @returns {Raw | Element | null}\n *   hast node.\n */\nexport function html(state, node) {\n  if (state.dangerous) {\n    /** @type {Raw} */\n    const result = {type: 'raw', value: node.value}\n    state.patch(node, result)\n    return state.applyData(node, result)\n  }\n\n  // To do: next major: return `undefined`.\n  return null\n}\n", "/**\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Reference} Reference\n * @typedef {import('mdast').Root} Root\n *\n * @typedef {import('./state.js').State} State\n */\n\n/**\n * @typedef {Root | Content} Nodes\n * @typedef {Extract<Nodes, Reference>} References\n */\n\n// To do: next major: always return array.\n\n/**\n * Return the content of a reference without definition as plain text.\n *\n * @param {State} state\n *   Info passed around.\n * @param {References} node\n *   Reference node (image, link).\n * @returns {ElementContent | Array<ElementContent>}\n *   hast content.\n */\nexport function revert(state, node) {\n  const subtype = node.referenceType\n  let suffix = ']'\n\n  if (subtype === 'collapsed') {\n    suffix += '[]'\n  } else if (subtype === 'full') {\n    suffix += '[' + (node.label || node.identifier) + ']'\n  }\n\n  if (node.type === 'imageReference') {\n    return {type: 'text', value: '![' + node.alt + suffix}\n  }\n\n  const contents = state.all(node)\n  const head = contents[0]\n\n  if (head && head.type === 'text') {\n    head.value = '[' + head.value\n  } else {\n    contents.unshift({type: 'text', value: '['})\n  }\n\n  const tail = contents[contents.length - 1]\n\n  if (tail && tail.type === 'text') {\n    tail.value += suffix\n  } else {\n    contents.push({type: 'text', value: suffix})\n  }\n\n  return contents\n}\n", "/**\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `imageReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ImageReference} node\n *   mdast node.\n * @returns {ElementContent | Array<ElementContent>}\n *   hast node.\n */\nexport function imageReference(state, node) {\n  const def = state.definition(node.identifier)\n\n  if (!def) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(def.url || ''), alt: node.alt}\n\n  if (def.title !== null && def.title !== undefined) {\n    properties.title = def.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Image} Image\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `image` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Image} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function image(state, node) {\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(node.url)}\n\n  if (node.alt !== null && node.alt !== undefined) {\n    properties.alt = node.alt\n  }\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `inlineCode` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {InlineCode} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function inlineCode(state, node) {\n  /** @type {Text} */\n  const text = {type: 'text', value: node.value.replace(/\\r?\\n|\\r/g, ' ')}\n  state.patch(node, text)\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'code',\n    properties: {},\n    children: [text]\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `linkReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {LinkReference} node\n *   mdast node.\n * @returns {ElementContent | Array<ElementContent>}\n *   hast node.\n */\nexport function linkReference(state, node) {\n  const def = state.definition(node.identifier)\n\n  if (!def) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(def.url || '')}\n\n  if (def.title !== null && def.title !== undefined) {\n    properties.title = def.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Link} Link\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `link` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Link} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function link(state, node) {\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(node.url)}\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').Root} Root\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * @typedef {Root | Content} Nodes\n * @typedef {Extract<Nodes, Parent>} Parents\n */\n\n/**\n * Turn an mdast `listItem` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ListItem} node\n *   mdast node.\n * @param {Parents | null | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function listItem(state, node, parent) {\n  const results = state.all(node)\n  const loose = parent ? listLoose(parent) : listItemLoose(node)\n  /** @type {Properties} */\n  const properties = {}\n  /** @type {Array<ElementContent>} */\n  const children = []\n\n  if (typeof node.checked === 'boolean') {\n    const head = results[0]\n    /** @type {Element} */\n    let paragraph\n\n    if (head && head.type === 'element' && head.tagName === 'p') {\n      paragraph = head\n    } else {\n      paragraph = {type: 'element', tagName: 'p', properties: {}, children: []}\n      results.unshift(paragraph)\n    }\n\n    if (paragraph.children.length > 0) {\n      paragraph.children.unshift({type: 'text', value: ' '})\n    }\n\n    paragraph.children.unshift({\n      type: 'element',\n      tagName: 'input',\n      properties: {type: 'checkbox', checked: node.checked, disabled: true},\n      children: []\n    })\n\n    // According to github-markdown-css, this class hides bullet.\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\n    properties.className = ['task-list-item']\n  }\n\n  let index = -1\n\n  while (++index < results.length) {\n    const child = results[index]\n\n    // Add eols before nodes, except if this is a loose, first paragraph.\n    if (\n      loose ||\n      index !== 0 ||\n      child.type !== 'element' ||\n      child.tagName !== 'p'\n    ) {\n      children.push({type: 'text', value: '\\n'})\n    }\n\n    if (child.type === 'element' && child.tagName === 'p' && !loose) {\n      children.push(...child.children)\n    } else {\n      children.push(child)\n    }\n  }\n\n  const tail = results[results.length - 1]\n\n  // Add a final eol.\n  if (tail && (loose || tail.type !== 'element' || tail.tagName !== 'p')) {\n    children.push({type: 'text', value: '\\n'})\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'li', properties, children}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * @param {Parents} node\n * @return {Boolean}\n */\nfunction listLoose(node) {\n  let loose = false\n  if (node.type === 'list') {\n    loose = node.spread || false\n    const children = node.children\n    let index = -1\n\n    while (!loose && ++index < children.length) {\n      loose = listItemLoose(children[index])\n    }\n  }\n\n  return loose\n}\n\n/**\n * @param {ListItem} node\n * @return {Boolean}\n */\nfunction listItemLoose(node) {\n  const spread = node.spread\n\n  return spread === undefined || spread === null\n    ? node.children.length > 1\n    : spread\n}\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').List} List\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `list` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {List} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function list(state, node) {\n  /** @type {Properties} */\n  const properties = {}\n  const results = state.all(node)\n  let index = -1\n\n  if (typeof node.start === 'number' && node.start !== 1) {\n    properties.start = node.start\n  }\n\n  // Like GitHub, add a class for custom styling.\n  while (++index < results.length) {\n    const child = results[index]\n\n    if (\n      child.type === 'element' &&\n      child.tagName === 'li' &&\n      child.properties &&\n      Array.isArray(child.properties.className) &&\n      child.properties.className.includes('task-list-item')\n    ) {\n      properties.className = ['contains-task-list']\n      break\n    }\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: node.ordered ? 'ol' : 'ul',\n    properties,\n    children: state.wrap(results, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `paragraph` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Paragraph} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function paragraph(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'p',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n", "/**\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `root` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastRoot} node\n *   mdast node.\n * @returns {HastRoot | HastElement}\n *   hast node.\n */\nexport function root(state, node) {\n  /** @type {HastRoot} */\n  const result = {type: 'root', children: state.wrap(state.all(node))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `strong` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Strong} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strong(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'strong',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n", "/**\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Get the starting point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointStart = point('start')\n\n/**\n * Get the ending point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointEnd = point('end')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {NodeLike | Node | null | undefined} [node]\n *   Node.\n * @returns {Position}\n *   Position.\n */\nexport function position(node) {\n  return {start: pointStart(node), end: pointEnd(node)}\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'start' | 'end'} type\n *   Side.\n * @returns\n *   Getter.\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the point info of `node` at a bound side.\n   *\n   * @param {NodeLike | Node | null | undefined} [node]\n   * @returns {Point}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    // To do: next major: don\u2019t return points when invalid.\n    return {\n      // @ts-expect-error: in practice, null is allowed.\n      line: point.line || null,\n      // @ts-expect-error: in practice, null is allowed.\n      column: point.column || null,\n      // @ts-expect-error: in practice, null is allowed.\n      offset: point.offset > -1 ? point.offset : null\n    }\n  }\n}\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Table} Table\n * @typedef {import('../state.js').State} State\n */\n\nimport {pointStart, pointEnd} from 'unist-util-position'\n\n/**\n * Turn an mdast `table` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Table} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function table(state, node) {\n  const rows = state.all(node)\n  const firstRow = rows.shift()\n  /** @type {Array<Element>} */\n  const tableContent = []\n\n  if (firstRow) {\n    /** @type {Element} */\n    const head = {\n      type: 'element',\n      tagName: 'thead',\n      properties: {},\n      children: state.wrap([firstRow], true)\n    }\n    state.patch(node.children[0], head)\n    tableContent.push(head)\n  }\n\n  if (rows.length > 0) {\n    /** @type {Element} */\n    const body = {\n      type: 'element',\n      tagName: 'tbody',\n      properties: {},\n      children: state.wrap(rows, true)\n    }\n\n    const start = pointStart(node.children[1])\n    const end = pointEnd(node.children[node.children.length - 1])\n    if (start.line && end.line) body.position = {start, end}\n    tableContent.push(body)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'table',\n    properties: {},\n    children: state.wrap(tableContent, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n", "/**\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').TableRow} TableRow\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * @typedef {Root | Content} Nodes\n * @typedef {Extract<Nodes, Parent>} Parents\n */\n\n/**\n * Turn an mdast `tableRow` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableRow} node\n *   mdast node.\n * @param {Parents | null | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function tableRow(state, node, parent) {\n  const siblings = parent ? parent.children : undefined\n  // Generate a body row when without parent.\n  const rowIndex = siblings ? siblings.indexOf(node) : 1\n  const tagName = rowIndex === 0 ? 'th' : 'td'\n  const align = parent && parent.type === 'table' ? parent.align : undefined\n  const length = align ? align.length : node.children.length\n  let cellIndex = -1\n  /** @type {Array<ElementContent>} */\n  const cells = []\n\n  while (++cellIndex < length) {\n    // Note: can also be undefined.\n    const cell = node.children[cellIndex]\n    /** @type {Properties} */\n    const properties = {}\n    const alignValue = align ? align[cellIndex] : undefined\n\n    if (alignValue) {\n      properties.align = alignValue\n    }\n\n    /** @type {Element} */\n    let result = {type: 'element', tagName, properties, children: []}\n\n    if (cell) {\n      result.children = state.all(cell)\n      state.patch(cell, result)\n      result = state.applyData(node, result)\n    }\n\n    cells.push(result)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'tr',\n    properties: {},\n    children: state.wrap(cells, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `tableCell` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableCell} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function tableCell(state, node) {\n  // Note: this function is normally not called: see `table-row` for how rows\n  // and their cells are compiled.\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'td', // Assume body cell.\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n", "const tab = 9 /* `\\t` */\nconst space = 32 /* ` ` */\n\n/**\n * Remove initial and final spaces and tabs at the line breaks in `value`.\n * Does not trim initial and final spaces and tabs of the value itself.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Trimmed value.\n */\nexport function trimLines(value) {\n  const source = String(value)\n  const search = /\\r?\\n|\\r/g\n  let match = search.exec(source)\n  let last = 0\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (match) {\n    lines.push(\n      trimLine(source.slice(last, match.index), last > 0, true),\n      match[0]\n    )\n\n    last = match.index + match[0].length\n    match = search.exec(source)\n  }\n\n  lines.push(trimLine(source.slice(last), last > 0, false))\n\n  return lines.join('')\n}\n\n/**\n * @param {string} value\n *   Line to trim.\n * @param {boolean} start\n *   Whether to trim the start of the line.\n * @param {boolean} end\n *   Whether to trim the end of the line.\n * @returns {string}\n *   Trimmed line.\n */\nfunction trimLine(value, start, end) {\n  let startIndex = 0\n  let endIndex = value.length\n\n  if (start) {\n    let code = value.codePointAt(startIndex)\n\n    while (code === tab || code === space) {\n      startIndex++\n      code = value.codePointAt(startIndex)\n    }\n  }\n\n  if (end) {\n    let code = value.codePointAt(endIndex - 1)\n\n    while (code === tab || code === space) {\n      endIndex--\n      code = value.codePointAt(endIndex - 1)\n    }\n  }\n\n  return endIndex > startIndex ? value.slice(startIndex, endIndex) : ''\n}\n", "/**\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').Text} HastText\n * @typedef {import('mdast').Text} MdastText\n * @typedef {import('../state.js').State} State\n */\n\nimport {trimLines} from 'trim-lines'\n\n/**\n * Turn an mdast `text` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastText} node\n *   mdast node.\n * @returns {HastText | HastElement}\n *   hast node.\n */\nexport function text(state, node) {\n  /** @type {HastText} */\n  const result = {type: 'text', value: trimLines(String(node.value))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `thematicBreak` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ThematicBreak} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function thematicBreak(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'hr',\n    properties: {},\n    children: []\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n", "import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {strikethrough} from './delete.js'\nimport {emphasis} from './emphasis.js'\nimport {footnoteReference} from './footnote-reference.js'\nimport {footnote} from './footnote.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {imageReference} from './image-reference.js'\nimport {image} from './image.js'\nimport {inlineCode} from './inline-code.js'\nimport {linkReference} from './link-reference.js'\nimport {link} from './link.js'\nimport {listItem} from './list-item.js'\nimport {list} from './list.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {table} from './table.js'\nimport {tableRow} from './table-row.js'\nimport {tableCell} from './table-cell.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/**\n * Default handlers for nodes.\n */\nexport const handlers = {\n  blockquote,\n  break: hardBreak,\n  code,\n  delete: strikethrough,\n  emphasis,\n  footnoteReference,\n  footnote,\n  heading,\n  html,\n  imageReference,\n  image,\n  inlineCode,\n  linkReference,\n  link,\n  listItem,\n  list,\n  paragraph,\n  root,\n  strong,\n  table,\n  tableCell,\n  tableRow,\n  text,\n  thematicBreak,\n  toml: ignore,\n  yaml: ignore,\n  definition: ignore,\n  footnoteDefinition: ignore\n}\n\n// Return nothing for nodes that are ignored.\nfunction ignore() {\n  // To do: next major: return `undefined`.\n  return null\n}\n", "/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @typedef {Record<string, unknown>} Props\n * @typedef {null | undefined | string | Props | TestFunctionAnything | Array<string | Props | TestFunctionAnything>} Test\n *   Check for an arbitrary node, unaware of TypeScript inferral.\n *\n * @callback TestFunctionAnything\n *   Check if a node passes a test, unaware of TypeScript inferral.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | null | undefined} [index]\n *   The node\u2019s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node\u2019s parent.\n * @returns {boolean | void}\n *   Whether this node passes the test.\n */\n\n/**\n * @template {Node} Kind\n *   Node type.\n * @typedef {Kind['type'] | Partial<Kind> | TestFunctionPredicate<Kind> | Array<Kind['type'] | Partial<Kind> | TestFunctionPredicate<Kind>>} PredicateTest\n *   Check for a node that can be inferred by TypeScript.\n */\n\n/**\n * Check if a node passes a certain test.\n *\n * @template {Node} Kind\n *   Node type.\n * @callback TestFunctionPredicate\n *   Complex test function for a node that can be inferred by TypeScript.\n * @param {Node} node\n *   A node.\n * @param {number | null | undefined} [index]\n *   The node\u2019s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node\u2019s parent.\n * @returns {node is Kind}\n *   Whether this node passes the test.\n */\n\n/**\n * @callback AssertAnything\n *   Check that an arbitrary value is a node, unaware of TypeScript inferral.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node\u2019s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node\u2019s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n */\n\n/**\n * Check if a node is a node and passes a certain node test.\n *\n * @template {Node} Kind\n *   Node type.\n * @callback AssertPredicate\n *   Check that an arbitrary value is a specific node, aware of TypeScript.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node\u2019s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node\u2019s parent.\n * @returns {node is Kind}\n *   Whether this is a node and passes a test.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param node\n *   Thing to check, typically `Node`.\n * @param test\n *   A check for a specific node.\n * @param index\n *   The node\u2019s position in its parent.\n * @param parent\n *   The node\u2019s parent.\n * @returns\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  /**\n   * @type {(\n   *   (() => false) &\n   *   (<Kind extends Node = Node>(node: unknown, test: PredicateTest<Kind>, index: number, parent: Parent, context?: unknown) => node is Kind) &\n   *   (<Kind extends Node = Node>(node: unknown, test: PredicateTest<Kind>, index?: null | undefined, parent?: null | undefined, context?: unknown) => node is Kind) &\n   *   ((node: unknown, test: Test, index: number, parent: Parent, context?: unknown) => boolean) &\n   *   ((node: unknown, test?: Test, index?: null | undefined, parent?: null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function is(node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      // @ts-expect-error Looks like a node.\n      return node && node.type && typeof node.type === 'string'\n        ? Boolean(check.call(context, node, index, parent))\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you\u2019re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns\n *   An assertion.\n */\nexport const convert =\n  /**\n   * @type {(\n   *   (<Kind extends Node>(test: PredicateTest<Kind>) => AssertPredicate<Kind>) &\n   *   ((test?: Test) => AssertAnything)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {AssertAnything}\n     */\n    function (test) {\n      if (test === undefined || test === null) {\n        return ok\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<string | Props | TestFunctionAnything>} tests\n * @returns {AssertAnything}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<AssertAnything>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @param {Array<unknown>} parameters\n   * @returns {boolean}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].call(this, ...parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {AssertAnything}\n */\nfunction propsFactory(check) {\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      // @ts-expect-error: hush, it sure works as an index.\n      if (node[key] !== check[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {AssertAnything}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunctionAnything} check\n * @returns {AssertAnything}\n */\nfunction castFactory(check) {\n  return assertion\n\n  /**\n   * @this {unknown}\n   * @param {unknown} node\n   * @param {Array<unknown>} parameters\n   * @returns {boolean}\n   */\n  function assertion(node, ...parameters) {\n    return Boolean(\n      node &&\n        typeof node === 'object' &&\n        'type' in node &&\n        // @ts-expect-error: fine.\n        Boolean(check.call(this, node, ...parameters))\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n", "/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n */\n\n/**\n * @typedef {boolean | 'skip'} Action\n *   Union of the action types.\n *\n * @typedef {number} Index\n *   Move to the sibling at `index` next (after node itself is completely\n *   traversed).\n *\n *   Useful if mutating the tree, such as removing the node the visitor is\n *   currently on, or any of its previous siblings.\n *   Results less than 0 or greater than or equal to `children.length` stop\n *   traversing the parent.\n *\n * @typedef {[(Action | null | undefined | void)?, (Index | null | undefined)?]} ActionTuple\n *   List with one or two values, the first an action, the second an index.\n *\n * @typedef {Action | ActionTuple | Index | null | undefined | void} VisitorResult\n *   Any value that can be returned from a visitor.\n */\n\n/**\n * @template {Node} [Visited=Node]\n *   Visited node type.\n * @template {Parent} [Ancestor=Parent]\n *   Ancestor type.\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform the parent of node (the last of `ancestors`).\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of an ancestor still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Array<Ancestor>} ancestors\n *   Ancestors of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   Tree type.\n * @template {Test} [Check=string]\n *   Test type.\n * @typedef {Visitor<import('./complex-types.js').Matches<import('./complex-types.js').InclusiveDescendant<Tree>, Check>, Extract<import('./complex-types.js').InclusiveDescendant<Tree>, Parent>>} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parents`.\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from './color.js'\n\n/**\n * Continue traversing as normal.\n */\nexport const CONTINUE = true\n\n/**\n * Stop traversing immediately.\n */\nexport const EXIT = false\n\n/**\n * Do not traverse this node\u2019s children.\n */\nexport const SKIP = 'skip'\n\n/**\n * Visit nodes, with ancestral information.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @param tree\n *   Tree to traverse.\n * @param test\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Handle each node.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns\n *   Nothing.\n */\nexport const visitParents =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: BuildVisitor<Tree, Check>, reverse?: boolean | null | undefined) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: BuildVisitor<Tree>, reverse?: boolean | null | undefined) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {Visitor<Node>} visitor\n     * @param {boolean | null | undefined} [reverse]\n     * @returns {void}\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        // @ts-expect-error no visitor given, so `visitor` is test.\n        visitor = test\n        test = null\n      }\n\n      const is = convert(test)\n      const step = reverse ? -1 : 1\n\n      factory(tree, undefined, [])()\n\n      /**\n       * @param {Node} node\n       * @param {number | undefined} index\n       * @param {Array<Parent>} parents\n       */\n      function factory(node, index, parents) {\n        /** @type {Record<string, unknown>} */\n        // @ts-expect-error: hush\n        const value = node && typeof node === 'object' ? node : {}\n\n        if (typeof value.type === 'string') {\n          const name =\n            // `hast`\n            typeof value.tagName === 'string'\n              ? value.tagName\n              : // `xast`\n              typeof value.name === 'string'\n              ? value.name\n              : undefined\n\n          Object.defineProperty(visit, 'name', {\n            value:\n              'node (' + color(node.type + (name ? '<' + name + '>' : '')) + ')'\n          })\n        }\n\n        return visit\n\n        function visit() {\n          /** @type {ActionTuple} */\n          let result = []\n          /** @type {ActionTuple} */\n          let subresult\n          /** @type {number} */\n          let offset\n          /** @type {Array<Parent>} */\n          let grandparents\n\n          if (!test || is(node, index, parents[parents.length - 1] || null)) {\n            result = toResult(visitor(node, parents))\n\n            if (result[0] === EXIT) {\n              return result\n            }\n          }\n\n          // @ts-expect-error looks like a parent.\n          if (node.children && result[0] !== SKIP) {\n            // @ts-expect-error looks like a parent.\n            offset = (reverse ? node.children.length : -1) + step\n            // @ts-expect-error looks like a parent.\n            grandparents = parents.concat(node)\n\n            // @ts-expect-error looks like a parent.\n            while (offset > -1 && offset < node.children.length) {\n              // @ts-expect-error looks like a parent.\n              subresult = factory(node.children[offset], offset, grandparents)()\n\n              if (subresult[0] === EXIT) {\n                return subresult\n              }\n\n              offset =\n                typeof subresult[1] === 'number' ? subresult[1] : offset + step\n            }\n          }\n\n          return result\n        }\n      }\n    }\n  )\n\n/**\n * Turn a return value into a clean result.\n *\n * @param {VisitorResult} value\n *   Valid return values from visitors.\n * @returns {ActionTuple}\n *   Clean result.\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return [value]\n}\n", "/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * Check if `Child` can be a child of `Ancestor`.\n *\n * Returns the ancestor when `Child` can be a child of `Ancestor`, or returns\n * `never`.\n *\n * @template {Node} Ancestor\n *   Node type.\n * @template {Node} Child\n *   Node type.\n * @typedef {(\n *   Ancestor extends Parent\n *     ? Child extends Ancestor['children'][number]\n *       ? Ancestor\n *       : never\n *     : never\n * )} ParentsOf\n */\n\n/**\n * @template {Node} [Visited=Node]\n *   Visited node type.\n * @template {Parent} [Ancestor=Parent]\n *   Ancestor type.\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends Node ? number | null : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends Node ? Ancestor | null : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n */\n\n/**\n * Build a typed `Visitor` function from a node and all possible parents.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} Visited\n *   Node type.\n * @template {Parent} Ancestor\n *   Parent type.\n * @typedef {Visitor<Visited, ParentsOf<Ancestor, Visited>>} BuildVisitorFromMatch\n */\n\n/**\n * Build a typed `Visitor` function from a list of descendants and a test.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     import('unist-util-visit-parents/complex-types.js').Matches<Descendant, Check>,\n *     Extract<Descendant, Parent>\n *   >\n * )} BuildVisitorFromDescendants\n */\n\n/**\n * Build a typed `Visitor` function from a tree and a test.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} [Tree=Node]\n *   Node type.\n * @template {Test} [Check=string]\n *   Test type.\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     import('unist-util-visit-parents/complex-types.js').InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @param tree\n *   Tree to traverse.\n * @param test\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Handle each node.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns\n *   Nothing.\n */\nexport const visit =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: BuildVisitor<Tree, Check>, reverse?: boolean | null | undefined) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: BuildVisitor<Tree>, reverse?: boolean | null | undefined) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {Visitor} visitor\n     * @param {boolean | null | undefined} [reverse]\n     * @returns {void}\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        visitor = test\n        test = null\n      }\n\n      visitParents(tree, test, overload, reverse)\n\n      /**\n       * @param {Node} node\n       * @param {Array<Parent>} parents\n       */\n      function overload(node, parents) {\n        const parent = parents[parents.length - 1]\n        return visitor(\n          node,\n          parent ? parent.children.indexOf(node) : null,\n          parent\n        )\n      }\n    }\n  )\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n", "/**\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef NodeLike\n * @property {PositionLike | null | undefined} [position]\n */\n\n/**\n * Check if `node` is generated.\n *\n * @param {NodeLike | null | undefined} [node]\n *   Node to check.\n * @returns {boolean}\n *   Whether `node` is generated (does not have positional info).\n */\nexport function generated(node) {\n  return (\n    !node ||\n    !node.position ||\n    !node.position.start ||\n    !node.position.start.line ||\n    !node.position.start.column ||\n    !node.position.end ||\n    !node.position.end.line ||\n    !node.position.end.column\n  )\n}\n", "/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * Check if `Child` can be a child of `Ancestor`.\n *\n * Returns the ancestor when `Child` can be a child of `Ancestor`, or returns\n * `never`.\n *\n * @template {Node} Ancestor\n *   Node type.\n * @template {Node} Child\n *   Node type.\n * @typedef {(\n *   Ancestor extends Parent\n *     ? Child extends Ancestor['children'][number]\n *       ? Ancestor\n *       : never\n *     : never\n * )} ParentsOf\n */\n\n/**\n * @template {Node} [Visited=Node]\n *   Visited node type.\n * @template {Parent} [Ancestor=Parent]\n *   Ancestor type.\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends Node ? number | null : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends Node ? Ancestor | null : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n */\n\n/**\n * Build a typed `Visitor` function from a node and all possible parents.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} Visited\n *   Node type.\n * @template {Parent} Ancestor\n *   Parent type.\n * @typedef {Visitor<Visited, ParentsOf<Ancestor, Visited>>} BuildVisitorFromMatch\n */\n\n/**\n * Build a typed `Visitor` function from a list of descendants and a test.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     import('unist-util-visit-parents/complex-types.js').Matches<Descendant, Check>,\n *     Extract<Descendant, Parent>\n *   >\n * )} BuildVisitorFromDescendants\n */\n\n/**\n * Build a typed `Visitor` function from a tree and a test.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} [Tree=Node]\n *   Node type.\n * @template {Test} [Check=string]\n *   Test type.\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     import('unist-util-visit-parents/complex-types.js').InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @param tree\n *   Tree to traverse.\n * @param test\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Handle each node.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns\n *   Nothing.\n */\nexport const visit =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: BuildVisitor<Tree, Check>, reverse?: boolean | null | undefined) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: BuildVisitor<Tree>, reverse?: boolean | null | undefined) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {Visitor} visitor\n     * @param {boolean | null | undefined} [reverse]\n     * @returns {void}\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        visitor = test\n        test = null\n      }\n\n      visitParents(tree, test, overload, reverse)\n\n      /**\n       * @param {Node} node\n       * @param {Array<Parent>} parents\n       */\n      function overload(node, parents) {\n        const parent = parents[parents.length - 1]\n        return visitor(\n          node,\n          parent ? parent.children.indexOf(node) : null,\n          parent\n        )\n      }\n    }\n  )\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n", "/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Definition} Definition\n */\n\n/**\n * @typedef {Root | Content} Node\n *\n * @callback GetDefinition\n *   Get a definition by identifier.\n * @param {string | null | undefined} [identifier]\n *   Identifier of definition.\n * @returns {Definition | null}\n *   Definition corresponding to `identifier` or `null`.\n */\n\nimport {visit} from 'unist-util-visit'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Find definitions in `tree`.\n *\n * Uses CommonMark precedence, which means that earlier definitions are\n * preferred over duplicate later definitions.\n *\n * @param {Node} tree\n *   Tree to check.\n * @returns {GetDefinition}\n *   Getter.\n */\nexport function definitions(tree) {\n  /** @type {Record<string, Definition>} */\n  const cache = Object.create(null)\n\n  if (!tree || !tree.type) {\n    throw new Error('mdast-util-definitions expected node')\n  }\n\n  visit(tree, 'definition', (definition) => {\n    const id = clean(definition.identifier)\n    if (id && !own.call(cache, id)) {\n      cache[id] = definition\n    }\n  })\n\n  return definition\n\n  /** @type {GetDefinition} */\n  function definition(identifier) {\n    const id = clean(identifier)\n    // To do: next major: return `undefined` when not found.\n    return id && own.call(cache, id) ? cache[id] : null\n  }\n}\n\n/**\n * @param {string | null | undefined} [value]\n * @returns {string}\n */\nfunction clean(value) {\n  return String(value || '').toUpperCase()\n}\n", "/**\n * @typedef {import('hast').Content} HastContent\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').ElementContent} HastElementContent\n * @typedef {import('hast').Properties} HastProperties\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('hast').Text} HastText\n *\n * @typedef {import('mdast').Content} MdastContent\n * @typedef {import('mdast').Definition} MdastDefinition\n * @typedef {import('mdast').FootnoteDefinition} MdastFootnoteDefinition\n * @typedef {import('mdast').Parent} MdastParent\n * @typedef {import('mdast').Root} MdastRoot\n */\n\n/**\n * @typedef {HastRoot | HastContent} HastNodes\n * @typedef {MdastRoot | MdastContent} MdastNodes\n * @typedef {Extract<MdastNodes, MdastParent>} MdastParents\n *\n * @typedef EmbeddedHastFields\n *   hast fields.\n * @property {string | null | undefined} [hName]\n *   Generate a specific element with this tag name instead.\n * @property {HastProperties | null | undefined} [hProperties]\n *   Generate an element with these properties instead.\n * @property {Array<HastElementContent> | null | undefined} [hChildren]\n *   Generate an element with this content instead.\n *\n * @typedef {Record<string, unknown> & EmbeddedHastFields} MdastData\n *   mdast data with embedded hast fields.\n *\n * @typedef {MdastNodes & {data?: MdastData | null | undefined}} MdastNodeWithData\n *   mdast node with embedded hast data.\n *\n * @typedef PointLike\n *   Point-like value.\n * @property {number | null | undefined} [line]\n *   Line.\n * @property {number | null | undefined} [column]\n *   Column.\n * @property {number | null | undefined} [offset]\n *   Offset.\n *\n * @typedef PositionLike\n *   Position-like value.\n * @property {PointLike | null | undefined} [start]\n *   Point-like value.\n * @property {PointLike | null | undefined} [end]\n *   Point-like value.\n *\n * @callback Handler\n *   Handle a node.\n * @param {State} state\n *   Info passed around.\n * @param {any} node\n *   mdast node to handle.\n * @param {MdastParents | null | undefined} parent\n *   Parent of `node`.\n * @returns {HastElementContent | Array<HastElementContent> | null | undefined}\n *   hast node.\n *\n * @callback HFunctionProps\n *   Signature of `state` for when props are passed.\n * @param {MdastNodes | PositionLike | null | undefined} node\n *   mdast node or unist position.\n * @param {string} tagName\n *   HTML tag name.\n * @param {HastProperties} props\n *   Properties.\n * @param {Array<HastElementContent> | null | undefined} [children]\n *   hast content.\n * @returns {HastElement}\n *   Compiled element.\n *\n * @callback HFunctionNoProps\n *   Signature of `state` for when no props are passed.\n * @param {MdastNodes | PositionLike | null | undefined} node\n *   mdast node or unist position.\n * @param {string} tagName\n *   HTML tag name.\n * @param {Array<HastElementContent> | null | undefined} [children]\n *   hast content.\n * @returns {HastElement}\n *   Compiled element.\n *\n * @typedef HFields\n *   Info on `state`.\n * @property {boolean} dangerous\n *   Whether HTML is allowed.\n * @property {string} clobberPrefix\n *   Prefix to use to prevent DOM clobbering.\n * @property {string} footnoteLabel\n *   Label to use to introduce the footnote section.\n * @property {string} footnoteLabelTagName\n *   HTML used for the footnote label.\n * @property {HastProperties} footnoteLabelProperties\n *   Properties on the HTML tag used for the footnote label.\n * @property {string} footnoteBackLabel\n *   Label to use from backreferences back to their footnote call.\n * @property {(identifier: string) => MdastDefinition | null} definition\n *   Definition cache.\n * @property {Record<string, MdastFootnoteDefinition>} footnoteById\n *   Footnote definitions by their identifier.\n * @property {Array<string>} footnoteOrder\n *   Identifiers of order when footnote calls first appear in tree order.\n * @property {Record<string, number>} footnoteCounts\n *   Counts for how often the same footnote was called.\n * @property {Handlers} handlers\n *   Applied handlers.\n * @property {Handler} unknownHandler\n *   Handler for any none not in `passThrough` or otherwise handled.\n * @property {(from: MdastNodes, node: HastNodes) => void} patch\n *   Copy a node\u2019s positional info.\n * @property {<Type extends HastNodes>(from: MdastNodes, to: Type) => Type | HastElement} applyData\n *   Honor the `data` of `from`, and generate an element instead of `node`.\n * @property {(node: MdastNodes, parent: MdastParents | null | undefined) => HastElementContent | Array<HastElementContent> | null | undefined} one\n *   Transform an mdast node to hast.\n * @property {(node: MdastNodes) => Array<HastElementContent>} all\n *   Transform the children of an mdast parent to hast.\n * @property {<Type extends HastContent>(nodes: Array<Type>, loose?: boolean | null | undefined) => Array<Type | HastText>} wrap\n *   Wrap `nodes` with line endings between each node, adds initial/final line endings when `loose`.\n * @property {(left: MdastNodeWithData | PositionLike | null | undefined, right: HastElementContent) => HastElementContent} augment\n *   Like `state` but lower-level and usable on non-elements.\n *   Deprecated: use `patch` and `applyData`.\n * @property {Array<string>} passThrough\n *   List of node types to pass through untouched (except for their children).\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [allowDangerousHtml=false]\n *   Whether to persist raw HTML in markdown in the hast tree.\n * @property {string | null | undefined} [clobberPrefix='user-content-']\n *   Prefix to use before the `id` attribute on footnotes to prevent it from\n *   *clobbering*.\n * @property {string | null | undefined} [footnoteBackLabel='Back to content']\n *   Label to use from backreferences back to their footnote call (affects\n *   screen readers).\n * @property {string | null | undefined} [footnoteLabel='Footnotes']\n *   Label to use for the footnotes section (affects screen readers).\n * @property {HastProperties | null | undefined} [footnoteLabelProperties={className: ['sr-only']}]\n *   Properties to use on the footnote label (note that `id: 'footnote-label'`\n *   is always added as footnote calls use it with `aria-describedby` to\n *   provide an accessible label).\n * @property {string | null | undefined} [footnoteLabelTagName='h2']\n *   Tag name to use for the footnote label.\n * @property {Handlers | null | undefined} [handlers]\n *   Extra handlers for nodes.\n * @property {Array<string> | null | undefined} [passThrough]\n *   List of custom mdast node types to pass through (keep) in hast (note that\n *   the node itself is passed, but eventual children are transformed).\n * @property {Handler | null | undefined} [unknownHandler]\n *   Handler for all unknown nodes.\n *\n * @typedef {Record<string, Handler>} Handlers\n *   Handle nodes.\n *\n * @typedef {HFunctionProps & HFunctionNoProps & HFields} State\n *   Info passed around.\n */\n\nimport {visit} from 'unist-util-visit'\nimport {position, pointStart, pointEnd} from 'unist-util-position'\nimport {generated} from 'unist-util-generated'\nimport {definitions} from 'mdast-util-definitions'\nimport {handlers} from './handlers/index.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Create `state` from an mdast tree.\n *\n * @param {MdastNodes} tree\n *   mdast node to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {State}\n *   `state` function.\n */\nexport function createState(tree, options) {\n  const settings = options || {}\n  const dangerous = settings.allowDangerousHtml || false\n  /** @type {Record<string, MdastFootnoteDefinition>} */\n  const footnoteById = {}\n\n  // To do: next major: add `options` to state, remove:\n  // `dangerous`, `clobberPrefix`, `footnoteLabel`, `footnoteLabelTagName`,\n  // `footnoteLabelProperties`, `footnoteBackLabel`, `passThrough`,\n  // `unknownHandler`.\n\n  // To do: next major: move to `state.options.allowDangerousHtml`.\n  state.dangerous = dangerous\n  // To do: next major: move to `state.options`.\n  state.clobberPrefix =\n    settings.clobberPrefix === undefined || settings.clobberPrefix === null\n      ? 'user-content-'\n      : settings.clobberPrefix\n  // To do: next major: move to `state.options`.\n  state.footnoteLabel = settings.footnoteLabel || 'Footnotes'\n  // To do: next major: move to `state.options`.\n  state.footnoteLabelTagName = settings.footnoteLabelTagName || 'h2'\n  // To do: next major: move to `state.options`.\n  state.footnoteLabelProperties = settings.footnoteLabelProperties || {\n    className: ['sr-only']\n  }\n  // To do: next major: move to `state.options`.\n  state.footnoteBackLabel = settings.footnoteBackLabel || 'Back to content'\n  // To do: next major: move to `state.options`.\n  state.unknownHandler = settings.unknownHandler\n  // To do: next major: move to `state.options`.\n  state.passThrough = settings.passThrough\n\n  state.handlers = {...handlers, ...settings.handlers}\n\n  // To do: next major: replace utility with `definitionById` object, so we\n  // only walk once (as we need footnotes too).\n  state.definition = definitions(tree)\n  state.footnoteById = footnoteById\n  /** @type {Array<string>} */\n  state.footnoteOrder = []\n  /** @type {Record<string, number>} */\n  state.footnoteCounts = {}\n\n  state.patch = patch\n  state.applyData = applyData\n  state.one = oneBound\n  state.all = allBound\n  state.wrap = wrap\n  // To do: next major: remove `augment`.\n  state.augment = augment\n\n  visit(tree, 'footnoteDefinition', (definition) => {\n    const id = String(definition.identifier).toUpperCase()\n\n    // Mimick CM behavior of link definitions.\n    // See: <https://github.com/syntax-tree/mdast-util-definitions/blob/8290999/index.js#L26>.\n    if (!own.call(footnoteById, id)) {\n      footnoteById[id] = definition\n    }\n  })\n\n  // @ts-expect-error Hush, it\u2019s fine!\n  return state\n\n  /**\n   * Finalise the created `right`, a hast node, from `left`, an mdast node.\n   *\n   * @param {MdastNodeWithData | PositionLike | null | undefined} left\n   * @param {HastElementContent} right\n   * @returns {HastElementContent}\n   */\n  /* c8 ignore start */\n  // To do: next major: remove.\n  function augment(left, right) {\n    // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n    if (left && 'data' in left && left.data) {\n      /** @type {MdastData} */\n      const data = left.data\n\n      if (data.hName) {\n        if (right.type !== 'element') {\n          right = {\n            type: 'element',\n            tagName: '',\n            properties: {},\n            children: []\n          }\n        }\n\n        right.tagName = data.hName\n      }\n\n      if (right.type === 'element' && data.hProperties) {\n        right.properties = {...right.properties, ...data.hProperties}\n      }\n\n      if ('children' in right && right.children && data.hChildren) {\n        right.children = data.hChildren\n      }\n    }\n\n    if (left) {\n      const ctx = 'type' in left ? left : {position: left}\n\n      if (!generated(ctx)) {\n        // @ts-expect-error: fine.\n        right.position = {start: pointStart(ctx), end: pointEnd(ctx)}\n      }\n    }\n\n    return right\n  }\n  /* c8 ignore stop */\n\n  /**\n   * Create an element for `node`.\n   *\n   * @type {HFunctionProps}\n   */\n  /* c8 ignore start */\n  // To do: next major: remove.\n  function state(node, tagName, props, children) {\n    if (Array.isArray(props)) {\n      children = props\n      props = {}\n    }\n\n    // @ts-expect-error augmenting an element yields an element.\n    return augment(node, {\n      type: 'element',\n      tagName,\n      properties: props || {},\n      children: children || []\n    })\n  }\n  /* c8 ignore stop */\n\n  /**\n   * Transform an mdast node into a hast node.\n   *\n   * @param {MdastNodes} node\n   *   mdast node.\n   * @param {MdastParents | null | undefined} [parent]\n   *   Parent of `node`.\n   * @returns {HastElementContent | Array<HastElementContent> | null | undefined}\n   *   Resulting hast node.\n   */\n  function oneBound(node, parent) {\n    // @ts-expect-error: that\u2019s a state :)\n    return one(state, node, parent)\n  }\n\n  /**\n   * Transform the children of an mdast node into hast nodes.\n   *\n   * @param {MdastNodes} parent\n   *   mdast node to compile\n   * @returns {Array<HastElementContent>}\n   *   Resulting hast nodes.\n   */\n  function allBound(parent) {\n    // @ts-expect-error: that\u2019s a state :)\n    return all(state, parent)\n  }\n}\n\n/**\n * Copy a node\u2019s positional info.\n *\n * @param {MdastNodes} from\n *   mdast node to copy from.\n * @param {HastNodes} to\n *   hast node to copy into.\n * @returns {void}\n *   Nothing.\n */\nfunction patch(from, to) {\n  if (from.position) to.position = position(from)\n}\n\n/**\n * Honor the `data` of `from` and maybe generate an element instead of `to`.\n *\n * @template {HastNodes} Type\n *   Node type.\n * @param {MdastNodes} from\n *   mdast node to use data from.\n * @param {Type} to\n *   hast node to change.\n * @returns {Type | HastElement}\n *   Nothing.\n */\nfunction applyData(from, to) {\n  /** @type {Type | HastElement} */\n  let result = to\n\n  // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n  if (from && from.data) {\n    const hName = from.data.hName\n    const hChildren = from.data.hChildren\n    const hProperties = from.data.hProperties\n\n    if (typeof hName === 'string') {\n      // Transforming the node resulted in an element with a different name\n      // than wanted:\n      if (result.type === 'element') {\n        result.tagName = hName\n      }\n      // Transforming the node resulted in a non-element, which happens for\n      // raw, text, and root nodes (unless custom handlers are passed).\n      // The intent is likely to keep the content around (otherwise: pass\n      // `hChildren`).\n      else {\n        result = {\n          type: 'element',\n          tagName: hName,\n          properties: {},\n          children: []\n        }\n\n        // To do: next major: take the children from the `root`, or inject the\n        // raw/text/comment or so into the element?\n        // if ('children' in node) {\n        //   // @ts-expect-error: assume `children` are allowed in elements.\n        //   result.children = node.children\n        // } else {\n        //   // @ts-expect-error: assume `node` is allowed in elements.\n        //   result.children.push(node)\n        // }\n      }\n    }\n\n    if (result.type === 'element' && hProperties) {\n      result.properties = {...result.properties, ...hProperties}\n    }\n\n    if (\n      'children' in result &&\n      result.children &&\n      hChildren !== null &&\n      hChildren !== undefined\n    ) {\n      // @ts-expect-error: assume valid children are defined.\n      result.children = hChildren\n    }\n  }\n\n  return result\n}\n\n/**\n * Transform an mdast node into a hast node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} node\n *   mdast node.\n * @param {MdastParents | null | undefined} [parent]\n *   Parent of `node`.\n * @returns {HastElementContent | Array<HastElementContent> | null | undefined}\n *   Resulting hast node.\n */\n// To do: next major: do not expose, keep bound.\nexport function one(state, node, parent) {\n  const type = node && node.type\n\n  // Fail on non-nodes.\n  if (!type) {\n    throw new Error('Expected node, got `' + node + '`')\n  }\n\n  if (own.call(state.handlers, type)) {\n    return state.handlers[type](state, node, parent)\n  }\n\n  if (state.passThrough && state.passThrough.includes(type)) {\n    // To do: next major: deep clone.\n    // @ts-expect-error: types of passed through nodes are expected to be added manually.\n    return 'children' in node ? {...node, children: all(state, node)} : node\n  }\n\n  if (state.unknownHandler) {\n    return state.unknownHandler(state, node, parent)\n  }\n\n  return defaultUnknownHandler(state, node)\n}\n\n/**\n * Transform the children of an mdast node into hast nodes.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} parent\n *   mdast node to compile\n * @returns {Array<HastElementContent>}\n *   Resulting hast nodes.\n */\n// To do: next major: do not expose, keep bound.\nexport function all(state, parent) {\n  /** @type {Array<HastElementContent>} */\n  const values = []\n\n  if ('children' in parent) {\n    const nodes = parent.children\n    let index = -1\n    while (++index < nodes.length) {\n      const result = one(state, nodes[index], parent)\n\n      // To do: see if we van clean this? Can we merge texts?\n      if (result) {\n        if (index && nodes[index - 1].type === 'break') {\n          if (!Array.isArray(result) && result.type === 'text') {\n            result.value = result.value.replace(/^\\s+/, '')\n          }\n\n          if (!Array.isArray(result) && result.type === 'element') {\n            const head = result.children[0]\n\n            if (head && head.type === 'text') {\n              head.value = head.value.replace(/^\\s+/, '')\n            }\n          }\n        }\n\n        if (Array.isArray(result)) {\n          values.push(...result)\n        } else {\n          values.push(result)\n        }\n      }\n    }\n  }\n\n  return values\n}\n\n/**\n * Transform an unknown node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} node\n *   Unknown mdast node.\n * @returns {HastText | HastElement}\n *   Resulting hast node.\n */\nfunction defaultUnknownHandler(state, node) {\n  const data = node.data || {}\n  /** @type {HastText | HastElement} */\n  const result =\n    'value' in node &&\n    !(own.call(data, 'hProperties') || own.call(data, 'hChildren'))\n      ? {type: 'text', value: node.value}\n      : {\n          type: 'element',\n          tagName: 'div',\n          properties: {},\n          children: all(state, node)\n        }\n\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * Wrap `nodes` with line endings between each node.\n *\n * @template {HastContent} Type\n *   Node type.\n * @param {Array<Type>} nodes\n *   List of nodes to wrap.\n * @param {boolean | null | undefined} [loose=false]\n *   Whether to add line endings at start and end.\n * @returns {Array<Type | HastText>}\n *   Wrapped nodes.\n */\nexport function wrap(nodes, loose) {\n  /** @type {Array<Type | HastText>} */\n  const result = []\n  let index = -1\n\n  if (loose) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  while (++index < nodes.length) {\n    if (index) result.push({type: 'text', value: '\\n'})\n    result.push(nodes[index])\n  }\n\n  if (loose && nodes.length > 0) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  return result\n}\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('./state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Generate a hast footer for called footnote definitions.\n *\n * @param {State} state\n *   Info passed around.\n * @returns {Element | undefined}\n *   `section` element or `undefined`.\n */\nexport function footer(state) {\n  /** @type {Array<ElementContent>} */\n  const listItems = []\n  let index = -1\n\n  while (++index < state.footnoteOrder.length) {\n    const def = state.footnoteById[state.footnoteOrder[index]]\n\n    if (!def) {\n      continue\n    }\n\n    const content = state.all(def)\n    const id = String(def.identifier).toUpperCase()\n    const safeId = normalizeUri(id.toLowerCase())\n    let referenceIndex = 0\n    /** @type {Array<ElementContent>} */\n    const backReferences = []\n\n    while (++referenceIndex <= state.footnoteCounts[id]) {\n      /** @type {Element} */\n      const backReference = {\n        type: 'element',\n        tagName: 'a',\n        properties: {\n          href:\n            '#' +\n            state.clobberPrefix +\n            'fnref-' +\n            safeId +\n            (referenceIndex > 1 ? '-' + referenceIndex : ''),\n          dataFootnoteBackref: true,\n          className: ['data-footnote-backref'],\n          ariaLabel: state.footnoteBackLabel\n        },\n        children: [{type: 'text', value: '\u21A9'}]\n      }\n\n      if (referenceIndex > 1) {\n        backReference.children.push({\n          type: 'element',\n          tagName: 'sup',\n          children: [{type: 'text', value: String(referenceIndex)}]\n        })\n      }\n\n      if (backReferences.length > 0) {\n        backReferences.push({type: 'text', value: ' '})\n      }\n\n      backReferences.push(backReference)\n    }\n\n    const tail = content[content.length - 1]\n\n    if (tail && tail.type === 'element' && tail.tagName === 'p') {\n      const tailTail = tail.children[tail.children.length - 1]\n      if (tailTail && tailTail.type === 'text') {\n        tailTail.value += ' '\n      } else {\n        tail.children.push({type: 'text', value: ' '})\n      }\n\n      tail.children.push(...backReferences)\n    } else {\n      content.push(...backReferences)\n    }\n\n    /** @type {Element} */\n    const listItem = {\n      type: 'element',\n      tagName: 'li',\n      properties: {id: state.clobberPrefix + 'fn-' + safeId},\n      children: state.wrap(content, true)\n    }\n\n    state.patch(def, listItem)\n\n    listItems.push(listItem)\n  }\n\n  if (listItems.length === 0) {\n    return\n  }\n\n  return {\n    type: 'element',\n    tagName: 'section',\n    properties: {dataFootnotes: true, className: ['footnotes']},\n    children: [\n      {\n        type: 'element',\n        tagName: state.footnoteLabelTagName,\n        properties: {\n          // To do: use structured clone.\n          ...JSON.parse(JSON.stringify(state.footnoteLabelProperties)),\n          id: 'footnote-label'\n        },\n        children: [{type: 'text', value: state.footnoteLabel}]\n      },\n      {type: 'text', value: '\\n'},\n      {\n        type: 'element',\n        tagName: 'ol',\n        properties: {},\n        children: state.wrap(listItems, true)\n      },\n      {type: 'text', value: '\\n'}\n    ]\n  }\n}\n", "/**\n * @typedef {import('hast').Content} HastContent\n * @typedef {import('hast').Root} HastRoot\n *\n * @typedef {import('mdast').Content} MdastContent\n * @typedef {import('mdast').Root} MdastRoot\n *\n * @typedef {import('./state.js').Options} Options\n */\n\n/**\n * @typedef {HastRoot | HastContent} HastNodes\n * @typedef {MdastRoot | MdastContent} MdastNodes\n */\n\nimport {footer} from './footer.js'\nimport {createState} from './state.js'\n\n/**\n * Transform mdast to hast.\n *\n * ##### Notes\n *\n * ###### HTML\n *\n * Raw HTML is available in mdast as `html` nodes and can be embedded in hast\n * as semistandard `raw` nodes.\n * Most utilities ignore `raw` nodes but two notable ones don\u2019t:\n *\n * *   `hast-util-to-html` also has an option `allowDangerousHtml` which will\n *     output the raw HTML.\n *     This is typically discouraged as noted by the option name but is useful\n *     if you completely trust authors\n * *   `hast-util-raw` can handle the raw embedded HTML strings by parsing them\n *     into standard hast nodes (`element`, `text`, etc).\n *     This is a heavy task as it needs a full HTML parser, but it is the only\n *     way to support untrusted content\n *\n * ###### Footnotes\n *\n * Many options supported here relate to footnotes.\n * Footnotes are not specified by CommonMark, which we follow by default.\n * They are supported by GitHub, so footnotes can be enabled in markdown with\n * `mdast-util-gfm`.\n *\n * The options `footnoteBackLabel` and `footnoteLabel` define natural language\n * that explains footnotes, which is hidden for sighted users but shown to\n * assistive technology.\n * When your page is not in English, you must define translated values.\n *\n * Back references use ARIA attributes, but the section label itself uses a\n * heading that is hidden with an `sr-only` class.\n * To show it to sighted users, define different attributes in\n * `footnoteLabelProperties`.\n *\n * ###### Clobbering\n *\n * Footnotes introduces a problem, as it links footnote calls to footnote\n * definitions on the page through `id` attributes generated from user content,\n * which results in DOM clobbering.\n *\n * DOM clobbering is this:\n *\n * ```html\n * <p id=x></p>\n * <script>alert(x) // `x` now refers to the DOM `p#x` element</script>\n * ```\n *\n * Elements by their ID are made available by browsers on the `window` object,\n * which is a security risk.\n * Using a prefix solves this problem.\n *\n * More information on how to handle clobbering and the prefix is explained in\n * Example: headings (DOM clobbering) in `rehype-sanitize`.\n *\n * ###### Unknown nodes\n *\n * Unknown nodes are nodes with a type that isn\u2019t in `handlers` or `passThrough`.\n * The default behavior for unknown nodes is:\n *\n * *   when the node has a `value` (and doesn\u2019t have `data.hName`,\n *     `data.hProperties`, or `data.hChildren`, see later), create a hast `text`\n *     node\n * *   otherwise, create a `<div>` element (which could be changed with\n *     `data.hName`), with its children mapped from mdast to hast as well\n *\n * This behavior can be changed by passing an `unknownHandler`.\n *\n * @param {MdastNodes} tree\n *   mdast tree.\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {HastNodes | null | undefined}\n *   hast tree.\n */\n// To do: next major: always return a single `root`.\nexport function toHast(tree, options) {\n  const state = createState(tree, options)\n  const node = state.one(tree, null)\n  const foot = footer(state)\n\n  if (foot) {\n    // @ts-expect-error If there\u2019s a footer, there were definitions, meaning block\n    // content.\n    // So assume `node` is a parent node.\n    node.children.push({type: 'text', value: '\\n'}, foot)\n  }\n\n  // To do: next major: always return root?\n  return Array.isArray(node) ? {type: 'root', children: node} : node\n}\n", "/**\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('mdast-util-to-hast').Options} Options\n * @typedef {import('unified').Processor<any, any, any, any>} Processor\n *\n * @typedef {import('mdast-util-to-hast')} DoNotTouchAsThisImportIncludesRawInTree\n */\n\nimport {toHast} from 'mdast-util-to-hast'\n\n// Note: the `<MdastRoot, HastRoot>` overload doesn\u2019t seem to work :'(\n\n/**\n * Plugin that turns markdown into HTML to support rehype.\n *\n * *   If a destination processor is given, that processor runs with a new HTML\n *     (hast) tree (bridge-mode).\n *     As the given processor runs with a hast tree, and rehype plugins support\n *     hast, that means rehype plugins can be used with the given processor.\n *     The hast tree is discarded in the end.\n *     It\u2019s highly unlikely that you want to do this.\n * *   The common case is to not pass a destination processor, in which case the\n *     current processor continues running with a new HTML (hast) tree\n *     (mutate-mode).\n *     As the current processor continues with a hast tree, and rehype plugins\n *     support hast, that means rehype plugins can be used after\n *     `remark-rehype`.\n *     It\u2019s likely that this is what you want to do.\n *\n * @param destination\n *   Optional unified processor.\n * @param options\n *   Options passed to `mdast-util-to-hast`.\n */\nconst remarkRehype =\n  /** @type {(import('unified').Plugin<[Processor, Options?]|[null|undefined, Options?]|[Options]|[], MdastRoot>)} */\n  (\n    function (destination, options) {\n      return destination && 'run' in destination\n        ? bridge(destination, options)\n        : mutate(destination || options)\n    }\n  )\n\nexport default remarkRehype\n\n/**\n * Bridge-mode.\n * Runs the destination with the new hast tree.\n *\n * @type {import('unified').Plugin<[Processor, Options?], MdastRoot>}\n */\nfunction bridge(destination, options) {\n  return (node, file, next) => {\n    destination.run(toHast(node, options), file, (error) => {\n      next(error)\n    })\n  }\n}\n\n/**\n * Mutate-mode.\n * Further plugins run on the hast tree.\n *\n * @type {import('unified').Plugin<[Options?]|void[], MdastRoot, HastRoot>}\n */\nfunction mutate(options) {\n  // @ts-expect-error: assume a corresponding node is returned by `toHast`.\n  return (node) => toHast(node, options)\n}\n", "/**\n * List of HTML void tag names.\n *\n * @type {Array<string>}\n */\nexport const htmlVoidElements = [\n  'area',\n  'base',\n  'basefont',\n  'bgsound',\n  'br',\n  'col',\n  'command',\n  'embed',\n  'frame',\n  'hr',\n  'image',\n  'img',\n  'input',\n  'keygen',\n  'link',\n  'meta',\n  'param',\n  'source',\n  'track',\n  'wbr'\n]\n", "/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n", "/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  let index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n", "/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n", "export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property\n    /** @type {string} */\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n", "let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n", "import {Info} from './info.js'\nimport * as types from './types.js'\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value\n  }\n}\n", "/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  /** @type {string} */\n  let prop\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      const value = definition.properties[prop]\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n", "import {create} from './util/create.js'\n\nexport const xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n", "import {create} from './util/create.js'\n\nexport const xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n", "/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n", "import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n", "import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n", "import {booleanish, number, spaceSeparated} from './util/types.js'\nimport {create} from './util/create.js'\n\nexport const aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n", "import {\n  boolean,\n  overloadedBoolean,\n  booleanish,\n  number,\n  spaceSeparated,\n  commaSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    blocking: spaceSeparated,\n    capture: boolean,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    fetchPriority: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inert: boolean,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforeMatch: null,\n    onBeforePrint: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onScrollEnd: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    popover: null,\n    popoverTarget: null,\n    popoverTargetAction: null,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n", "import {\n  boolean,\n  number,\n  spaceSeparated,\n  commaSeparated,\n  commaOrSpaceSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\n\nexport const svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    transformOrigin: 'transform-origin',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    transformOrigin: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n", "/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nconst valid = /^data[-\\w.:]+$/i\nconst dash = /-[a-z]/g\nconst cap = /[A-Z]/g\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let prop = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n", "/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport {merge} from './lib/util/merge.js'\nimport {xlink} from './lib/xlink.js'\nimport {xml} from './lib/xml.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\n\nexport {find} from './lib/find.js'\nexport {hastToReact} from './lib/hast-to-react.js'\nexport {normalize} from './lib/normalize.js'\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\n", "/**\n * @callback Handler\n *   Handle a value, with a certain ID field set to a certain value.\n *   The ID field is passed to `zwitch`, and it\u2019s value is this function\u2019s\n *   place on the `handlers` record.\n * @param {...any} parameters\n *   Arbitrary parameters passed to the zwitch.\n *   The first will be an object with a certain ID field set to a certain value.\n * @returns {any}\n *   Anything!\n */\n\n/**\n * @callback UnknownHandler\n *   Handle values that do have a certain ID field, but it\u2019s set to a value\n *   that is not listed in the `handlers` record.\n * @param {unknown} value\n *   An object with a certain ID field set to an unknown value.\n * @param {...any} rest\n *   Arbitrary parameters passed to the zwitch.\n * @returns {any}\n *   Anything!\n */\n\n/**\n * @callback InvalidHandler\n *   Handle values that do not have a certain ID field.\n * @param {unknown} value\n *   Any unknown value.\n * @param {...any} rest\n *   Arbitrary parameters passed to the zwitch.\n * @returns {void|null|undefined|never}\n *   This should crash or return nothing.\n */\n\n/**\n * @template {InvalidHandler} [Invalid=InvalidHandler]\n * @template {UnknownHandler} [Unknown=UnknownHandler]\n * @template {Record<string, Handler>} [Handlers=Record<string, Handler>]\n * @typedef Options\n *   Configuration (required).\n * @property {Invalid} [invalid]\n *   Handler to use for invalid values.\n * @property {Unknown} [unknown]\n *   Handler to use for unknown values.\n * @property {Handlers} [handlers]\n *   Handlers to use.\n */\n\nconst own = {}.hasOwnProperty\n\n/**\n * Handle values based on a field.\n *\n * @template {InvalidHandler} [Invalid=InvalidHandler]\n * @template {UnknownHandler} [Unknown=UnknownHandler]\n * @template {Record<string, Handler>} [Handlers=Record<string, Handler>]\n * @param {string} key\n *   Field to switch on.\n * @param {Options<Invalid, Unknown, Handlers>} [options]\n *   Configuration (required).\n * @returns {{unknown: Unknown, invalid: Invalid, handlers: Handlers, (...parameters: Parameters<Handlers[keyof Handlers]>): ReturnType<Handlers[keyof Handlers]>, (...parameters: Parameters<Unknown>): ReturnType<Unknown>}}\n */\nexport function zwitch(key, options) {\n  const settings = options || {}\n\n  /**\n   * Handle one value.\n   *\n   * Based on the bound `key`, a respective handler will be called.\n   * If `value` is not an object, or doesn\u2019t have a `key` property, the special\n   * \u201Cinvalid\u201D handler will be called.\n   * If `value` has an unknown `key`, the special \u201Cunknown\u201D handler will be\n   * called.\n   *\n   * All arguments, and the context object, are passed through to the handler,\n   * and it\u2019s result is returned.\n   *\n   * @this {unknown}\n   *   Any context object.\n   * @param {unknown} [value]\n   *   Any value.\n   * @param {...unknown} parameters\n   *   Arbitrary parameters passed to the zwitch.\n   * @property {Handler} invalid\n   *   Handle for values that do not have a certain ID field.\n   * @property {Handler} unknown\n   *   Handle values that do have a certain ID field, but it\u2019s set to a value\n   *   that is not listed in the `handlers` record.\n   * @property {Handlers} handlers\n   *   Record of handlers.\n   * @returns {unknown}\n   *   Anything.\n   */\n  function one(value, ...parameters) {\n    /** @type {Handler|undefined} */\n    let fn = one.invalid\n    const handlers = one.handlers\n\n    if (value && own.call(value, key)) {\n      // @ts-expect-error Indexable.\n      const id = String(value[key])\n      // @ts-expect-error Indexable.\n      fn = own.call(handlers, id) ? handlers[id] : one.unknown\n    }\n\n    if (fn) {\n      return fn.call(this, value, ...parameters)\n    }\n  }\n\n  one.handlers = settings.handlers || {}\n  one.invalid = settings.invalid\n  one.unknown = settings.unknown\n\n  // @ts-expect-error: matches!\n  return one\n}\n", "/**\n * @typedef CoreOptions\n * @property {Array<string>} [subset=[]]\n *   Whether to only escape the given subset of characters.\n * @property {boolean} [escapeOnly=false]\n *   Whether to only escape possibly dangerous characters.\n *   Those characters are `\"`, `&`, `'`, `<`, `>`, and `` ` ``.\n *\n * @typedef FormatOptions\n * @property {(code: number, next: number, options: CoreWithFormatOptions) => string} format\n *   Format strategy.\n *\n * @typedef {CoreOptions & FormatOptions & import('./util/format-smart.js').FormatSmartOptions} CoreWithFormatOptions\n */\n\n/**\n * Encode certain characters in `value`.\n *\n * @param {string} value\n * @param {CoreWithFormatOptions} options\n * @returns {string}\n */\nexport function core(value, options) {\n  value = value.replace(\n    options.subset ? charactersToExpression(options.subset) : /[\"&'<>`]/g,\n    basic\n  )\n\n  if (options.subset || options.escapeOnly) {\n    return value\n  }\n\n  return (\n    value\n      // Surrogate pairs.\n      .replace(/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g, surrogate)\n      // BMP control characters (C0 except for LF, CR, SP; DEL; and some more\n      // non-ASCII ones).\n      .replace(\n        // eslint-disable-next-line no-control-regex, unicorn/no-hex-escape\n        /[\\x01-\\t\\v\\f\\x0E-\\x1F\\x7F\\x81\\x8D\\x8F\\x90\\x9D\\xA0-\\uFFFF]/g,\n        basic\n      )\n  )\n\n  /**\n   * @param {string} pair\n   * @param {number} index\n   * @param {string} all\n   */\n  function surrogate(pair, index, all) {\n    return options.format(\n      (pair.charCodeAt(0) - 0xd800) * 0x400 +\n        pair.charCodeAt(1) -\n        0xdc00 +\n        0x10000,\n      all.charCodeAt(index + 2),\n      options\n    )\n  }\n\n  /**\n   * @param {string} character\n   * @param {number} index\n   * @param {string} all\n   */\n  function basic(character, index, all) {\n    return options.format(\n      character.charCodeAt(0),\n      all.charCodeAt(index + 1),\n      options\n    )\n  }\n}\n\n/**\n * @param {Array<string>} subset\n * @returns {RegExp}\n */\nfunction charactersToExpression(subset) {\n  /** @type {Array<string>} */\n  const groups = []\n  let index = -1\n\n  while (++index < subset.length) {\n    groups.push(subset[index].replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&'))\n  }\n\n  return new RegExp('(?:' + groups.join('|') + ')', 'g')\n}\n", "/**\n * Configurable ways to encode characters as hexadecimal references.\n *\n * @param {number} code\n * @param {number} next\n * @param {boolean|undefined} omit\n * @returns {string}\n */\nexport function toHexadecimal(code, next, omit) {\n  const value = '&#x' + code.toString(16).toUpperCase()\n  return omit && next && !/[\\dA-Fa-f]/.test(String.fromCharCode(next))\n    ? value\n    : value + ';'\n}\n", "/**\n * Configurable ways to encode characters as decimal references.\n *\n * @param {number} code\n * @param {number} next\n * @param {boolean|undefined} omit\n * @returns {string}\n */\nexport function toDecimal(code, next, omit) {\n  const value = '&#' + String(code)\n  return omit && next && !/\\d/.test(String.fromCharCode(next))\n    ? value\n    : value + ';'\n}\n", "/**\n * List of legacy HTML named character references that don\u2019t need a trailing semicolon.\n *\n * @type {Array<string>}\n */\nexport const characterEntitiesLegacy = [\n  'AElig',\n  'AMP',\n  'Aacute',\n  'Acirc',\n  'Agrave',\n  'Aring',\n  'Atilde',\n  'Auml',\n  'COPY',\n  'Ccedil',\n  'ETH',\n  'Eacute',\n  'Ecirc',\n  'Egrave',\n  'Euml',\n  'GT',\n  'Iacute',\n  'Icirc',\n  'Igrave',\n  'Iuml',\n  'LT',\n  'Ntilde',\n  'Oacute',\n  'Ocirc',\n  'Ograve',\n  'Oslash',\n  'Otilde',\n  'Ouml',\n  'QUOT',\n  'REG',\n  'THORN',\n  'Uacute',\n  'Ucirc',\n  'Ugrave',\n  'Uuml',\n  'Yacute',\n  'aacute',\n  'acirc',\n  'acute',\n  'aelig',\n  'agrave',\n  'amp',\n  'aring',\n  'atilde',\n  'auml',\n  'brvbar',\n  'ccedil',\n  'cedil',\n  'cent',\n  'copy',\n  'curren',\n  'deg',\n  'divide',\n  'eacute',\n  'ecirc',\n  'egrave',\n  'eth',\n  'euml',\n  'frac12',\n  'frac14',\n  'frac34',\n  'gt',\n  'iacute',\n  'icirc',\n  'iexcl',\n  'igrave',\n  'iquest',\n  'iuml',\n  'laquo',\n  'lt',\n  'macr',\n  'micro',\n  'middot',\n  'nbsp',\n  'not',\n  'ntilde',\n  'oacute',\n  'ocirc',\n  'ograve',\n  'ordf',\n  'ordm',\n  'oslash',\n  'otilde',\n  'ouml',\n  'para',\n  'plusmn',\n  'pound',\n  'quot',\n  'raquo',\n  'reg',\n  'sect',\n  'shy',\n  'sup1',\n  'sup2',\n  'sup3',\n  'szlig',\n  'thorn',\n  'times',\n  'uacute',\n  'ucirc',\n  'ugrave',\n  'uml',\n  'uuml',\n  'yacute',\n  'yen',\n  'yuml'\n]\n", "/**\n * Map of named character references from HTML 4.\n *\n * @type {Record<string, string>}\n */\nexport const characterEntitiesHtml4 = {\n  nbsp: '\u00A0',\n  iexcl: '\u00A1',\n  cent: '\u00A2',\n  pound: '\u00A3',\n  curren: '\u00A4',\n  yen: '\u00A5',\n  brvbar: '\u00A6',\n  sect: '\u00A7',\n  uml: '\u00A8',\n  copy: '\u00A9',\n  ordf: '\u00AA',\n  laquo: '\u00AB',\n  not: '\u00AC',\n  shy: '\u00AD',\n  reg: '\u00AE',\n  macr: '\u00AF',\n  deg: '\u00B0',\n  plusmn: '\u00B1',\n  sup2: '\u00B2',\n  sup3: '\u00B3',\n  acute: '\u00B4',\n  micro: '\u00B5',\n  para: '\u00B6',\n  middot: '\u00B7',\n  cedil: '\u00B8',\n  sup1: '\u00B9',\n  ordm: '\u00BA',\n  raquo: '\u00BB',\n  frac14: '\u00BC',\n  frac12: '\u00BD',\n  frac34: '\u00BE',\n  iquest: '\u00BF',\n  Agrave: '\u00C0',\n  Aacute: '\u00C1',\n  Acirc: '\u00C2',\n  Atilde: '\u00C3',\n  Auml: '\u00C4',\n  Aring: '\u00C5',\n  AElig: '\u00C6',\n  Ccedil: '\u00C7',\n  Egrave: '\u00C8',\n  Eacute: '\u00C9',\n  Ecirc: '\u00CA',\n  Euml: '\u00CB',\n  Igrave: '\u00CC',\n  Iacute: '\u00CD',\n  Icirc: '\u00CE',\n  Iuml: '\u00CF',\n  ETH: '\u00D0',\n  Ntilde: '\u00D1',\n  Ograve: '\u00D2',\n  Oacute: '\u00D3',\n  Ocirc: '\u00D4',\n  Otilde: '\u00D5',\n  Ouml: '\u00D6',\n  times: '\u00D7',\n  Oslash: '\u00D8',\n  Ugrave: '\u00D9',\n  Uacute: '\u00DA',\n  Ucirc: '\u00DB',\n  Uuml: '\u00DC',\n  Yacute: '\u00DD',\n  THORN: '\u00DE',\n  szlig: '\u00DF',\n  agrave: '\u00E0',\n  aacute: '\u00E1',\n  acirc: '\u00E2',\n  atilde: '\u00E3',\n  auml: '\u00E4',\n  aring: '\u00E5',\n  aelig: '\u00E6',\n  ccedil: '\u00E7',\n  egrave: '\u00E8',\n  eacute: '\u00E9',\n  ecirc: '\u00EA',\n  euml: '\u00EB',\n  igrave: '\u00EC',\n  iacute: '\u00ED',\n  icirc: '\u00EE',\n  iuml: '\u00EF',\n  eth: '\u00F0',\n  ntilde: '\u00F1',\n  ograve: '\u00F2',\n  oacute: '\u00F3',\n  ocirc: '\u00F4',\n  otilde: '\u00F5',\n  ouml: '\u00F6',\n  divide: '\u00F7',\n  oslash: '\u00F8',\n  ugrave: '\u00F9',\n  uacute: '\u00FA',\n  ucirc: '\u00FB',\n  uuml: '\u00FC',\n  yacute: '\u00FD',\n  thorn: '\u00FE',\n  yuml: '\u00FF',\n  fnof: '\u0192',\n  Alpha: '\u0391',\n  Beta: '\u0392',\n  Gamma: '\u0393',\n  Delta: '\u0394',\n  Epsilon: '\u0395',\n  Zeta: '\u0396',\n  Eta: '\u0397',\n  Theta: '\u0398',\n  Iota: '\u0399',\n  Kappa: '\u039A',\n  Lambda: '\u039B',\n  Mu: '\u039C',\n  Nu: '\u039D',\n  Xi: '\u039E',\n  Omicron: '\u039F',\n  Pi: '\u03A0',\n  Rho: '\u03A1',\n  Sigma: '\u03A3',\n  Tau: '\u03A4',\n  Upsilon: '\u03A5',\n  Phi: '\u03A6',\n  Chi: '\u03A7',\n  Psi: '\u03A8',\n  Omega: '\u03A9',\n  alpha: '\u03B1',\n  beta: '\u03B2',\n  gamma: '\u03B3',\n  delta: '\u03B4',\n  epsilon: '\u03B5',\n  zeta: '\u03B6',\n  eta: '\u03B7',\n  theta: '\u03B8',\n  iota: '\u03B9',\n  kappa: '\u03BA',\n  lambda: '\u03BB',\n  mu: '\u03BC',\n  nu: '\u03BD',\n  xi: '\u03BE',\n  omicron: '\u03BF',\n  pi: '\u03C0',\n  rho: '\u03C1',\n  sigmaf: '\u03C2',\n  sigma: '\u03C3',\n  tau: '\u03C4',\n  upsilon: '\u03C5',\n  phi: '\u03C6',\n  chi: '\u03C7',\n  psi: '\u03C8',\n  omega: '\u03C9',\n  thetasym: '\u03D1',\n  upsih: '\u03D2',\n  piv: '\u03D6',\n  bull: '\u2022',\n  hellip: '\u2026',\n  prime: '\u2032',\n  Prime: '\u2033',\n  oline: '\u203E',\n  frasl: '\u2044',\n  weierp: '\u2118',\n  image: '\u2111',\n  real: '\u211C',\n  trade: '\u2122',\n  alefsym: '\u2135',\n  larr: '\u2190',\n  uarr: '\u2191',\n  rarr: '\u2192',\n  darr: '\u2193',\n  harr: '\u2194',\n  crarr: '\u21B5',\n  lArr: '\u21D0',\n  uArr: '\u21D1',\n  rArr: '\u21D2',\n  dArr: '\u21D3',\n  hArr: '\u21D4',\n  forall: '\u2200',\n  part: '\u2202',\n  exist: '\u2203',\n  empty: '\u2205',\n  nabla: '\u2207',\n  isin: '\u2208',\n  notin: '\u2209',\n  ni: '\u220B',\n  prod: '\u220F',\n  sum: '\u2211',\n  minus: '\u2212',\n  lowast: '\u2217',\n  radic: '\u221A',\n  prop: '\u221D',\n  infin: '\u221E',\n  ang: '\u2220',\n  and: '\u2227',\n  or: '\u2228',\n  cap: '\u2229',\n  cup: '\u222A',\n  int: '\u222B',\n  there4: '\u2234',\n  sim: '\u223C',\n  cong: '\u2245',\n  asymp: '\u2248',\n  ne: '\u2260',\n  equiv: '\u2261',\n  le: '\u2264',\n  ge: '\u2265',\n  sub: '\u2282',\n  sup: '\u2283',\n  nsub: '\u2284',\n  sube: '\u2286',\n  supe: '\u2287',\n  oplus: '\u2295',\n  otimes: '\u2297',\n  perp: '\u22A5',\n  sdot: '\u22C5',\n  lceil: '\u2308',\n  rceil: '\u2309',\n  lfloor: '\u230A',\n  rfloor: '\u230B',\n  lang: '\u2329',\n  rang: '\u232A',\n  loz: '\u25CA',\n  spades: '\u2660',\n  clubs: '\u2663',\n  hearts: '\u2665',\n  diams: '\u2666',\n  quot: '\"',\n  amp: '&',\n  lt: '<',\n  gt: '>',\n  OElig: '\u0152',\n  oelig: '\u0153',\n  Scaron: '\u0160',\n  scaron: '\u0161',\n  Yuml: '\u0178',\n  circ: '\u02C6',\n  tilde: '\u02DC',\n  ensp: '\u2002',\n  emsp: '\u2003',\n  thinsp: '\u2009',\n  zwnj: '\u200C',\n  zwj: '\u200D',\n  lrm: '\u200E',\n  rlm: '\u200F',\n  ndash: '\u2013',\n  mdash: '\u2014',\n  lsquo: '\u2018',\n  rsquo: '\u2019',\n  sbquo: '\u201A',\n  ldquo: '\u201C',\n  rdquo: '\u201D',\n  bdquo: '\u201E',\n  dagger: '\u2020',\n  Dagger: '\u2021',\n  permil: '\u2030',\n  lsaquo: '\u2039',\n  rsaquo: '\u203A',\n  euro: '\u20AC'\n}\n", "/**\n * List of legacy (that don\u2019t need a trailing `;`) named references which could,\n * depending on what follows them, turn into a different meaning\n *\n * @type {Array<string>}\n */\nexport const dangerous = [\n  'cent',\n  'copy',\n  'divide',\n  'gt',\n  'lt',\n  'not',\n  'para',\n  'times'\n]\n", "import {characterEntitiesLegacy} from 'character-entities-legacy'\nimport {characterEntitiesHtml4} from 'character-entities-html4'\nimport {dangerous} from '../constant/dangerous.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * `characterEntitiesHtml4` but inverted.\n *\n * @type {Record<string, string>}\n */\nconst characters = {}\n\n/** @type {string} */\nlet key\n\nfor (key in characterEntitiesHtml4) {\n  if (own.call(characterEntitiesHtml4, key)) {\n    characters[characterEntitiesHtml4[key]] = key\n  }\n}\n\n/**\n * Configurable ways to encode characters as named references.\n *\n * @param {number} code\n * @param {number} next\n * @param {boolean|undefined} omit\n * @param {boolean|undefined} attribute\n * @returns {string}\n */\nexport function toNamed(code, next, omit, attribute) {\n  const character = String.fromCharCode(code)\n\n  if (own.call(characters, character)) {\n    const name = characters[character]\n    const value = '&' + name\n\n    if (\n      omit &&\n      characterEntitiesLegacy.includes(name) &&\n      !dangerous.includes(name) &&\n      (!attribute ||\n        (next &&\n          next !== 61 /* `=` */ &&\n          /[^\\da-z]/i.test(String.fromCharCode(next))))\n    ) {\n      return value\n    }\n\n    return value + ';'\n  }\n\n  return ''\n}\n", "/**\n * @typedef FormatSmartOptions\n * @property {boolean} [useNamedReferences=false]\n *   Prefer named character references (`&amp;`) where possible.\n * @property {boolean} [useShortestReferences=false]\n *   Prefer the shortest possible reference, if that results in less bytes.\n *   **Note**: `useNamedReferences` can be omitted when using `useShortestReferences`.\n * @property {boolean} [omitOptionalSemicolons=false]\n *   Whether to omit semicolons when possible.\n *   **Note**: This creates what HTML calls \u201Cparse errors\u201D but is otherwise still valid HTML \u2014 don\u2019t use this except when building a minifier.\n *   Omitting semicolons is possible for certain named and numeric references in some cases.\n * @property {boolean} [attribute=false]\n *   Create character references which don\u2019t fail in attributes.\n *   **Note**: `attribute` only applies when operating dangerously with\n *   `omitOptionalSemicolons: true`.\n */\n\nimport {toHexadecimal} from './to-hexadecimal.js'\nimport {toDecimal} from './to-decimal.js'\nimport {toNamed} from './to-named.js'\n\n/**\n * Configurable ways to encode a character yielding pretty or small results.\n *\n * @param {number} code\n * @param {number} next\n * @param {FormatSmartOptions} options\n * @returns {string}\n */\nexport function formatSmart(code, next, options) {\n  let numeric = toHexadecimal(code, next, options.omitOptionalSemicolons)\n  /** @type {string|undefined} */\n  let named\n\n  if (options.useNamedReferences || options.useShortestReferences) {\n    named = toNamed(\n      code,\n      next,\n      options.omitOptionalSemicolons,\n      options.attribute\n    )\n  }\n\n  // Use the shortest numeric reference when requested.\n  // A simple algorithm would use decimal for all code points under 100, as\n  // those are shorter than hexadecimal:\n  //\n  // * `&#99;` vs `&#x63;` (decimal shorter)\n  // * `&#100;` vs `&#x64;` (equal)\n  //\n  // However, because we take `next` into consideration when `omit` is used,\n  // And it would be possible that decimals are shorter on bigger values as\n  // well if `next` is hexadecimal but not decimal, we instead compare both.\n  if (\n    (options.useShortestReferences || !named) &&\n    options.useShortestReferences\n  ) {\n    const decimal = toDecimal(code, next, options.omitOptionalSemicolons)\n\n    if (decimal.length < numeric.length) {\n      numeric = decimal\n    }\n  }\n\n  return named &&\n    (!options.useShortestReferences || named.length < numeric.length)\n    ? named\n    : numeric\n}\n", "/**\n * The smallest way to encode a character.\n *\n * @param {number} code\n * @returns {string}\n */\nexport function formatBasic(code) {\n  return '&#x' + code.toString(16).toUpperCase() + ';'\n}\n", "/**\n * @typedef {import('./core.js').CoreOptions & import('./util/format-smart.js').FormatSmartOptions} Options\n * @typedef {import('./core.js').CoreOptions} LightOptions\n */\n\nimport {core} from './core.js'\nimport {formatSmart} from './util/format-smart.js'\nimport {formatBasic} from './util/format-basic.js'\n\n/**\n * Encode special characters in `value`.\n *\n * @param {string} value\n *   Value to encode.\n * @param {Options} [options]\n *   Configuration.\n * @returns {string}\n *   Encoded value.\n */\nexport function stringifyEntities(value, options) {\n  return core(value, Object.assign({format: formatSmart}, options))\n}\n\n/**\n * Encode special characters in `value` as hexadecimals.\n *\n * @param {string} value\n *   Value to encode.\n * @param {LightOptions} [options]\n *   Configuration.\n * @returns {string}\n *   Encoded value.\n */\nexport function stringifyEntitiesLight(value, options) {\n  return core(value, Object.assign({format: formatBasic}, options))\n}\n", "/**\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').Parents} Parents\n *\n * @typedef {import('../index.js').State} State\n */\n\nimport {stringifyEntities} from 'stringify-entities'\n\n/**\n * Serialize a comment.\n *\n * @param {Comment} node\n *   Node to handle.\n * @param {number | undefined} _1\n *   Index of `node` in `parent.\n * @param {Parents | undefined} _2\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nexport function comment(node, _1, _2, state) {\n  // See: <https://html.spec.whatwg.org/multipage/syntax.html#comments>\n  return state.settings.bogusComments\n    ? '<?' +\n        stringifyEntities(\n          node.value,\n          Object.assign({}, state.settings.characterReferences, {subset: ['>']})\n        ) +\n        '>'\n    : '<!--' + node.value.replace(/^>|^->|<!--|-->|--!>|<!-$/g, encode) + '-->'\n\n  /**\n   * @param {string} $0\n   */\n  function encode($0) {\n    return stringifyEntities(\n      $0,\n      Object.assign({}, state.settings.characterReferences, {\n        subset: ['<', '>']\n      })\n    )\n  }\n}\n", "/**\n * @typedef {import('hast').Doctype} Doctype\n * @typedef {import('hast').Parents} Parents\n *\n * @typedef {import('../index.js').State} State\n */\n\n// Make VS code see references to the above types.\n''\n\n/**\n * Serialize a doctype.\n *\n * @param {Doctype} _1\n *   Node to handle.\n * @param {number | undefined} _2\n *   Index of `node` in `parent.\n * @param {Parents | undefined} _3\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nexport function doctype(_1, _2, _3, state) {\n  return (\n    '<!' +\n    (state.settings.upperDoctype ? 'DOCTYPE' : 'doctype') +\n    (state.settings.tightDoctype ? '' : ' ') +\n    'html>'\n  )\n}\n", "/**\n * Count how often a character (or substring) is used in a string.\n *\n * @param {string} value\n *   Value to search in.\n * @param {string} character\n *   Character (or substring) to look for.\n * @return {number}\n *   Number of times `character` occurred in `value`.\n */\nexport function ccount(value, character) {\n  const source = String(value)\n\n  if (typeof character !== 'string') {\n    throw new TypeError('Expected character')\n  }\n\n  let count = 0\n  let index = source.indexOf(character)\n\n  while (index !== -1) {\n    count++\n    index = source.indexOf(character, index + character.length)\n  }\n\n  return count\n}\n", "/**\n * @typedef Options\n *   Configuration for `stringify`.\n * @property {boolean} [padLeft=true]\n *   Whether to pad a space before a token.\n * @property {boolean} [padRight=false]\n *   Whether to pad a space after a token.\n */\n\n/**\n * @typedef {Options} StringifyOptions\n *   Please use `StringifyOptions` instead.\n */\n\n/**\n * Parse comma-separated tokens to an array.\n *\n * @param {string} value\n *   Comma-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  /** @type {Array<string>} */\n  const tokens = []\n  const input = String(value || '')\n  let index = input.indexOf(',')\n  let start = 0\n  /** @type {boolean} */\n  let end = false\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    const token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings or numbers to comma-separated tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @param {Options} [options]\n *   Configuration for `stringify` (optional).\n * @returns {string}\n *   Comma-separated tokens.\n */\nexport function stringify(values, options) {\n  const settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  const input = values[values.length - 1] === '' ? [...values, ''] : values\n\n  return input\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n", "/**\n * Parse space-separated tokens to an array of strings.\n *\n * @param {string} value\n *   Space-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated-tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @returns {string}\n *   Space-separated tokens.\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n", "/**\n * @typedef {import('hast').Nodes} Nodes\n */\n\n// HTML whitespace expression.\n// See <https://infra.spec.whatwg.org/#ascii-whitespace>.\nconst re = /[ \\t\\n\\f\\r]/g\n\n/**\n * Check if the given value is *inter-element whitespace*.\n *\n * @param {Nodes | string} thing\n *   Thing to check (`Node` or `string`).\n * @returns {boolean}\n *   Whether the `value` is inter-element whitespace (`boolean`): consisting of\n *   zero or more of space, tab (`\\t`), line feed (`\\n`), carriage return\n *   (`\\r`), or form feed (`\\f`); if a node is passed it must be a `Text` node,\n *   whose `value` field is checked.\n */\nexport function whitespace(thing) {\n  return typeof thing === 'object'\n    ? thing.type === 'text'\n      ? empty(thing.value)\n      : false\n    : empty(thing)\n}\n\n/**\n * @param {string} value\n * @returns {boolean}\n */\nfunction empty(value) {\n  return value.replace(re, '') === ''\n}\n", "/**\n * @typedef {import('hast').Parents} Parents\n * @typedef {import('hast').RootContent} RootContent\n */\n\nimport {whitespace} from 'hast-util-whitespace'\n\nexport const siblingAfter = siblings(1)\nexport const siblingBefore = siblings(-1)\n\n/** @type {Array<RootContent>} */\nconst emptyChildren = []\n\n/**\n * Factory to check siblings in a direction.\n *\n * @param {number} increment\n */\nfunction siblings(increment) {\n  return sibling\n\n  /**\n   * Find applicable siblings in a direction.\n   *\n   * @template {Parents} Parent\n   *   Parent type.\n   * @param {Parent | undefined} parent\n   *   Parent.\n   * @param {number | undefined} index\n   *   Index of child in `parent`.\n   * @param {boolean | undefined} [includeWhitespace=false]\n   *   Whether to include whitespace (default: `false`).\n   * @returns {Parent extends {children: Array<infer Child>} ? Child | undefined : never}\n   *   Child of parent.\n   */\n  function sibling(parent, index, includeWhitespace) {\n    const siblings = parent ? parent.children : emptyChildren\n    let offset = (index || 0) + increment\n    let next = siblings[offset]\n\n    if (!includeWhitespace) {\n      while (next && whitespace(next)) {\n        offset += increment\n        next = siblings[offset]\n      }\n    }\n\n    // @ts-expect-error: it\u2019s a correct child.\n    return next\n  }\n}\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Parents} Parents\n */\n\n/**\n * @callback OmitHandle\n *   Check if a tag can be omitted.\n * @param {Element} element\n *   Element to check.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether to omit a tag.\n *\n */\n\nconst own = {}.hasOwnProperty\n\n/**\n * Factory to check if a given node can have a tag omitted.\n *\n * @param {Record<string, OmitHandle>} handlers\n *   Omission handlers, where each key is a tag name, and each value is the\n *   corresponding handler.\n * @returns {OmitHandle}\n *   Whether to omit a tag of an element.\n */\nexport function omission(handlers) {\n  return omit\n\n  /**\n   * Check if a given node can have a tag omitted.\n   *\n   * @type {OmitHandle}\n   */\n  function omit(node, index, parent) {\n    return (\n      own.call(handlers, node.tagName) &&\n      handlers[node.tagName](node, index, parent)\n    )\n  }\n}\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Parents} Parents\n */\n\nimport {whitespace} from 'hast-util-whitespace'\nimport {siblingAfter} from './util/siblings.js'\nimport {omission} from './omission.js'\n\nexport const closing = omission({\n  body,\n  caption: headOrColgroupOrCaption,\n  colgroup: headOrColgroupOrCaption,\n  dd,\n  dt,\n  head: headOrColgroupOrCaption,\n  html,\n  li,\n  optgroup,\n  option,\n  p,\n  rp: rubyElement,\n  rt: rubyElement,\n  tbody,\n  td: cells,\n  tfoot,\n  th: cells,\n  thead,\n  tr\n})\n\n/**\n * Macro for `</head>`, `</colgroup>`, and `</caption>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction headOrColgroupOrCaption(_, index, parent) {\n  const next = siblingAfter(parent, index, true)\n  return (\n    !next ||\n    (next.type !== 'comment' &&\n      !(next.type === 'text' && whitespace(next.value.charAt(0))))\n  )\n}\n\n/**\n * Whether to omit `</html>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction html(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || next.type !== 'comment'\n}\n\n/**\n * Whether to omit `</body>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction body(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || next.type !== 'comment'\n}\n\n/**\n * Whether to omit `</p>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction p(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return next\n    ? next.type === 'element' &&\n        (next.tagName === 'address' ||\n          next.tagName === 'article' ||\n          next.tagName === 'aside' ||\n          next.tagName === 'blockquote' ||\n          next.tagName === 'details' ||\n          next.tagName === 'div' ||\n          next.tagName === 'dl' ||\n          next.tagName === 'fieldset' ||\n          next.tagName === 'figcaption' ||\n          next.tagName === 'figure' ||\n          next.tagName === 'footer' ||\n          next.tagName === 'form' ||\n          next.tagName === 'h1' ||\n          next.tagName === 'h2' ||\n          next.tagName === 'h3' ||\n          next.tagName === 'h4' ||\n          next.tagName === 'h5' ||\n          next.tagName === 'h6' ||\n          next.tagName === 'header' ||\n          next.tagName === 'hgroup' ||\n          next.tagName === 'hr' ||\n          next.tagName === 'main' ||\n          next.tagName === 'menu' ||\n          next.tagName === 'nav' ||\n          next.tagName === 'ol' ||\n          next.tagName === 'p' ||\n          next.tagName === 'pre' ||\n          next.tagName === 'section' ||\n          next.tagName === 'table' ||\n          next.tagName === 'ul')\n    : !parent ||\n        // Confusing parent.\n        !(\n          parent.type === 'element' &&\n          (parent.tagName === 'a' ||\n            parent.tagName === 'audio' ||\n            parent.tagName === 'del' ||\n            parent.tagName === 'ins' ||\n            parent.tagName === 'map' ||\n            parent.tagName === 'noscript' ||\n            parent.tagName === 'video')\n        )\n}\n\n/**\n * Whether to omit `</li>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction li(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || (next.type === 'element' && next.tagName === 'li')\n}\n\n/**\n * Whether to omit `</dt>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction dt(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return Boolean(\n    next &&\n      next.type === 'element' &&\n      (next.tagName === 'dt' || next.tagName === 'dd')\n  )\n}\n\n/**\n * Whether to omit `</dd>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction dd(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'dt' || next.tagName === 'dd'))\n  )\n}\n\n/**\n * Whether to omit `</rt>` or `</rp>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction rubyElement(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'rp' || next.tagName === 'rt'))\n  )\n}\n\n/**\n * Whether to omit `</optgroup>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction optgroup(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || (next.type === 'element' && next.tagName === 'optgroup')\n}\n\n/**\n * Whether to omit `</option>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction option(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'option' || next.tagName === 'optgroup'))\n  )\n}\n\n/**\n * Whether to omit `</thead>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction thead(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return Boolean(\n    next &&\n      next.type === 'element' &&\n      (next.tagName === 'tbody' || next.tagName === 'tfoot')\n  )\n}\n\n/**\n * Whether to omit `</tbody>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction tbody(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'tbody' || next.tagName === 'tfoot'))\n  )\n}\n\n/**\n * Whether to omit `</tfoot>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction tfoot(_, index, parent) {\n  return !siblingAfter(parent, index)\n}\n\n/**\n * Whether to omit `</tr>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction tr(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || (next.type === 'element' && next.tagName === 'tr')\n}\n\n/**\n * Whether to omit `</td>` or `</th>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction cells(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'td' || next.tagName === 'th'))\n  )\n}\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Parents} Parents\n */\n\nimport {whitespace} from 'hast-util-whitespace'\nimport {siblingAfter, siblingBefore} from './util/siblings.js'\nimport {closing} from './closing.js'\nimport {omission} from './omission.js'\n\nexport const opening = omission({\n  body,\n  colgroup,\n  head,\n  html,\n  tbody\n})\n\n/**\n * Whether to omit `<html>`.\n *\n * @param {Element} node\n *   Element.\n * @returns {boolean}\n *   Whether the opening tag can be omitted.\n */\nfunction html(node) {\n  const head = siblingAfter(node, -1)\n  return !head || head.type !== 'comment'\n}\n\n/**\n * Whether to omit `<head>`.\n *\n * @param {Element} node\n *   Element.\n * @returns {boolean}\n *   Whether the opening tag can be omitted.\n */\nfunction head(node) {\n  const children = node.children\n  /** @type {Array<string>} */\n  const seen = []\n  let index = -1\n\n  while (++index < children.length) {\n    const child = children[index]\n    if (\n      child.type === 'element' &&\n      (child.tagName === 'title' || child.tagName === 'base')\n    ) {\n      if (seen.includes(child.tagName)) return false\n      seen.push(child.tagName)\n    }\n  }\n\n  return children.length > 0\n}\n\n/**\n * Whether to omit `<body>`.\n *\n * @param {Element} node\n *   Element.\n * @returns {boolean}\n *   Whether the opening tag can be omitted.\n */\nfunction body(node) {\n  const head = siblingAfter(node, -1, true)\n\n  return (\n    !head ||\n    (head.type !== 'comment' &&\n      !(head.type === 'text' && whitespace(head.value.charAt(0))) &&\n      !(\n        head.type === 'element' &&\n        (head.tagName === 'meta' ||\n          head.tagName === 'link' ||\n          head.tagName === 'script' ||\n          head.tagName === 'style' ||\n          head.tagName === 'template')\n      ))\n  )\n}\n\n/**\n * Whether to omit `<colgroup>`.\n * The spec describes some logic for the opening tag, but it\u2019s easier to\n * implement in the closing tag, to the same effect, so we handle it there\n * instead.\n *\n * @param {Element} node\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the opening tag can be omitted.\n */\nfunction colgroup(node, index, parent) {\n  const previous = siblingBefore(parent, index)\n  const head = siblingAfter(node, -1, true)\n\n  // Previous colgroup was already omitted.\n  if (\n    parent &&\n    previous &&\n    previous.type === 'element' &&\n    previous.tagName === 'colgroup' &&\n    closing(previous, parent.children.indexOf(previous), parent)\n  ) {\n    return false\n  }\n\n  return Boolean(head && head.type === 'element' && head.tagName === 'col')\n}\n\n/**\n * Whether to omit `<tbody>`.\n *\n * @param {Element} node\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the opening tag can be omitted.\n */\nfunction tbody(node, index, parent) {\n  const previous = siblingBefore(parent, index)\n  const head = siblingAfter(node, -1)\n\n  // Previous table section was already omitted.\n  if (\n    parent &&\n    previous &&\n    previous.type === 'element' &&\n    (previous.tagName === 'thead' || previous.tagName === 'tbody') &&\n    closing(previous, parent.children.indexOf(previous), parent)\n  ) {\n    return false\n  }\n\n  return Boolean(head && head.type === 'element' && head.tagName === 'tr')\n}\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Parents} Parents\n * @typedef {import('hast').Properties} Properties\n *\n * @typedef {import('../index.js').State} State\n */\n\nimport {ccount} from 'ccount'\nimport {stringify as commas} from 'comma-separated-tokens'\nimport {find, svg} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {stringifyEntities} from 'stringify-entities'\nimport {closing} from '../omission/closing.js'\nimport {opening} from '../omission/opening.js'\n\n/**\n * Maps of subsets.\n *\n * Each value is a matrix of tuples.\n * The value at `0` causes parse errors, the value at `1` is valid.\n * Of both, the value at `0` is unsafe, and the value at `1` is safe.\n *\n * @type {Record<'double' | 'name' | 'single' | 'unquoted', Array<[Array<string>, Array<string>]>>}\n */\nconst constants = {\n  // See: <https://html.spec.whatwg.org/#attribute-name-state>.\n  name: [\n    ['\\t\\n\\f\\r &/=>'.split(''), '\\t\\n\\f\\r \"&\\'/=>`'.split('')],\n    ['\\0\\t\\n\\f\\r \"&\\'/<=>'.split(''), '\\0\\t\\n\\f\\r \"&\\'/<=>`'.split('')]\n  ],\n  // See: <https://html.spec.whatwg.org/#attribute-value-(unquoted)-state>.\n  unquoted: [\n    ['\\t\\n\\f\\r &>'.split(''), '\\0\\t\\n\\f\\r \"&\\'<=>`'.split('')],\n    ['\\0\\t\\n\\f\\r \"&\\'<=>`'.split(''), '\\0\\t\\n\\f\\r \"&\\'<=>`'.split('')]\n  ],\n  // See: <https://html.spec.whatwg.org/#attribute-value-(single-quoted)-state>.\n  single: [\n    [\"&'\".split(''), '\"&\\'`'.split('')],\n    [\"\\0&'\".split(''), '\\0\"&\\'`'.split('')]\n  ],\n  // See: <https://html.spec.whatwg.org/#attribute-value-(double-quoted)-state>.\n  double: [\n    ['\"&'.split(''), '\"&\\'`'.split('')],\n    ['\\0\"&'.split(''), '\\0\"&\\'`'.split('')]\n  ]\n}\n\n/**\n * Serialize an element node.\n *\n * @param {Element} node\n *   Node to handle.\n * @param {number | undefined} index\n *   Index of `node` in `parent.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nexport function element(node, index, parent, state) {\n  const schema = state.schema\n  const omit = schema.space === 'svg' ? false : state.settings.omitOptionalTags\n  let selfClosing =\n    schema.space === 'svg'\n      ? state.settings.closeEmptyElements\n      : state.settings.voids.includes(node.tagName.toLowerCase())\n  /** @type {Array<string>} */\n  const parts = []\n  /** @type {string} */\n  let last\n\n  if (schema.space === 'html' && node.tagName === 'svg') {\n    state.schema = svg\n  }\n\n  const attrs = serializeAttributes(state, node.properties)\n\n  const content = state.all(\n    schema.space === 'html' && node.tagName === 'template' ? node.content : node\n  )\n\n  state.schema = schema\n\n  // If the node is categorised as void, but it has children, remove the\n  // categorisation.\n  // This enables for example `menuitem`s, which are void in W3C HTML but not\n  // void in WHATWG HTML, to be stringified properly.\n  // Note: `menuitem` has since been removed from the HTML spec, and so is no\n  // longer void.\n  if (content) selfClosing = false\n\n  if (attrs || !omit || !opening(node, index, parent)) {\n    parts.push('<', node.tagName, attrs ? ' ' + attrs : '')\n\n    if (\n      selfClosing &&\n      (schema.space === 'svg' || state.settings.closeSelfClosing)\n    ) {\n      last = attrs.charAt(attrs.length - 1)\n      if (\n        !state.settings.tightSelfClosing ||\n        last === '/' ||\n        (last && last !== '\"' && last !== \"'\")\n      ) {\n        parts.push(' ')\n      }\n\n      parts.push('/')\n    }\n\n    parts.push('>')\n  }\n\n  parts.push(content)\n\n  if (!selfClosing && (!omit || !closing(node, index, parent))) {\n    parts.push('</' + node.tagName + '>')\n  }\n\n  return parts.join('')\n}\n\n/**\n * @param {State} state\n * @param {Properties | null | undefined} props\n * @returns {string}\n */\nfunction serializeAttributes(state, props) {\n  /** @type {Array<string>} */\n  const values = []\n  let index = -1\n  /** @type {string} */\n  let key\n\n  if (props) {\n    for (key in props) {\n      if (props[key] !== null && props[key] !== undefined) {\n        const value = serializeAttribute(state, key, props[key])\n        if (value) values.push(value)\n      }\n    }\n  }\n\n  while (++index < values.length) {\n    const last = state.settings.tightAttributes\n      ? values[index].charAt(values[index].length - 1)\n      : undefined\n\n    // In tight mode, don\u2019t add a space after quoted attributes.\n    if (index !== values.length - 1 && last !== '\"' && last !== \"'\") {\n      values[index] += ' '\n    }\n  }\n\n  return values.join('')\n}\n\n/**\n * @param {State} state\n * @param {string} key\n * @param {Properties[keyof Properties]} value\n * @returns {string}\n */\nfunction serializeAttribute(state, key, value) {\n  const info = find(state.schema, key)\n  const x =\n    state.settings.allowParseErrors && state.schema.space === 'html' ? 0 : 1\n  const y = state.settings.allowDangerousCharacters ? 0 : 1\n  let quote = state.quote\n  /** @type {string | undefined} */\n  let result\n\n  if (info.overloadedBoolean && (value === info.attribute || value === '')) {\n    value = true\n  } else if (\n    info.boolean ||\n    (info.overloadedBoolean && typeof value !== 'string')\n  ) {\n    value = Boolean(value)\n  }\n\n  if (\n    value === null ||\n    value === undefined ||\n    value === false ||\n    (typeof value === 'number' && Number.isNaN(value))\n  ) {\n    return ''\n  }\n\n  const name = stringifyEntities(\n    info.attribute,\n    Object.assign({}, state.settings.characterReferences, {\n      // Always encode without parse errors in non-HTML.\n      subset: constants.name[x][y]\n    })\n  )\n\n  // No value.\n  // There is currently only one boolean property in SVG: `[download]` on\n  // `<a>`.\n  // This property does not seem to work in browsers (Firefox, Safari, Chrome),\n  // so I can\u2019t test if dropping the value works.\n  // But I assume that it should:\n  //\n  // ```html\n  // <!doctype html>\n  // <svg viewBox=\"0 0 100 100\">\n  //   <a href=https://example.com download>\n  //     <circle cx=50 cy=40 r=35 />\n  //   </a>\n  // </svg>\n  // ```\n  //\n  // See: <https://github.com/wooorm/property-information/blob/main/lib/svg.js>\n  if (value === true) return name\n\n  // `spaces` doesn\u2019t accept a second argument, but it\u2019s given here just to\n  // keep the code cleaner.\n  value = Array.isArray(value)\n    ? (info.commaSeparated ? commas : spaces)(value, {\n        padLeft: !state.settings.tightCommaSeparatedLists\n      })\n    : String(value)\n\n  if (state.settings.collapseEmptyAttributes && !value) return name\n\n  // Check unquoted value.\n  if (state.settings.preferUnquoted) {\n    result = stringifyEntities(\n      value,\n      Object.assign({}, state.settings.characterReferences, {\n        attribute: true,\n        subset: constants.unquoted[x][y]\n      })\n    )\n  }\n\n  // If we don\u2019t want unquoted, or if `value` contains character references when\n  // unquoted\u2026\n  if (result !== value) {\n    // If the alternative is less common than `quote`, switch.\n    if (\n      state.settings.quoteSmart &&\n      ccount(value, quote) > ccount(value, state.alternative)\n    ) {\n      quote = state.alternative\n    }\n\n    result =\n      quote +\n      stringifyEntities(\n        value,\n        Object.assign({}, state.settings.characterReferences, {\n          // Always encode without parse errors in non-HTML.\n          subset: (quote === \"'\" ? constants.single : constants.double)[x][y],\n          attribute: true\n        })\n      ) +\n      quote\n  }\n\n  // Don\u2019t add a `=` for unquoted empties.\n  return name + (result ? '=' + result : result)\n}\n", "/**\n * @typedef {import('hast').Parents} Parents\n * @typedef {import('hast').Text} Text\n *\n * @typedef {import('mdast-util-to-hast').Raw} Raw\n *\n * @typedef {import('../index.js').State} State\n */\n\nimport {stringifyEntities} from 'stringify-entities'\n\n/**\n * Serialize a text node.\n *\n * @param {Raw | Text} node\n *   Node to handle.\n * @param {number | undefined} _\n *   Index of `node` in `parent.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nexport function text(node, _, parent, state) {\n  // Check if content of `node` should be escaped.\n  return parent &&\n    parent.type === 'element' &&\n    (parent.tagName === 'script' || parent.tagName === 'style')\n    ? node.value\n    : stringifyEntities(\n        node.value,\n        Object.assign({}, state.settings.characterReferences, {\n          subset: ['<', '&']\n        })\n      )\n}\n", "/**\n * @typedef {import('hast').Parents} Parents\n *\n * @typedef {import('mdast-util-to-hast').Raw} Raw\n *\n * @typedef {import('../index.js').State} State\n */\n\nimport {text} from './text.js'\n\n/**\n * Serialize a raw node.\n *\n * @param {Raw} node\n *   Node to handle.\n * @param {number | undefined} index\n *   Index of `node` in `parent.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nexport function raw(node, index, parent, state) {\n  return state.settings.allowDangerousHtml\n    ? node.value\n    : text(node, index, parent, state)\n}\n", "/**\n * @typedef {import('hast').Parents} Parents\n * @typedef {import('hast').Root} Root\n *\n * @typedef {import('../index.js').State} State\n */\n\n// Make VS code see references to the above types.\n''\n\n/**\n * Serialize a root.\n *\n * @param {Root} node\n *   Node to handle.\n * @param {number | undefined} _1\n *   Index of `node` in `parent.\n * @param {Parents | undefined} _2\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nexport function root(node, _1, _2, state) {\n  return state.all(node)\n}\n", "/**\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Parents} Parents\n *\n * @typedef {import('../index.js').State} State\n */\n\nimport {zwitch} from 'zwitch'\nimport {comment} from './comment.js'\nimport {doctype} from './doctype.js'\nimport {element} from './element.js'\nimport {raw} from './raw.js'\nimport {root} from './root.js'\nimport {text} from './text.js'\n\n/**\n * @type {(node: Nodes, index: number | undefined, parent: Parents | undefined, state: State) => string}\n */\nexport const handle = zwitch('type', {\n  invalid,\n  unknown,\n  handlers: {comment, doctype, element, raw, root, text}\n})\n\n/**\n * Fail when a non-node is found in the tree.\n *\n * @param {unknown} node\n *   Unknown value.\n * @returns {never}\n *   Never.\n */\nfunction invalid(node) {\n  throw new Error('Expected node, not `' + node + '`')\n}\n\n/**\n * Fail when a node with an unknown type is found in the tree.\n *\n * @param {unknown} node_\n *  Unknown node.\n * @returns {never}\n *   Never.\n */\nfunction unknown(node_) {\n  // `type` is guaranteed by runtime JS.\n  const node = /** @type {Nodes} */ (node_)\n  throw new Error('Cannot compile unknown node `' + node.type + '`')\n}\n", "/**\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Parents} Parents\n * @typedef {import('hast').RootContent} RootContent\n *\n * @typedef {import('property-information').Schema} Schema\n *\n * @typedef {import('stringify-entities').Options} StringifyEntitiesOptions\n */\n\n/**\n * @typedef {Omit<StringifyEntitiesOptions, 'attribute' | 'escapeOnly' | 'subset'>} CharacterReferences\n *\n * @typedef Options\n *   Configuration.\n * @property {boolean | null | undefined} [allowDangerousCharacters=false]\n *   Do not encode some characters which cause XSS vulnerabilities in older\n *   browsers (default: `false`).\n *\n *   > \u26A0\uFE0F **Danger**: only set this if you completely trust the content.\n * @property {boolean | null | undefined} [allowDangerousHtml=false]\n *   Allow `raw` nodes and insert them as raw HTML (default: `false`).\n *\n *   When `false`, `Raw` nodes are encoded.\n *\n *   > \u26A0\uFE0F **Danger**: only set this if you completely trust the content.\n * @property {boolean | null | undefined} [allowParseErrors=false]\n *   Do not encode characters which cause parse errors (even though they work),\n *   to save bytes (default: `false`).\n *\n *   Not used in the SVG space.\n *\n *   > \uD83D\uDC49 **Note**: intentionally creates parse errors in markup (how parse\n *   > errors are handled is well defined, so this works but isn\u2019t pretty).\n * @property {boolean | null | undefined} [bogusComments=false]\n *   Use \u201Cbogus comments\u201D instead of comments to save byes: `<?charlie>`\n *   instead of `<!--charlie-->` (default: `false`).\n *\n *   > \uD83D\uDC49 **Note**: intentionally creates parse errors in markup (how parse\n *   > errors are handled is well defined, so this works but isn\u2019t pretty).\n * @property {CharacterReferences | null | undefined} [characterReferences]\n *   Configure how to serialize character references (optional).\n * @property {boolean | null | undefined} [closeEmptyElements=false]\n *   Close SVG elements without any content with slash (`/`) on the opening tag\n *   instead of an end tag: `<circle />` instead of `<circle></circle>`\n *   (default: `false`).\n *\n *   See `tightSelfClosing` to control whether a space is used before the\n *   slash.\n *\n *   Not used in the HTML space.\n * @property {boolean | null | undefined} [closeSelfClosing=false]\n *   Close self-closing nodes with an extra slash (`/`): `<img />` instead of\n *   `<img>` (default: `false`).\n *\n *   See `tightSelfClosing` to control whether a space is used before the\n *   slash.\n *\n *   Not used in the SVG space.\n * @property {boolean | null | undefined} [collapseEmptyAttributes=false]\n *   Collapse empty attributes: get `class` instead of `class=\"\"` (default:\n *   `false`).\n *\n *   Not used in the SVG space.\n *\n *   > \uD83D\uDC49 **Note**: boolean attributes (such as `hidden`) are always collapsed.\n * @property {boolean | null | undefined} [omitOptionalTags=false]\n *   Omit optional opening and closing tags (default: `false`).\n *\n *   For example, in `<ol><li>one</li><li>two</li></ol>`, both `</li>` closing\n *   tags can be omitted.\n *   The first because it\u2019s followed by another `li`, the last because it\u2019s\n *   followed by nothing.\n *\n *   Not used in the SVG space.\n * @property {boolean | null | undefined} [preferUnquoted=false]\n *   Leave attributes unquoted if that results in less bytes (default: `false`).\n *\n *   Not used in the SVG space.\n * @property {Quote | null | undefined} [quote='\"']\n *   Preferred quote to use (default: `'\"'`).\n * @property {boolean | null | undefined} [quoteSmart=false]\n *   Use the other quote if that results in less bytes (default: `false`).\n * @property {Space | null | undefined} [space='html']\n *   When an `<svg>` element is found in the HTML space, this package already\n *   automatically switches to and from the SVG space when entering and exiting\n *   it (default: `'html'`).\n *\n *   > \uD83D\uDC49 **Note**: hast is not XML.\n *   > It supports SVG as embedded in HTML.\n *   > It does not support the features available in XML.\n *   > Passing SVG might break but fragments of modern SVG should be fine.\n *   > Use [`xast`][xast] if you need to support SVG as XML.\n * @property {boolean | null | undefined} [tightAttributes=false]\n *   Join attributes together, without whitespace, if possible: get\n *   `class=\"a b\"title=\"c d\"` instead of `class=\"a b\" title=\"c d\"` to save\n *   bytes (default: `false`).\n *\n *   Not used in the SVG space.\n *\n *   > \uD83D\uDC49 **Note**: intentionally creates parse errors in markup (how parse\n *   > errors are handled is well defined, so this works but isn\u2019t pretty).\n * @property {boolean | null | undefined} [tightCommaSeparatedLists=false]\n *   Join known comma-separated attribute values with just a comma (`,`),\n *   instead of padding them on the right as well (`,\u2420`, where `\u2420` represents a\n *   space) (default: `false`).\n * @property {boolean | null | undefined} [tightDoctype=false]\n *   Drop unneeded spaces in doctypes: `<!doctypehtml>` instead of\n *   `<!doctype html>` to save bytes (default: `false`).\n *\n *   > \uD83D\uDC49 **Note**: intentionally creates parse errors in markup (how parse\n *   > errors are handled is well defined, so this works but isn\u2019t pretty).\n * @property {boolean | null | undefined} [tightSelfClosing=false]\n *   Do not use an extra space when closing self-closing elements: `<img/>`\n *   instead of `<img />` (default: `false`).\n *\n *   > \uD83D\uDC49 **Note**: only used if `closeSelfClosing: true` or\n *   > `closeEmptyElements: true`.\n * @property {boolean | null | undefined} [upperDoctype=false]\n *   Use a `<!DOCTYPE\u2026` instead of `<!doctype\u2026` (default: `false`).\n *\n *   Useless except for XHTML.\n * @property {ReadonlyArray<string> | null | undefined} [voids]\n *   Tag names of elements to serialize without closing tag (default: `html-void-elements`).\n *\n *   Not used in the SVG space.\n *\n *   > \uD83D\uDC49 **Note**: It\u2019s highly unlikely that you want to pass this, because\n *   > hast is not for XML, and HTML will not add more void elements.\n *\n * @typedef {'\"' | \"'\"} Quote\n *   HTML quotes for attribute values.\n *\n * @typedef {Omit<Required<{[key in keyof Options]: Exclude<Options[key], null | undefined>}>, 'space' | 'quote'>} Settings\n *\n * @typedef {'html' | 'svg'} Space\n *   Namespace.\n *\n * @typedef State\n *   Info passed around about the current state.\n * @property {(node: Nodes, index: number | undefined, parent: Parents | undefined) => string} one\n *   Serialize one node.\n * @property {(node: Parents | undefined) => string} all\n *   Serialize the children of a parent node.\n * @property {Settings} settings\n *   User configuration.\n * @property {Schema} schema\n *   Current schema.\n * @property {Quote} quote\n *   Preferred quote.\n * @property {Quote} alternative\n *   Alternative quote.\n */\n\nimport {htmlVoidElements} from 'html-void-elements'\nimport {html, svg} from 'property-information'\nimport {handle} from './handle/index.js'\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/** @type {CharacterReferences} */\nconst emptyCharacterReferences = {}\n\n/** @type {Array<never>} */\nconst emptyChildren = []\n\n/**\n * Serialize hast as HTML.\n *\n * @param {Array<RootContent> | Nodes} tree\n *   Tree to serialize.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized HTML.\n */\nexport function toHtml(tree, options) {\n  const options_ = options || emptyOptions\n  const quote = options_.quote || '\"'\n  const alternative = quote === '\"' ? \"'\" : '\"'\n\n  if (quote !== '\"' && quote !== \"'\") {\n    throw new Error('Invalid quote `' + quote + '`, expected `\\'` or `\"`')\n  }\n\n  /** @type {State} */\n  const state = {\n    one,\n    all,\n    settings: {\n      omitOptionalTags: options_.omitOptionalTags || false,\n      allowParseErrors: options_.allowParseErrors || false,\n      allowDangerousCharacters: options_.allowDangerousCharacters || false,\n      quoteSmart: options_.quoteSmart || false,\n      preferUnquoted: options_.preferUnquoted || false,\n      tightAttributes: options_.tightAttributes || false,\n      upperDoctype: options_.upperDoctype || false,\n      tightDoctype: options_.tightDoctype || false,\n      bogusComments: options_.bogusComments || false,\n      tightCommaSeparatedLists: options_.tightCommaSeparatedLists || false,\n      tightSelfClosing: options_.tightSelfClosing || false,\n      collapseEmptyAttributes: options_.collapseEmptyAttributes || false,\n      allowDangerousHtml: options_.allowDangerousHtml || false,\n      voids: options_.voids || htmlVoidElements,\n      characterReferences:\n        options_.characterReferences || emptyCharacterReferences,\n      closeSelfClosing: options_.closeSelfClosing || false,\n      closeEmptyElements: options_.closeEmptyElements || false\n    },\n    schema: options_.space === 'svg' ? svg : html,\n    quote,\n    alternative\n  }\n\n  return state.one(\n    Array.isArray(tree) ? {type: 'root', children: tree} : tree,\n    undefined,\n    undefined\n  )\n}\n\n/**\n * Serialize a node.\n *\n * @this {State}\n *   Info passed around about the current state.\n * @param {Nodes} node\n *   Node to handle.\n * @param {number | undefined} index\n *   Index of `node` in `parent.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(node, index, parent) {\n  return handle(node, index, parent, this)\n}\n\n/**\n * Serialize all children of `parent`.\n *\n * @this {State}\n *   Info passed around about the current state.\n * @param {Parents | undefined} parent\n *   Parent whose children to serialize.\n * @returns {string}\n */\nexport function all(parent) {\n  /** @type {Array<string>} */\n  const results = []\n  const children = (parent && parent.children) || emptyChildren\n  let index = -1\n\n  while (++index < children.length) {\n    results[index] = this.one(children[index], index, parent)\n  }\n\n  return results.join('')\n}\n", "/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast-util-to-html').Options} Options\n * @typedef {import('unified').Compiler<Root, string>} Compiler\n */\n\nimport {toHtml} from 'hast-util-to-html'\n\n/**\n * Plugin to add support for serializing as HTML.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {undefined}\n *   Nothing.\n */\nexport default function rehypeStringify(options) {\n  /** @type {import('unified').Processor<undefined, undefined, undefined, Root, string>} */\n  // @ts-expect-error: TS in JSDoc generates wrong types if `this` is typed regularly.\n  const self = this\n  const settings = {...self.data('settings'), ...options}\n\n  self.compiler = compiler\n\n  /**\n   * @type {Compiler}\n   */\n  function compiler(tree) {\n    return toHtml(tree, settings)\n  }\n}\n", "// This module is generated by `script/`.\n//\n// CommonMark handles attention (emphasis, strong) markers based on what comes\n// before or after them.\n// One such difference is if those characters are Unicode punctuation.\n// This script is generated from the Unicode data.\n\n/**\n * Regular expression that matches a unicode punctuation character.\n */\nexport const unicodePunctuationRegex =\n  /[!-\\/:-@\\[-`\\{-~\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061D-\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1B7D\\u1B7E\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52-\\u2E5D\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]/\n", "/**\n * @typedef {import('micromark-util-types').Code} Code\n */\n\nimport {unicodePunctuationRegex} from './lib/unicode-punctuation-regex.js'\n\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiAlpha = regexCheck(/[A-Za-z]/)\n\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  )\n}\n\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiDigit = regexCheck(/\\d/)\n\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2\n}\n\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32)\n}\n\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32\n}\n\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodePunctuation = regexCheck(unicodePunctuationRegex)\n\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodeWhitespace = regexCheck(/\\s/)\n\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => boolean}\n */\nfunction regexCheck(regex) {\n  return check\n\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code\n   *   Character code.\n   * @returns {boolean}\n   *   Whether the character code matches the bound regex.\n   */\n  function check(code) {\n    return code !== null && regex.test(String.fromCharCode(code))\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiControl,\n  markdownLineEndingOrSpace,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\nconst wwwPrefix = {\n  tokenize: tokenizeWwwPrefix,\n  partial: true\n}\nconst domain = {\n  tokenize: tokenizeDomain,\n  partial: true\n}\nconst path = {\n  tokenize: tokenizePath,\n  partial: true\n}\nconst trail = {\n  tokenize: tokenizeTrail,\n  partial: true\n}\nconst emailDomainDotTrail = {\n  tokenize: tokenizeEmailDomainDotTrail,\n  partial: true\n}\nconst wwwAutolink = {\n  tokenize: tokenizeWwwAutolink,\n  previous: previousWww\n}\nconst protocolAutolink = {\n  tokenize: tokenizeProtocolAutolink,\n  previous: previousProtocol\n}\nconst emailAutolink = {\n  tokenize: tokenizeEmailAutolink,\n  previous: previousEmail\n}\n\n/** @type {ConstructRecord} */\nconst text = {}\n\n// To do: next major: expose functions that yields extension.\n\n/**\n * Extension for `micromark` that can be passed in `extensions` to enable GFM\n * autolink literal syntax.\n *\n * @type {Extension}\n */\nexport const gfmAutolinkLiteral = {\n  text\n}\n\n/** @type {Code} */\nlet code = 48\n\n// Add alphanumerics.\nwhile (code < 123) {\n  text[code] = emailAutolink\n  code++\n  if (code === 58) code = 65\n  else if (code === 91) code = 97\n}\ntext[43] = emailAutolink\ntext[45] = emailAutolink\ntext[46] = emailAutolink\ntext[95] = emailAutolink\ntext[72] = [emailAutolink, protocolAutolink]\ntext[104] = [emailAutolink, protocolAutolink]\ntext[87] = [emailAutolink, wwwAutolink]\ntext[119] = [emailAutolink, wwwAutolink]\n\n// To do: perform email autolink literals on events, afterwards.\n// That\u2019s where `markdown-rs` and `cmark-gfm` perform it.\n// It should look for `@`, then for atext backwards, and then for a label\n// forwards.\n// To do: `mailto:`, `xmpp:` protocol as prefix.\n\n/**\n * Email autolink literal.\n *\n * ```markdown\n * > | a contact@example.org b\n *       ^^^^^^^^^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeEmailAutolink(effects, ok, nok) {\n  const self = this\n  /** @type {boolean | undefined} */\n  let dot\n  /** @type {boolean} */\n  let data\n  return start\n\n  /**\n   * Start of email autolink literal.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (\n      !gfmAtext(code) ||\n      !previousEmail.call(self, self.previous) ||\n      previousUnbalanced(self.events)\n    ) {\n      return nok(code)\n    }\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkEmail')\n    return atext(code)\n  }\n\n  /**\n   * In email atext.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atext(code) {\n    if (gfmAtext(code)) {\n      effects.consume(code)\n      return atext\n    }\n    if (code === 64) {\n      effects.consume(code)\n      return emailDomain\n    }\n    return nok(code)\n  }\n\n  /**\n   * In email domain.\n   *\n   * The reference code is a bit overly complex as it handles the `@`, of which\n   * there may be just one.\n   * Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L318>\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailDomain(code) {\n    // Dot followed by alphanumerical (not `-` or `_`).\n    if (code === 46) {\n      return effects.check(\n        emailDomainDotTrail,\n        emailDomainAfter,\n        emailDomainDot\n      )(code)\n    }\n\n    // Alphanumerical, `-`, and `_`.\n    if (code === 45 || code === 95 || asciiAlphanumeric(code)) {\n      data = true\n      effects.consume(code)\n      return emailDomain\n    }\n\n    // To do: `/` if xmpp.\n\n    // Note: normally we\u2019d truncate trailing punctuation from the link.\n    // However, email autolink literals cannot contain any of those markers,\n    // except for `.`, but that can only occur if it isn\u2019t trailing.\n    // So we can ignore truncating!\n    return emailDomainAfter(code)\n  }\n\n  /**\n   * In email domain, on dot that is not a trail.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *                      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailDomainDot(code) {\n    effects.consume(code)\n    dot = true\n    return emailDomain\n  }\n\n  /**\n   * After email domain.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *                          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailDomainAfter(code) {\n    // Domain must not be empty, must include a dot, and must end in alphabetical.\n    // Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L332>.\n    if (data && dot && asciiAlpha(self.previous)) {\n      effects.exit('literalAutolinkEmail')\n      effects.exit('literalAutolink')\n      return ok(code)\n    }\n    return nok(code)\n  }\n}\n\n/**\n * `www` autolink literal.\n *\n * ```markdown\n * > | a www.example.org b\n *       ^^^^^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeWwwAutolink(effects, ok, nok) {\n  const self = this\n  return wwwStart\n\n  /**\n   * Start of www autolink literal.\n   *\n   * ```markdown\n   * > | www.example.com/a?b#c\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwStart(code) {\n    if (\n      (code !== 87 && code !== 119) ||\n      !previousWww.call(self, self.previous) ||\n      previousUnbalanced(self.events)\n    ) {\n      return nok(code)\n    }\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkWww')\n    // Note: we *check*, so we can discard the `www.` we parsed.\n    // If it worked, we consider it as a part of the domain.\n    return effects.check(\n      wwwPrefix,\n      effects.attempt(domain, effects.attempt(path, wwwAfter), nok),\n      nok\n    )(code)\n  }\n\n  /**\n   * After a www autolink literal.\n   *\n   * ```markdown\n   * > | www.example.com/a?b#c\n   *                          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwAfter(code) {\n    effects.exit('literalAutolinkWww')\n    effects.exit('literalAutolink')\n    return ok(code)\n  }\n}\n\n/**\n * Protocol autolink literal.\n *\n * ```markdown\n * > | a https://example.org b\n *       ^^^^^^^^^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeProtocolAutolink(effects, ok, nok) {\n  const self = this\n  let buffer = ''\n  let seen = false\n  return protocolStart\n\n  /**\n   * Start of protocol autolink literal.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolStart(code) {\n    if (\n      (code === 72 || code === 104) &&\n      previousProtocol.call(self, self.previous) &&\n      !previousUnbalanced(self.events)\n    ) {\n      effects.enter('literalAutolink')\n      effects.enter('literalAutolinkHttp')\n      buffer += String.fromCodePoint(code)\n      effects.consume(code)\n      return protocolPrefixInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * In protocol.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *     ^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolPrefixInside(code) {\n    // `5` is size of `https`\n    if (asciiAlpha(code) && buffer.length < 5) {\n      // @ts-expect-error: definitely number.\n      buffer += String.fromCodePoint(code)\n      effects.consume(code)\n      return protocolPrefixInside\n    }\n    if (code === 58) {\n      const protocol = buffer.toLowerCase()\n      if (protocol === 'http' || protocol === 'https') {\n        effects.consume(code)\n        return protocolSlashesInside\n      }\n    }\n    return nok(code)\n  }\n\n  /**\n   * In slashes.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *           ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolSlashesInside(code) {\n    if (code === 47) {\n      effects.consume(code)\n      if (seen) {\n        return afterProtocol\n      }\n      seen = true\n      return protocolSlashesInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * After protocol, before domain.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterProtocol(code) {\n    // To do: this is different from `markdown-rs`:\n    // https://github.com/wooorm/markdown-rs/blob/b3a921c761309ae00a51fe348d8a43adbc54b518/src/construct/gfm_autolink_literal.rs#L172-L182\n    return code === null ||\n      asciiControl(code) ||\n      markdownLineEndingOrSpace(code) ||\n      unicodeWhitespace(code) ||\n      unicodePunctuation(code)\n      ? nok(code)\n      : effects.attempt(domain, effects.attempt(path, protocolAfter), nok)(code)\n  }\n\n  /**\n   * After a protocol autolink literal.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *                              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolAfter(code) {\n    effects.exit('literalAutolinkHttp')\n    effects.exit('literalAutolink')\n    return ok(code)\n  }\n}\n\n/**\n * `www` prefix.\n *\n * ```markdown\n * > | a www.example.org b\n *       ^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeWwwPrefix(effects, ok, nok) {\n  let size = 0\n  return wwwPrefixInside\n\n  /**\n   * In www prefix.\n   *\n   * ```markdown\n   * > | www.example.com\n   *     ^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwPrefixInside(code) {\n    if ((code === 87 || code === 119) && size < 3) {\n      size++\n      effects.consume(code)\n      return wwwPrefixInside\n    }\n    if (code === 46 && size === 3) {\n      effects.consume(code)\n      return wwwPrefixAfter\n    }\n    return nok(code)\n  }\n\n  /**\n   * After www prefix.\n   *\n   * ```markdown\n   * > | www.example.com\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwPrefixAfter(code) {\n    // If there is *anything*, we can link.\n    return code === null ? nok(code) : ok(code)\n  }\n}\n\n/**\n * Domain.\n *\n * ```markdown\n * > | a https://example.org b\n *               ^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDomain(effects, ok, nok) {\n  /** @type {boolean | undefined} */\n  let underscoreInLastSegment\n  /** @type {boolean | undefined} */\n  let underscoreInLastLastSegment\n  /** @type {boolean | undefined} */\n  let seen\n  return domainInside\n\n  /**\n   * In domain.\n   *\n   * ```markdown\n   * > | https://example.com/a\n   *             ^^^^^^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function domainInside(code) {\n    // Check whether this marker, which is a trailing punctuation\n    // marker, optionally followed by more trailing markers, and then\n    // followed by an end.\n    if (code === 46 || code === 95) {\n      return effects.check(trail, domainAfter, domainAtPunctuation)(code)\n    }\n\n    // GH documents that only alphanumerics (other than `-`, `.`, and `_`) can\n    // occur, which sounds like ASCII only, but they also support `www.\u9EDE\u770B.com`,\n    // so that\u2019s Unicode.\n    // Instead of some new production for Unicode alphanumerics, markdown\n    // already has that for Unicode punctuation and whitespace, so use those.\n    // Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L12>.\n    if (\n      code === null ||\n      markdownLineEndingOrSpace(code) ||\n      unicodeWhitespace(code) ||\n      (code !== 45 && unicodePunctuation(code))\n    ) {\n      return domainAfter(code)\n    }\n    seen = true\n    effects.consume(code)\n    return domainInside\n  }\n\n  /**\n   * In domain, at potential trailing punctuation, that was not trailing.\n   *\n   * ```markdown\n   * > | https://example.com\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function domainAtPunctuation(code) {\n    // There is an underscore in the last segment of the domain\n    if (code === 95) {\n      underscoreInLastSegment = true\n    }\n    // Otherwise, it\u2019s a `.`: save the last segment underscore in the\n    // penultimate segment slot.\n    else {\n      underscoreInLastLastSegment = underscoreInLastSegment\n      underscoreInLastSegment = undefined\n    }\n    effects.consume(code)\n    return domainInside\n  }\n\n  /**\n   * After domain.\n   *\n   * ```markdown\n   * > | https://example.com/a\n   *                        ^\n   * ```\n   *\n   * @type {State} */\n  function domainAfter(code) {\n    // Note: that\u2019s GH says a dot is needed, but it\u2019s not true:\n    // <https://github.com/github/cmark-gfm/issues/279>\n    if (underscoreInLastLastSegment || underscoreInLastSegment || !seen) {\n      return nok(code)\n    }\n    return ok(code)\n  }\n}\n\n/**\n * Path.\n *\n * ```markdown\n * > | a https://example.org/stuff b\n *                          ^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizePath(effects, ok) {\n  let sizeOpen = 0\n  let sizeClose = 0\n  return pathInside\n\n  /**\n   * In path.\n   *\n   * ```markdown\n   * > | https://example.com/a\n   *                        ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function pathInside(code) {\n    if (code === 40) {\n      sizeOpen++\n      effects.consume(code)\n      return pathInside\n    }\n\n    // To do: `markdown-rs` also needs this.\n    // If this is a paren, and there are less closings than openings,\n    // we don\u2019t check for a trail.\n    if (code === 41 && sizeClose < sizeOpen) {\n      return pathAtPunctuation(code)\n    }\n\n    // Check whether this trailing punctuation marker is optionally\n    // followed by more trailing markers, and then followed\n    // by an end.\n    if (\n      code === 33 ||\n      code === 34 ||\n      code === 38 ||\n      code === 39 ||\n      code === 41 ||\n      code === 42 ||\n      code === 44 ||\n      code === 46 ||\n      code === 58 ||\n      code === 59 ||\n      code === 60 ||\n      code === 63 ||\n      code === 93 ||\n      code === 95 ||\n      code === 126\n    ) {\n      return effects.check(trail, ok, pathAtPunctuation)(code)\n    }\n    if (\n      code === null ||\n      markdownLineEndingOrSpace(code) ||\n      unicodeWhitespace(code)\n    ) {\n      return ok(code)\n    }\n    effects.consume(code)\n    return pathInside\n  }\n\n  /**\n   * In path, at potential trailing punctuation, that was not trailing.\n   *\n   * ```markdown\n   * > | https://example.com/a\"b\n   *                          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function pathAtPunctuation(code) {\n    // Count closing parens.\n    if (code === 41) {\n      sizeClose++\n    }\n    effects.consume(code)\n    return pathInside\n  }\n}\n\n/**\n * Trail.\n *\n * This calls `ok` if this *is* the trail, followed by an end, which means\n * the entire trail is not part of the link.\n * It calls `nok` if this *is* part of the link.\n *\n * ```markdown\n * > | https://example.com\").\n *                        ^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTrail(effects, ok, nok) {\n  return trail\n\n  /**\n   * In trail of domain or path.\n   *\n   * ```markdown\n   * > | https://example.com\").\n   *                        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trail(code) {\n    // Regular trailing punctuation.\n    if (\n      code === 33 ||\n      code === 34 ||\n      code === 39 ||\n      code === 41 ||\n      code === 42 ||\n      code === 44 ||\n      code === 46 ||\n      code === 58 ||\n      code === 59 ||\n      code === 63 ||\n      code === 95 ||\n      code === 126\n    ) {\n      effects.consume(code)\n      return trail\n    }\n\n    // `&` followed by one or more alphabeticals and then a `;`, is\n    // as a whole considered as trailing punctuation.\n    // In all other cases, it is considered as continuation of the URL.\n    if (code === 38) {\n      effects.consume(code)\n      return trailCharRefStart\n    }\n\n    // Needed because we allow literals after `[`, as we fix:\n    // <https://github.com/github/cmark-gfm/issues/278>.\n    // Check that it is not followed by `(` or `[`.\n    if (code === 93) {\n      effects.consume(code)\n      return trailBracketAfter\n    }\n    if (\n      // `<` is an end.\n      code === 60 ||\n      // So is whitespace.\n      code === null ||\n      markdownLineEndingOrSpace(code) ||\n      unicodeWhitespace(code)\n    ) {\n      return ok(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * In trail, after `]`.\n   *\n   * > \uD83D\uDC49 **Note**: this deviates from `cmark-gfm` to fix a bug.\n   * > See end of <https://github.com/github/cmark-gfm/issues/278> for more.\n   *\n   * ```markdown\n   * > | https://example.com](\n   *                         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trailBracketAfter(code) {\n    // Whitespace or something that could start a resource or reference is the end.\n    // Switch back to trail otherwise.\n    if (\n      code === null ||\n      code === 40 ||\n      code === 91 ||\n      markdownLineEndingOrSpace(code) ||\n      unicodeWhitespace(code)\n    ) {\n      return ok(code)\n    }\n    return trail(code)\n  }\n\n  /**\n   * In character-reference like trail, after `&`.\n   *\n   * ```markdown\n   * > | https://example.com&amp;).\n   *                         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trailCharRefStart(code) {\n    // When non-alpha, it\u2019s not a trail.\n    return asciiAlpha(code) ? trailCharRefInside(code) : nok(code)\n  }\n\n  /**\n   * In character-reference like trail.\n   *\n   * ```markdown\n   * > | https://example.com&amp;).\n   *                         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trailCharRefInside(code) {\n    // Switch back to trail if this is well-formed.\n    if (code === 59) {\n      effects.consume(code)\n      return trail\n    }\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return trailCharRefInside\n    }\n\n    // It\u2019s not a trail.\n    return nok(code)\n  }\n}\n\n/**\n * Dot in email domain trail.\n *\n * This calls `ok` if this *is* the trail, followed by an end, which means\n * the trail is not part of the link.\n * It calls `nok` if this *is* part of the link.\n *\n * ```markdown\n * > | contact@example.org.\n *                        ^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeEmailDomainDotTrail(effects, ok, nok) {\n  return start\n\n  /**\n   * Dot.\n   *\n   * ```markdown\n   * > | contact@example.org.\n   *                    ^   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // Must be dot.\n    effects.consume(code)\n    return after\n  }\n\n  /**\n   * After dot.\n   *\n   * ```markdown\n   * > | contact@example.org.\n   *                     ^   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // Not a trail if alphanumeric.\n    return asciiAlphanumeric(code) ? nok(code) : ok(code)\n  }\n}\n\n/**\n * See:\n * <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L156>.\n *\n * @type {Previous}\n */\nfunction previousWww(code) {\n  return (\n    code === null ||\n    code === 40 ||\n    code === 42 ||\n    code === 95 ||\n    code === 91 ||\n    code === 93 ||\n    code === 126 ||\n    markdownLineEndingOrSpace(code)\n  )\n}\n\n/**\n * See:\n * <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L214>.\n *\n * @type {Previous}\n */\nfunction previousProtocol(code) {\n  return !asciiAlpha(code)\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Previous}\n */\nfunction previousEmail(code) {\n  // Do not allow a slash \u201Cinside\u201D atext.\n  // The reference code is a bit weird, but that\u2019s what it results in.\n  // Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L307>.\n  // Other than slash, every preceding character is allowed.\n  return !(code === 47 || gfmAtext(code))\n}\n\n/**\n * @param {Code} code\n * @returns {boolean}\n */\nfunction gfmAtext(code) {\n  return (\n    code === 43 ||\n    code === 45 ||\n    code === 46 ||\n    code === 95 ||\n    asciiAlphanumeric(code)\n  )\n}\n\n/**\n * @param {Array<Event>} events\n * @returns {boolean}\n */\nfunction previousUnbalanced(events) {\n  let index = events.length\n  let result = false\n  while (index--) {\n    const token = events[index][1]\n    if (\n      (token.type === 'labelLink' || token.type === 'labelImage') &&\n      !token._balanced\n    ) {\n      result = true\n      break\n    }\n\n    // If we\u2019ve seen this token, and it was marked as not having any unbalanced\n    // bracket before it, we can exit.\n    if (token._gfmAutolinkLiteralWalkedInto) {\n      result = false\n      break\n    }\n  }\n  if (events.length > 0 && !result) {\n    // Mark the last token as \u201Cwalked into\u201D w/o finding\n    // anything.\n    events[events.length - 1][1]._gfmAutolinkLiteralWalkedInto = true\n  }\n  return result\n}\n", "// This module is generated by `script/`.\n//\n// CommonMark handles attention (emphasis, strong) markers based on what comes\n// before or after them.\n// One such difference is if those characters are Unicode punctuation.\n// This script is generated from the Unicode data.\n\n/**\n * Regular expression that matches a unicode punctuation character.\n */\nexport const unicodePunctuationRegex =\n  /[!-\\/:-@\\[-`\\{-~\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061D-\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1B7D\\u1B7E\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52-\\u2E5D\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]/\n", "/**\n * @typedef {import('micromark-util-types').Code} Code\n */\n\nimport {unicodePunctuationRegex} from './lib/unicode-punctuation-regex.js'\n\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiAlpha = regexCheck(/[A-Za-z]/)\n\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  )\n}\n\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiDigit = regexCheck(/\\d/)\n\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2\n}\n\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32)\n}\n\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32\n}\n\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodePunctuation = regexCheck(unicodePunctuationRegex)\n\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodeWhitespace = regexCheck(/\\s/)\n\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => boolean}\n */\nfunction regexCheck(regex) {\n  return check\n\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code\n   *   Character code.\n   * @returns {boolean}\n   *   Whether the character code matches the bound regex.\n   */\n  function check(code) {\n    return code !== null && regex.test(String.fromCharCode(code))\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {blankLine} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEndingOrSpace} from 'micromark-util-character'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nconst indent = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n\n// To do: micromark should support a `_hiddenGfmFootnoteSupport`, which only\n// affects label start (image).\n// That will let us drop `tokenizePotentialGfmFootnote*`.\n// It currently has a `_hiddenFootnoteSupport`, which affects that and more.\n// That can be removed when `micromark-extension-footnote` is archived.\n\n/**\n * Create an extension for `micromark` to enable GFM footnote syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to\n *   enable GFM footnote syntax.\n */\nexport function gfmFootnote() {\n  /** @type {Extension} */\n  return {\n    document: {\n      [91]: {\n        tokenize: tokenizeDefinitionStart,\n        continuation: {\n          tokenize: tokenizeDefinitionContinuation\n        },\n        exit: gfmFootnoteDefinitionEnd\n      }\n    },\n    text: {\n      [91]: {\n        tokenize: tokenizeGfmFootnoteCall\n      },\n      [93]: {\n        add: 'after',\n        tokenize: tokenizePotentialGfmFootnoteCall,\n        resolveTo: resolveToPotentialGfmFootnoteCall\n      }\n    }\n  }\n}\n\n// To do: remove after micromark update.\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizePotentialGfmFootnoteCall(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {Array<string>} */\n  // @ts-expect-error It\u2019s fine!\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  /** @type {Token} */\n  let labelStart\n\n  // Find an opening.\n  while (index--) {\n    const token = self.events[index][1]\n    if (token.type === 'labelImage') {\n      labelStart = token\n      break\n    }\n\n    // Exit if we\u2019ve walked far enough.\n    if (\n      token.type === 'gfmFootnoteCall' ||\n      token.type === 'labelLink' ||\n      token.type === 'label' ||\n      token.type === 'image' ||\n      token.type === 'link'\n    ) {\n      break\n    }\n  }\n  return start\n\n  /**\n   * @type {State}\n   */\n  function start(code) {\n    if (!labelStart || !labelStart._balanced) {\n      return nok(code)\n    }\n    const id = normalizeIdentifier(\n      self.sliceSerialize({\n        start: labelStart.end,\n        end: self.now()\n      })\n    )\n    if (id.codePointAt(0) !== 94 || !defined.includes(id.slice(1))) {\n      return nok(code)\n    }\n    effects.enter('gfmFootnoteCallLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallLabelMarker')\n    return ok(code)\n  }\n}\n\n// To do: remove after micromark update.\n/** @type {Resolver} */\nfunction resolveToPotentialGfmFootnoteCall(events, context) {\n  let index = events.length\n  /** @type {Token | undefined} */\n  let labelStart\n\n  // Find an opening.\n  while (index--) {\n    if (\n      events[index][1].type === 'labelImage' &&\n      events[index][0] === 'enter'\n    ) {\n      labelStart = events[index][1]\n      break\n    }\n  }\n  // Change the `labelImageMarker` to a `data`.\n  events[index + 1][1].type = 'data'\n  events[index + 3][1].type = 'gfmFootnoteCallLabelMarker'\n\n  // The whole (without `!`):\n  /** @type {Token} */\n  const call = {\n    type: 'gfmFootnoteCall',\n    start: Object.assign({}, events[index + 3][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n  // The `^` marker\n  /** @type {Token} */\n  const marker = {\n    type: 'gfmFootnoteCallMarker',\n    start: Object.assign({}, events[index + 3][1].end),\n    end: Object.assign({}, events[index + 3][1].end)\n  }\n  // Increment the end 1 character.\n  marker.end.column++\n  marker.end.offset++\n  marker.end._bufferIndex++\n  /** @type {Token} */\n  const string = {\n    type: 'gfmFootnoteCallString',\n    start: Object.assign({}, marker.end),\n    end: Object.assign({}, events[events.length - 1][1].start)\n  }\n  /** @type {Token} */\n  const chunk = {\n    type: 'chunkString',\n    contentType: 'string',\n    start: Object.assign({}, string.start),\n    end: Object.assign({}, string.end)\n  }\n\n  /** @type {Array<Event>} */\n  const replacement = [\n    // Take the `labelImageMarker` (now `data`, the `!`)\n    events[index + 1],\n    events[index + 2],\n    ['enter', call, context],\n    // The `[`\n    events[index + 3],\n    events[index + 4],\n    // The `^`.\n    ['enter', marker, context],\n    ['exit', marker, context],\n    // Everything in between.\n    ['enter', string, context],\n    ['enter', chunk, context],\n    ['exit', chunk, context],\n    ['exit', string, context],\n    // The ending (`]`, properly parsed and labelled).\n    events[events.length - 2],\n    events[events.length - 1],\n    ['exit', call, context]\n  ]\n  events.splice(index, events.length - index + 1, ...replacement)\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeGfmFootnoteCall(effects, ok, nok) {\n  const self = this\n  /** @type {Array<string>} */\n  // @ts-expect-error It\u2019s fine!\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  let size = 0\n  /** @type {boolean} */\n  let data\n\n  // Note: the implementation of `markdown-rs` is different, because it houses\n  // core *and* extensions in one project.\n  // Therefore, it can include footnote logic inside `label-end`.\n  // We can\u2019t do that, but luckily, we can parse footnotes in a simpler way than\n  // needed for labels.\n  return start\n\n  /**\n   * Start of footnote label.\n   *\n   * ```markdown\n   * > | a [^b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('gfmFootnoteCall')\n    effects.enter('gfmFootnoteCallLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallLabelMarker')\n    return callStart\n  }\n\n  /**\n   * After `[`, at `^`.\n   *\n   * ```markdown\n   * > | a [^b] c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function callStart(code) {\n    if (code !== 94) return nok(code)\n    effects.enter('gfmFootnoteCallMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallMarker')\n    effects.enter('gfmFootnoteCallString')\n    effects.enter('chunkString').contentType = 'string'\n    return callData\n  }\n\n  /**\n   * In label.\n   *\n   * ```markdown\n   * > | a [^b] c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function callData(code) {\n    if (\n      // Too long.\n      size > 999 ||\n      // Closing brace with nothing.\n      (code === 93 && !data) ||\n      // Space or tab is not supported by GFM for some reason.\n      // `\\n` and `[` not being supported makes sense.\n      code === null ||\n      code === 91 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return nok(code)\n    }\n    if (code === 93) {\n      effects.exit('chunkString')\n      const token = effects.exit('gfmFootnoteCallString')\n      if (!defined.includes(normalizeIdentifier(self.sliceSerialize(token)))) {\n        return nok(code)\n      }\n      effects.enter('gfmFootnoteCallLabelMarker')\n      effects.consume(code)\n      effects.exit('gfmFootnoteCallLabelMarker')\n      effects.exit('gfmFootnoteCall')\n      return ok\n    }\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true\n    }\n    size++\n    effects.consume(code)\n    return code === 92 ? callEscape : callData\n  }\n\n  /**\n   * On character after escape.\n   *\n   * ```markdown\n   * > | a [^b\\c] d\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function callEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return callData\n    }\n    return callData(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDefinitionStart(effects, ok, nok) {\n  const self = this\n  /** @type {Array<string>} */\n  // @ts-expect-error It\u2019s fine!\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  /** @type {string} */\n  let identifier\n  let size = 0\n  /** @type {boolean | undefined} */\n  let data\n  return start\n\n  /**\n   * Start of GFM footnote definition.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('gfmFootnoteDefinition')._container = true\n    effects.enter('gfmFootnoteDefinitionLabel')\n    effects.enter('gfmFootnoteDefinitionLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteDefinitionLabelMarker')\n    return labelAtMarker\n  }\n\n  /**\n   * In label, at caret.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAtMarker(code) {\n    if (code === 94) {\n      effects.enter('gfmFootnoteDefinitionMarker')\n      effects.consume(code)\n      effects.exit('gfmFootnoteDefinitionMarker')\n      effects.enter('gfmFootnoteDefinitionLabelString')\n      effects.enter('chunkString').contentType = 'string'\n      return labelInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * In label.\n   *\n   * > \uD83D\uDC49 **Note**: `cmark-gfm` prevents whitespace from occurring in footnote\n   * > definition labels.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelInside(code) {\n    if (\n      // Too long.\n      size > 999 ||\n      // Closing brace with nothing.\n      (code === 93 && !data) ||\n      // Space or tab is not supported by GFM for some reason.\n      // `\\n` and `[` not being supported makes sense.\n      code === null ||\n      code === 91 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return nok(code)\n    }\n    if (code === 93) {\n      effects.exit('chunkString')\n      const token = effects.exit('gfmFootnoteDefinitionLabelString')\n      identifier = normalizeIdentifier(self.sliceSerialize(token))\n      effects.enter('gfmFootnoteDefinitionLabelMarker')\n      effects.consume(code)\n      effects.exit('gfmFootnoteDefinitionLabelMarker')\n      effects.exit('gfmFootnoteDefinitionLabel')\n      return labelAfter\n    }\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true\n    }\n    size++\n    effects.consume(code)\n    return code === 92 ? labelEscape : labelInside\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * > \uD83D\uDC49 **Note**: `cmark-gfm` currently does not support escaped brackets:\n   * > <https://github.com/github/cmark-gfm/issues/240>\n   *\n   * ```markdown\n   * > | [^a\\*b]: c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return labelInside\n    }\n    return labelInside(code)\n  }\n\n  /**\n   * After definition label.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAfter(code) {\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker')\n      if (!defined.includes(identifier)) {\n        defined.push(identifier)\n      }\n\n      // Any whitespace after the marker is eaten, forming indented code\n      // is not possible.\n      // No space is also fine, just like a block quote marker.\n      return factorySpace(\n        effects,\n        whitespaceAfter,\n        'gfmFootnoteDefinitionWhitespace'\n      )\n    }\n    return nok(code)\n  }\n\n  /**\n   * After definition prefix.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function whitespaceAfter(code) {\n    // `markdown-rs` has a wrapping token for the prefix that is closed here.\n    return ok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDefinitionContinuation(effects, ok, nok) {\n  /// Start of footnote definition continuation.\n  ///\n  /// ```markdown\n  ///   | [^a]: b\n  /// > |     c\n  ///     ^\n  /// ```\n  //\n  // Either a blank line, which is okay, or an indented thing.\n  return effects.check(blankLine, ok, effects.attempt(indent, ok, nok))\n}\n\n/** @type {Exiter} */\nfunction gfmFootnoteDefinitionEnd(effects) {\n  effects.exit('gfmFootnoteDefinition')\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'gfmFootnoteDefinitionIndent',\n    4 + 1\n  )\n\n  /**\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'gfmFootnoteDefinitionIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === 4\n      ? ok(code)\n      : nok(code)\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean} [singleTilde=true]\n *   Whether to support strikethrough with a single tilde.\n *\n *   Single tildes work on github.com, but are technically prohibited by the\n *   GFM spec.\n */\n\nimport {splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n/**\n * Create an extension for `micromark` to enable GFM strikethrough syntax.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions`, to\n *   enable GFM strikethrough syntax.\n */\nexport function gfmStrikethrough(options) {\n  const options_ = options || {}\n  let single = options_.singleTilde\n  const tokenizer = {\n    tokenize: tokenizeStrikethrough,\n    resolveAll: resolveAllStrikethrough\n  }\n  if (single === null || single === undefined) {\n    single = true\n  }\n  return {\n    text: {\n      [126]: tokenizer\n    },\n    insideSpan: {\n      null: [tokenizer]\n    },\n    attentionMarkers: {\n      null: [126]\n    }\n  }\n\n  /**\n   * Take events and resolve strikethrough.\n   *\n   * @type {Resolver}\n   */\n  function resolveAllStrikethrough(events, context) {\n    let index = -1\n\n    // Walk through all events.\n    while (++index < events.length) {\n      // Find a token that can close.\n      if (\n        events[index][0] === 'enter' &&\n        events[index][1].type === 'strikethroughSequenceTemporary' &&\n        events[index][1]._close\n      ) {\n        let open = index\n\n        // Now walk back to find an opener.\n        while (open--) {\n          // Find a token that can open the closer.\n          if (\n            events[open][0] === 'exit' &&\n            events[open][1].type === 'strikethroughSequenceTemporary' &&\n            events[open][1]._open &&\n            // If the sizes are the same:\n            events[index][1].end.offset - events[index][1].start.offset ===\n              events[open][1].end.offset - events[open][1].start.offset\n          ) {\n            events[index][1].type = 'strikethroughSequence'\n            events[open][1].type = 'strikethroughSequence'\n\n            /** @type {Token} */\n            const strikethrough = {\n              type: 'strikethrough',\n              start: Object.assign({}, events[open][1].start),\n              end: Object.assign({}, events[index][1].end)\n            }\n\n            /** @type {Token} */\n            const text = {\n              type: 'strikethroughText',\n              start: Object.assign({}, events[open][1].end),\n              end: Object.assign({}, events[index][1].start)\n            }\n\n            // Opening.\n            /** @type {Array<Event>} */\n            const nextEvents = [\n              ['enter', strikethrough, context],\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context],\n              ['enter', text, context]\n            ]\n            const insideSpan = context.parser.constructs.insideSpan.null\n            if (insideSpan) {\n              // Between.\n              splice(\n                nextEvents,\n                nextEvents.length,\n                0,\n                resolveAll(insideSpan, events.slice(open + 1, index), context)\n              )\n            }\n\n            // Closing.\n            splice(nextEvents, nextEvents.length, 0, [\n              ['exit', text, context],\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context],\n              ['exit', strikethrough, context]\n            ])\n            splice(events, open - 1, index - open + 3, nextEvents)\n            index = open + nextEvents.length - 2\n            break\n          }\n        }\n      }\n    }\n    index = -1\n    while (++index < events.length) {\n      if (events[index][1].type === 'strikethroughSequenceTemporary') {\n        events[index][1].type = 'data'\n      }\n    }\n    return events\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Tokenizer}\n   */\n  function tokenizeStrikethrough(effects, ok, nok) {\n    const previous = this.previous\n    const events = this.events\n    let size = 0\n    return start\n\n    /** @type {State} */\n    function start(code) {\n      if (\n        previous === 126 &&\n        events[events.length - 1][1].type !== 'characterEscape'\n      ) {\n        return nok(code)\n      }\n      effects.enter('strikethroughSequenceTemporary')\n      return more(code)\n    }\n\n    /** @type {State} */\n    function more(code) {\n      const before = classifyCharacter(previous)\n      if (code === 126) {\n        // If this is the third marker, exit.\n        if (size > 1) return nok(code)\n        effects.consume(code)\n        size++\n        return more\n      }\n      if (size < 2 && !single) return nok(code)\n      const token = effects.exit('strikethroughSequenceTemporary')\n      const after = classifyCharacter(code)\n      token._open = !after || (after === 2 && Boolean(before))\n      token._close = !before || (before === 2 && Boolean(after))\n      return ok(code)\n    }\n  }\n}\n", "// This module is generated by `script/`.\n//\n// CommonMark handles attention (emphasis, strong) markers based on what comes\n// before or after them.\n// One such difference is if those characters are Unicode punctuation.\n// This script is generated from the Unicode data.\n\n/**\n * Regular expression that matches a unicode punctuation character.\n */\nexport const unicodePunctuationRegex =\n  /[!-\\/:-@\\[-`\\{-~\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061D-\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1B7D\\u1B7E\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52-\\u2E5D\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]/\n", "/**\n * @typedef {import('micromark-util-types').Code} Code\n */\n\nimport {unicodePunctuationRegex} from './lib/unicode-punctuation-regex.js'\n\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiAlpha = regexCheck(/[A-Za-z]/)\n\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  )\n}\n\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiDigit = regexCheck(/\\d/)\n\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2\n}\n\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32)\n}\n\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32\n}\n\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodePunctuation = regexCheck(unicodePunctuationRegex)\n\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodeWhitespace = regexCheck(/\\s/)\n\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => boolean}\n */\nfunction regexCheck(regex) {\n  return check\n\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code\n   *   Character code.\n   * @returns {boolean}\n   *   Whether the character code matches the bound regex.\n   */\n  function check(code) {\n    return code !== null && regex.test(String.fromCharCode(code))\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').Event} Event\n */\n\n// Port of `edit_map.rs` from `markdown-rs`.\n// This should move to `markdown-js` later.\n\n// Deal with several changes in events, batching them together.\n//\n// Preferably, changes should be kept to a minimum.\n// Sometimes, it\u2019s needed to change the list of events, because parsing can be\n// messy, and it helps to expose a cleaner interface of events to the compiler\n// and other users.\n// It can also help to merge many adjacent similar events.\n// And, in other cases, it\u2019s needed to parse subcontent: pass some events\n// through another tokenizer and inject the result.\n\n/**\n * @typedef {[number, number, Array<Event>]} Change\n * @typedef {[number, number, number]} Jump\n */\n\n/**\n * Tracks a bunch of edits.\n */\nexport class EditMap {\n  /**\n   * Create a new edit map.\n   */\n  constructor() {\n    /**\n     * Record of changes.\n     *\n     * @type {Array<Change>}\n     */\n    this.map = []\n  }\n\n  /**\n   * Create an edit: a remove and/or add at a certain place.\n   *\n   * @param {number} index\n   * @param {number} remove\n   * @param {Array<Event>} add\n   * @returns {void}\n   */\n  add(index, remove, add) {\n    addImpl(this, index, remove, add)\n  }\n\n  // To do: not used here.\n  // /**\n  //  * Create an edit: but insert `add` before existing additions.\n  //  *\n  //  * @param {number} index\n  //  * @param {number} remove\n  //  * @param {Array<Event>} add\n  //  * @returns {void}\n  //  */\n  // addBefore(index, remove, add) {\n  //   addImpl(this, index, remove, add, true)\n  // }\n\n  /**\n   * Done, change the events.\n   *\n   * @param {Array<Event>} events\n   * @returns {void}\n   */\n  consume(events) {\n    this.map.sort((a, b) => a[0] - b[0])\n\n    /* c8 ignore next 3 -- `resolve` is never called without tables, so without edits. */\n    if (this.map.length === 0) {\n      return\n    }\n\n    // To do: if links are added in events, like they are in `markdown-rs`,\n    // this is needed.\n    // // Calculate jumps: where items in the current list move to.\n    // /** @type {Array<Jump>} */\n    // const jumps = []\n    // let index = 0\n    // let addAcc = 0\n    // let removeAcc = 0\n    // while (index < this.map.length) {\n    //   const [at, remove, add] = this.map[index]\n    //   removeAcc += remove\n    //   addAcc += add.length\n    //   jumps.push([at, removeAcc, addAcc])\n    //   index += 1\n    // }\n    //\n    // . shiftLinks(events, jumps)\n\n    let index = this.map.length\n    /** @type {Array<Array<Event>>} */\n    const vecs = []\n    while (index > 0) {\n      index -= 1\n      vecs.push(events.slice(this.map[index][0] + this.map[index][1]))\n      // eslint-disable-next-line unicorn/no-array-push-push\n      vecs.push(this.map[index][2])\n\n      // Truncate rest.\n      events.length = this.map[index][0]\n    }\n    vecs.push([...events])\n    events.length = 0\n    let slice = vecs.pop()\n    while (slice) {\n      events.push(...slice)\n      slice = vecs.pop()\n    }\n\n    // Truncate everything.\n    this.map.length = 0\n  }\n}\n\n/**\n * Create an edit.\n *\n * @param {EditMap} editMap\n * @param {number} at\n * @param {number} remove\n * @param {Array<Event>} add\n * @returns {void}\n */\nfunction addImpl(editMap, at, remove, add) {\n  let index = 0\n\n  /* c8 ignore next 3 -- `resolve` is never called without tables, so without edits. */\n  if (remove === 0 && add.length === 0) {\n    return\n  }\n  while (index < editMap.map.length) {\n    if (editMap.map[index][0] === at) {\n      editMap.map[index][1] += remove\n\n      // To do: before not used.\n      // if (before) {\n      //   add.push(...editMap.map[index][2])\n      //   editMap.map[index][2] = add\n      // } else {\n      editMap.map[index][2].push(...add)\n      // }\n\n      return\n    }\n    index += 1\n  }\n  editMap.map.push([at, remove, add])\n}\n\n// /**\n//  * Shift `previous` and `next` links according to `jumps`.\n//  *\n//  * This fixes links in case there are events removed or added between them.\n//  *\n//  * @param {Array<Event>} events\n//  * @param {Array<Jump>} jumps\n//  */\n// function shiftLinks(events, jumps) {\n//   let jumpIndex = 0\n//   let index = 0\n//   let add = 0\n//   let rm = 0\n\n//   while (index < events.length) {\n//     const rmCurr = rm\n\n//     while (jumpIndex < jumps.length && jumps[jumpIndex][0] <= index) {\n//       add = jumps[jumpIndex][2]\n//       rm = jumps[jumpIndex][1]\n//       jumpIndex += 1\n//     }\n\n//     // Ignore items that will be removed.\n//     if (rm > rmCurr) {\n//       index += rm - rmCurr\n//     } else {\n//       console.log('to do: links?', add, rmCurr)\n//       // ?\n//       // if let Some(link) = &events[index].link {\n//       //     if let Some(next) = link.next {\n//       //         events[next].link.as_mut().unwrap().previous = Some(index + add - rm);\n//       //         while jumpIndex < jumps.len() && jumps[jumpIndex].0 <= next {\n//       //             add = jumps[jumpIndex].2;\n//       //             rm = jumps[jumpIndex].1;\n//       //             jumpIndex += 1;\n//       //         }\n//       //         events[index].link.as_mut().unwrap().next = Some(next + add - rm);\n//       //         index = next;\n//       //         continue;\n//       //     }\n//       // }\n//       index += 1\n//     }\n//   }\n// }\n", "/**\n * @typedef {import('micromark-util-types').Event} Event\n */\n\n/**\n * @typedef {'left' | 'center' | 'right' | 'none'} Align\n */\n\n/**\n * Figure out the alignment of a GFM table.\n *\n * @param {Array<Event>} events\n * @param {number} index\n * @returns {Array<Align>}\n */\nexport function gfmTableAlign(events, index) {\n  let inDelimiterRow = false\n  /** @type {Array<Align>} */\n  const align = []\n  while (index < events.length) {\n    const event = events[index]\n    if (inDelimiterRow) {\n      if (event[0] === 'enter') {\n        // Start of alignment value: set a new column.\n        // To do: `markdown-rs` uses `tableDelimiterCellValue`.\n        if (event[1].type === 'tableContent') {\n          align.push(\n            events[index + 1][1].type === 'tableDelimiterMarker'\n              ? 'left'\n              : 'none'\n          )\n        }\n      }\n      // Exits:\n      // End of alignment value: change the column.\n      // To do: `markdown-rs` uses `tableDelimiterCellValue`.\n      else if (event[1].type === 'tableContent') {\n        if (events[index - 1][1].type === 'tableDelimiterMarker') {\n          const alignIndex = align.length - 1\n          align[alignIndex] = align[alignIndex] === 'left' ? 'center' : 'right'\n        }\n      }\n      // Done!\n      else if (event[1].type === 'tableDelimiterRow') {\n        break\n      }\n    } else if (event[0] === 'enter' && event[1].type === 'tableDelimiterRow') {\n      inDelimiterRow = true\n    }\n    index += 1\n  }\n  return align\n}\n", "/**\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\n/**\n * @typedef {[number, number, number, number]} Range\n *   Cell info.\n *\n * @typedef {0 | 1 | 2 | 3} RowKind\n *   Where we are: `1` for head row, `2` for delimiter row, `3` for body row.\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {EditMap} from './edit-map.js'\nimport {gfmTableAlign} from './infer.js'\n\n// To do: next major: expose functions.\n\n/**\n * Extension for `micromark` that can be passed in `extensions` to enable GFM\n * table syntax.\n *\n * @type {Extension}\n */\nexport const gfmTable = {\n  flow: {\n    null: {\n      tokenize: tokenizeTable,\n      resolveAll: resolveTable\n    }\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTable(effects, ok, nok) {\n  const self = this\n  let size = 0\n  let sizeB = 0\n  /** @type {boolean | undefined} */\n  let seen\n  return start\n\n  /**\n   * Start of a GFM table.\n   *\n   * If there is a valid table row or table head before, then we try to parse\n   * another row.\n   * Otherwise, we try to parse a head.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *   | | - |\n   * > | | b |\n   *     ^\n   * ```\n   * @type {State}\n   */\n  function start(code) {\n    let index = self.events.length - 1\n    while (index > -1) {\n      const type = self.events[index][1].type\n      if (\n        type === 'lineEnding' ||\n        // Note: markdown-rs uses `whitespace` instead of `linePrefix`\n        type === 'linePrefix'\n      )\n        index--\n      else break\n    }\n    const tail = index > -1 ? self.events[index][1].type : null\n    const next =\n      tail === 'tableHead' || tail === 'tableRow' ? bodyRowStart : headRowBefore\n\n    // Don\u2019t allow lazy body rows.\n    if (next === bodyRowStart && self.parser.lazy[self.now().line]) {\n      return nok(code)\n    }\n    return next(code)\n  }\n\n  /**\n   * Before table head row.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowBefore(code) {\n    effects.enter('tableHead')\n    effects.enter('tableRow')\n    return headRowStart(code)\n  }\n\n  /**\n   * Before table head row, after whitespace.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowStart(code) {\n    if (code === 124) {\n      return headRowBreak(code)\n    }\n\n    // To do: micromark-js should let us parse our own whitespace in extensions,\n    // like `markdown-rs`:\n    //\n    // ```js\n    // // 4+ spaces.\n    // if (markdownSpace(code)) {\n    //   return nok(code)\n    // }\n    // ```\n\n    seen = true\n    // Count the first character, that isn\u2019t a pipe, double.\n    sizeB += 1\n    return headRowBreak(code)\n  }\n\n  /**\n   * At break in table head row.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *       ^\n   *         ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowBreak(code) {\n    if (code === null) {\n      // Note: in `markdown-rs`, we need to reset, in `micromark-js` we don\u2018t.\n      return nok(code)\n    }\n    if (markdownLineEnding(code)) {\n      // If anything other than one pipe (ignoring whitespace) was used, it\u2019s fine.\n      if (sizeB > 1) {\n        sizeB = 0\n        // To do: check if this works.\n        // Feel free to interrupt:\n        self.interrupt = true\n        effects.exit('tableRow')\n        effects.enter('lineEnding')\n        effects.consume(code)\n        effects.exit('lineEnding')\n        return headDelimiterStart\n      }\n\n      // Note: in `markdown-rs`, we need to reset, in `micromark-js` we don\u2018t.\n      return nok(code)\n    }\n    if (markdownSpace(code)) {\n      // To do: check if this is fine.\n      // effects.attempt(State::Next(StateName::GfmTableHeadRowBreak), State::Nok)\n      // State::Retry(space_or_tab(tokenizer))\n      return factorySpace(effects, headRowBreak, 'whitespace')(code)\n    }\n    sizeB += 1\n    if (seen) {\n      seen = false\n      // Header cell count.\n      size += 1\n    }\n    if (code === 124) {\n      effects.enter('tableCellDivider')\n      effects.consume(code)\n      effects.exit('tableCellDivider')\n      // Whether a delimiter was seen.\n      seen = true\n      return headRowBreak\n    }\n\n    // Anything else is cell data.\n    effects.enter('data')\n    return headRowData(code)\n  }\n\n  /**\n   * In table head row data.\n   *\n   * ```markdown\n   * > | | a |\n   *       ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowData(code) {\n    if (code === null || code === 124 || markdownLineEndingOrSpace(code)) {\n      effects.exit('data')\n      return headRowBreak(code)\n    }\n    effects.consume(code)\n    return code === 92 ? headRowEscape : headRowData\n  }\n\n  /**\n   * In table head row escape.\n   *\n   * ```markdown\n   * > | | a\\-b |\n   *         ^\n   *   | | ---- |\n   *   | | c    |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowEscape(code) {\n    if (code === 92 || code === 124) {\n      effects.consume(code)\n      return headRowData\n    }\n    return headRowData(code)\n  }\n\n  /**\n   * Before delimiter row.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *     ^\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterStart(code) {\n    // Reset `interrupt`.\n    self.interrupt = false\n\n    // Note: in `markdown-rs`, we need to handle piercing here too.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code)\n    }\n    effects.enter('tableDelimiterRow')\n    // Track if we\u2019ve seen a `:` or `|`.\n    seen = false\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        headDelimiterBefore,\n        'linePrefix',\n        self.parser.constructs.disable.null.includes('codeIndented')\n          ? undefined\n          : 4\n      )(code)\n    }\n    return headDelimiterBefore(code)\n  }\n\n  /**\n   * Before delimiter row, after optional whitespace.\n   *\n   * Reused when a `|` is found later, to parse another cell.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *     ^\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterBefore(code) {\n    if (code === 45 || code === 58) {\n      return headDelimiterValueBefore(code)\n    }\n    if (code === 124) {\n      seen = true\n      // If we start with a pipe, we open a cell marker.\n      effects.enter('tableCellDivider')\n      effects.consume(code)\n      effects.exit('tableCellDivider')\n      return headDelimiterCellBefore\n    }\n\n    // More whitespace / empty row not allowed at start.\n    return headDelimiterNok(code)\n  }\n\n  /**\n   * After `|`, before delimiter cell.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterCellBefore(code) {\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headDelimiterValueBefore, 'whitespace')(code)\n    }\n    return headDelimiterValueBefore(code)\n  }\n\n  /**\n   * Before delimiter cell value.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterValueBefore(code) {\n    // Align: left.\n    if (code === 58) {\n      sizeB += 1\n      seen = true\n      effects.enter('tableDelimiterMarker')\n      effects.consume(code)\n      effects.exit('tableDelimiterMarker')\n      return headDelimiterLeftAlignmentAfter\n    }\n\n    // Align: none.\n    if (code === 45) {\n      sizeB += 1\n      // To do: seems weird that this *isn\u2019t* left aligned, but that state is used?\n      return headDelimiterLeftAlignmentAfter(code)\n    }\n    if (code === null || markdownLineEnding(code)) {\n      return headDelimiterCellAfter(code)\n    }\n    return headDelimiterNok(code)\n  }\n\n  /**\n   * After delimiter cell left alignment marker.\n   *\n   * ```markdown\n   *   | | a  |\n   * > | | :- |\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterLeftAlignmentAfter(code) {\n    if (code === 45) {\n      effects.enter('tableDelimiterFiller')\n      return headDelimiterFiller(code)\n    }\n\n    // Anything else is not ok after the left-align colon.\n    return headDelimiterNok(code)\n  }\n\n  /**\n   * In delimiter cell filler.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterFiller(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return headDelimiterFiller\n    }\n\n    // Align is `center` if it was `left`, `right` otherwise.\n    if (code === 58) {\n      seen = true\n      effects.exit('tableDelimiterFiller')\n      effects.enter('tableDelimiterMarker')\n      effects.consume(code)\n      effects.exit('tableDelimiterMarker')\n      return headDelimiterRightAlignmentAfter\n    }\n    effects.exit('tableDelimiterFiller')\n    return headDelimiterRightAlignmentAfter(code)\n  }\n\n  /**\n   * After delimiter cell right alignment marker.\n   *\n   * ```markdown\n   *   | |  a |\n   * > | | -: |\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterRightAlignmentAfter(code) {\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headDelimiterCellAfter, 'whitespace')(code)\n    }\n    return headDelimiterCellAfter(code)\n  }\n\n  /**\n   * After delimiter cell.\n   *\n   * ```markdown\n   *   | |  a |\n   * > | | -: |\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterCellAfter(code) {\n    if (code === 124) {\n      return headDelimiterBefore(code)\n    }\n    if (code === null || markdownLineEnding(code)) {\n      // Exit when:\n      // * there was no `:` or `|` at all (it\u2019s a thematic break or setext\n      //   underline instead)\n      // * the header cell count is not the delimiter cell count\n      if (!seen || size !== sizeB) {\n        return headDelimiterNok(code)\n      }\n\n      // Note: in markdown-rs`, a reset is needed here.\n      effects.exit('tableDelimiterRow')\n      effects.exit('tableHead')\n      // To do: in `markdown-rs`, resolvers need to be registered manually.\n      // effects.register_resolver(ResolveName::GfmTable)\n      return ok(code)\n    }\n    return headDelimiterNok(code)\n  }\n\n  /**\n   * In delimiter row, at a disallowed byte.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | x |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterNok(code) {\n    // Note: in `markdown-rs`, we need to reset, in `micromark-js` we don\u2018t.\n    return nok(code)\n  }\n\n  /**\n   * Before table body row.\n   *\n   * ```markdown\n   *   | | a |\n   *   | | - |\n   * > | | b |\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowStart(code) {\n    // Note: in `markdown-rs` we need to manually take care of a prefix,\n    // but in `micromark-js` that is done for us, so if we\u2019re here, we\u2019re\n    // never at whitespace.\n    effects.enter('tableRow')\n    return bodyRowBreak(code)\n  }\n\n  /**\n   * At break in table body row.\n   *\n   * ```markdown\n   *   | | a |\n   *   | | - |\n   * > | | b |\n   *     ^\n   *       ^\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowBreak(code) {\n    if (code === 124) {\n      effects.enter('tableCellDivider')\n      effects.consume(code)\n      effects.exit('tableCellDivider')\n      return bodyRowBreak\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('tableRow')\n      return ok(code)\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(effects, bodyRowBreak, 'whitespace')(code)\n    }\n\n    // Anything else is cell content.\n    effects.enter('data')\n    return bodyRowData(code)\n  }\n\n  /**\n   * In table body row data.\n   *\n   * ```markdown\n   *   | | a |\n   *   | | - |\n   * > | | b |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowData(code) {\n    if (code === null || code === 124 || markdownLineEndingOrSpace(code)) {\n      effects.exit('data')\n      return bodyRowBreak(code)\n    }\n    effects.consume(code)\n    return code === 92 ? bodyRowEscape : bodyRowData\n  }\n\n  /**\n   * In table body row escape.\n   *\n   * ```markdown\n   *   | | a    |\n   *   | | ---- |\n   * > | | b\\-c |\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowEscape(code) {\n    if (code === 92 || code === 124) {\n      effects.consume(code)\n      return bodyRowData\n    }\n    return bodyRowData(code)\n  }\n}\n\n/** @type {Resolver} */\n// eslint-disable-next-line complexity\nfunction resolveTable(events, context) {\n  let index = -1\n  let inFirstCellAwaitingPipe = true\n  /** @type {RowKind} */\n  let rowKind = 0\n  /** @type {Range} */\n  let lastCell = [0, 0, 0, 0]\n  /** @type {Range} */\n  let cell = [0, 0, 0, 0]\n  let afterHeadAwaitingFirstBodyRow = false\n  let lastTableEnd = 0\n  /** @type {Token | undefined} */\n  let currentTable\n  /** @type {Token | undefined} */\n  let currentBody\n  /** @type {Token | undefined} */\n  let currentCell\n  const map = new EditMap()\n  while (++index < events.length) {\n    const event = events[index]\n    const token = event[1]\n    if (event[0] === 'enter') {\n      // Start of head.\n      if (token.type === 'tableHead') {\n        afterHeadAwaitingFirstBodyRow = false\n\n        // Inject previous (body end and) table end.\n        if (lastTableEnd !== 0) {\n          flushTableEnd(map, context, lastTableEnd, currentTable, currentBody)\n          currentBody = undefined\n          lastTableEnd = 0\n        }\n\n        // Inject table start.\n        currentTable = {\n          type: 'table',\n          start: Object.assign({}, token.start),\n          // Note: correct end is set later.\n          end: Object.assign({}, token.end)\n        }\n        map.add(index, 0, [['enter', currentTable, context]])\n      } else if (\n        token.type === 'tableRow' ||\n        token.type === 'tableDelimiterRow'\n      ) {\n        inFirstCellAwaitingPipe = true\n        currentCell = undefined\n        lastCell = [0, 0, 0, 0]\n        cell = [0, index + 1, 0, 0]\n\n        // Inject table body start.\n        if (afterHeadAwaitingFirstBodyRow) {\n          afterHeadAwaitingFirstBodyRow = false\n          currentBody = {\n            type: 'tableBody',\n            start: Object.assign({}, token.start),\n            // Note: correct end is set later.\n            end: Object.assign({}, token.end)\n          }\n          map.add(index, 0, [['enter', currentBody, context]])\n        }\n        rowKind = token.type === 'tableDelimiterRow' ? 2 : currentBody ? 3 : 1\n      }\n      // Cell data.\n      else if (\n        rowKind &&\n        (token.type === 'data' ||\n          token.type === 'tableDelimiterMarker' ||\n          token.type === 'tableDelimiterFiller')\n      ) {\n        inFirstCellAwaitingPipe = false\n\n        // First value in cell.\n        if (cell[2] === 0) {\n          if (lastCell[1] !== 0) {\n            cell[0] = cell[1]\n            currentCell = flushCell(\n              map,\n              context,\n              lastCell,\n              rowKind,\n              undefined,\n              currentCell\n            )\n            lastCell = [0, 0, 0, 0]\n          }\n          cell[2] = index\n        }\n      } else if (token.type === 'tableCellDivider') {\n        if (inFirstCellAwaitingPipe) {\n          inFirstCellAwaitingPipe = false\n        } else {\n          if (lastCell[1] !== 0) {\n            cell[0] = cell[1]\n            currentCell = flushCell(\n              map,\n              context,\n              lastCell,\n              rowKind,\n              undefined,\n              currentCell\n            )\n          }\n          lastCell = cell\n          cell = [lastCell[1], index, 0, 0]\n        }\n      }\n    }\n    // Exit events.\n    else if (token.type === 'tableHead') {\n      afterHeadAwaitingFirstBodyRow = true\n      lastTableEnd = index\n    } else if (\n      token.type === 'tableRow' ||\n      token.type === 'tableDelimiterRow'\n    ) {\n      lastTableEnd = index\n      if (lastCell[1] !== 0) {\n        cell[0] = cell[1]\n        currentCell = flushCell(\n          map,\n          context,\n          lastCell,\n          rowKind,\n          index,\n          currentCell\n        )\n      } else if (cell[1] !== 0) {\n        currentCell = flushCell(map, context, cell, rowKind, index, currentCell)\n      }\n      rowKind = 0\n    } else if (\n      rowKind &&\n      (token.type === 'data' ||\n        token.type === 'tableDelimiterMarker' ||\n        token.type === 'tableDelimiterFiller')\n    ) {\n      cell[3] = index\n    }\n  }\n  if (lastTableEnd !== 0) {\n    flushTableEnd(map, context, lastTableEnd, currentTable, currentBody)\n  }\n  map.consume(context.events)\n\n  // To do: move this into `html`, when events are exposed there.\n  // That\u2019s what `markdown-rs` does.\n  // That needs updates to `mdast-util-gfm-table`.\n  index = -1\n  while (++index < context.events.length) {\n    const event = context.events[index]\n    if (event[0] === 'enter' && event[1].type === 'table') {\n      event[1]._align = gfmTableAlign(context.events, index)\n    }\n  }\n  return events\n}\n\n/// Generate a cell.\n/**\n *\n * @param {EditMap} map\n * @param {TokenizeContext} context\n * @param {Range} range\n * @param {RowKind} rowKind\n * @param {number | undefined} rowEnd\n * @param {Token | undefined} previousCell\n * @returns {Token | undefined}\n */\n// eslint-disable-next-line max-params\nfunction flushCell(map, context, range, rowKind, rowEnd, previousCell) {\n  // `markdown-rs` uses:\n  // rowKind === 2 ? 'tableDelimiterCell' : 'tableCell'\n  const groupName =\n    rowKind === 1\n      ? 'tableHeader'\n      : rowKind === 2\n      ? 'tableDelimiter'\n      : 'tableData'\n  // `markdown-rs` uses:\n  // rowKind === 2 ? 'tableDelimiterCellValue' : 'tableCellText'\n  const valueName = 'tableContent'\n\n  // Insert an exit for the previous cell, if there is one.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //          ^-- exit\n  //           ^^^^-- this cell\n  // ```\n  if (range[0] !== 0) {\n    previousCell.end = Object.assign({}, getPoint(context.events, range[0]))\n    map.add(range[0], 0, [['exit', previousCell, context]])\n  }\n\n  // Insert enter of this cell.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //           ^-- enter\n  //           ^^^^-- this cell\n  // ```\n  const now = getPoint(context.events, range[1])\n  previousCell = {\n    type: groupName,\n    start: Object.assign({}, now),\n    // Note: correct end is set later.\n    end: Object.assign({}, now)\n  }\n  map.add(range[1], 0, [['enter', previousCell, context]])\n\n  // Insert text start at first data start and end at last data end, and\n  // remove events between.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //            ^-- enter\n  //             ^-- exit\n  //           ^^^^-- this cell\n  // ```\n  if (range[2] !== 0) {\n    const relatedStart = getPoint(context.events, range[2])\n    const relatedEnd = getPoint(context.events, range[3])\n    /** @type {Token} */\n    const valueToken = {\n      type: valueName,\n      start: Object.assign({}, relatedStart),\n      end: Object.assign({}, relatedEnd)\n    }\n    map.add(range[2], 0, [['enter', valueToken, context]])\n    if (rowKind !== 2) {\n      // Fix positional info on remaining events\n      const start = context.events[range[2]]\n      const end = context.events[range[3]]\n      start[1].end = Object.assign({}, end[1].end)\n      start[1].type = 'chunkText'\n      start[1].contentType = 'text'\n\n      // Remove if needed.\n      if (range[3] > range[2] + 1) {\n        const a = range[2] + 1\n        const b = range[3] - range[2] - 1\n        map.add(a, b, [])\n      }\n    }\n    map.add(range[3] + 1, 0, [['exit', valueToken, context]])\n  }\n\n  // Insert an exit for the last cell, if at the row end.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //                    ^-- exit\n  //               ^^^^^^-- this cell (the last one contains two \u201Cbetween\u201D parts)\n  // ```\n  if (rowEnd !== undefined) {\n    previousCell.end = Object.assign({}, getPoint(context.events, rowEnd))\n    map.add(rowEnd, 0, [['exit', previousCell, context]])\n    previousCell = undefined\n  }\n  return previousCell\n}\n\n/**\n * Generate table end (and table body end).\n *\n * @param {EditMap} map\n * @param {TokenizeContext} context\n * @param {number} index\n * @param {Token} table\n * @param {Token | undefined} tableBody\n */\n// eslint-disable-next-line max-params\nfunction flushTableEnd(map, context, index, table, tableBody) {\n  /** @type {Array<Event>} */\n  const exits = []\n  const related = getPoint(context.events, index)\n  if (tableBody) {\n    tableBody.end = Object.assign({}, related)\n    exits.push(['exit', tableBody, context])\n  }\n  table.end = Object.assign({}, related)\n  exits.push(['exit', table, context])\n  map.add(index + 1, 0, exits)\n}\n\n/**\n * @param {Array<Event>} events\n * @param {number} index\n * @returns {readonly Point}\n */\nfunction getPoint(events, index) {\n  const event = events[index]\n  const side = event[0] === 'enter' ? 'start' : 'end'\n  return event[1][side]\n}\n", "// This module is generated by `script/`.\n//\n// CommonMark handles attention (emphasis, strong) markers based on what comes\n// before or after them.\n// One such difference is if those characters are Unicode punctuation.\n// This script is generated from the Unicode data.\n\n/**\n * Regular expression that matches a unicode punctuation character.\n */\nexport const unicodePunctuationRegex =\n  /[!-\\/:-@\\[-`\\{-~\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061D-\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1B7D\\u1B7E\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52-\\u2E5D\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]/\n", "/**\n * @typedef {import('micromark-util-types').Code} Code\n */\n\nimport {unicodePunctuationRegex} from './lib/unicode-punctuation-regex.js'\n\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiAlpha = regexCheck(/[A-Za-z]/)\n\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  )\n}\n\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiDigit = regexCheck(/\\d/)\n\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2\n}\n\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32)\n}\n\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32\n}\n\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodePunctuation = regexCheck(unicodePunctuationRegex)\n\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodeWhitespace = regexCheck(/\\s/)\n\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => boolean}\n */\nfunction regexCheck(regex) {\n  return check\n\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code\n   *   Character code.\n   * @returns {boolean}\n   *   Whether the character code matches the bound regex.\n   */\n  function check(code) {\n    return code !== null && regex.test(String.fromCharCode(code))\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEndingOrSpace,\n  markdownLineEnding,\n  markdownSpace\n} from 'micromark-util-character'\nconst tasklistCheck = {\n  tokenize: tokenizeTasklistCheck\n}\n\n// To do: next major: expose function to make extension.\n\n/**\n * Extension for `micromark` that can be passed in `extensions`, to\n * enable GFM task list items syntax.\n *\n * @type {Extension}\n */\nexport const gfmTaskListItem = {\n  text: {\n    [91]: tasklistCheck\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTasklistCheck(effects, ok, nok) {\n  const self = this\n  return open\n\n  /**\n   * At start of task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (\n      // Exit if there\u2019s stuff before.\n      self.previous !== null ||\n      // Exit if not in the first content that is the first child of a list\n      // item.\n      !self._gfmTasklistFirstContentOfListItem\n    ) {\n      return nok(code)\n    }\n    effects.enter('taskListCheck')\n    effects.enter('taskListCheckMarker')\n    effects.consume(code)\n    effects.exit('taskListCheckMarker')\n    return inside\n  }\n\n  /**\n   * In task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    // Currently we match how GH works in files.\n    // To match how GH works in comments, use `markdownSpace` (`[\\t ]`) instead\n    // of `markdownLineEndingOrSpace` (`[\\t\\n\\r ]`).\n    if (markdownLineEndingOrSpace(code)) {\n      effects.enter('taskListCheckValueUnchecked')\n      effects.consume(code)\n      effects.exit('taskListCheckValueUnchecked')\n      return close\n    }\n    if (code === 88 || code === 120) {\n      effects.enter('taskListCheckValueChecked')\n      effects.consume(code)\n      effects.exit('taskListCheckValueChecked')\n      return close\n    }\n    return nok(code)\n  }\n\n  /**\n   * At close of task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function close(code) {\n    if (code === 93) {\n      effects.enter('taskListCheckMarker')\n      effects.consume(code)\n      effects.exit('taskListCheckMarker')\n      effects.exit('taskListCheck')\n      return after\n    }\n    return nok(code)\n  }\n\n  /**\n   * @type {State}\n   */\n  function after(code) {\n    // EOL in paragraph means there must be something else after it.\n    if (markdownLineEnding(code)) {\n      return ok(code)\n    }\n\n    // Space or tab?\n    // Check what comes after.\n    if (markdownSpace(code)) {\n      return effects.check(\n        {\n          tokenize: spaceThenNonSpace\n        },\n        ok,\n        nok\n      )(code)\n    }\n\n    // EOF, or non-whitespace, both wrong.\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction spaceThenNonSpace(effects, ok, nok) {\n  return factorySpace(effects, after, 'whitespace')\n\n  /**\n   * After whitespace, after task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // EOF means there was nothing, so bad.\n    // EOL means there\u2019s content after it, so good.\n    // Impossible to have more spaces.\n    // Anything else is good.\n    return code === null ? nok(code) : ok(code)\n  }\n}\n", "/**\n * @typedef {import('micromark-extension-gfm-footnote').HtmlOptions} HtmlOptions\n * @typedef {import('micromark-extension-gfm-strikethrough').Options} Options\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n */\n\nimport {\n  combineExtensions,\n  combineHtmlExtensions\n} from 'micromark-util-combine-extensions'\nimport {\n  gfmAutolinkLiteral,\n  gfmAutolinkLiteralHtml\n} from 'micromark-extension-gfm-autolink-literal'\nimport {gfmFootnote, gfmFootnoteHtml} from 'micromark-extension-gfm-footnote'\nimport {\n  gfmStrikethrough,\n  gfmStrikethroughHtml\n} from 'micromark-extension-gfm-strikethrough'\nimport {gfmTable, gfmTableHtml} from 'micromark-extension-gfm-table'\nimport {gfmTagfilterHtml} from 'micromark-extension-gfm-tagfilter'\nimport {\n  gfmTaskListItem,\n  gfmTaskListItemHtml\n} from 'micromark-extension-gfm-task-list-item'\n\n/**\n * Create an extension for `micromark` to enable GFM syntax.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n *\n *   Passed to `micromark-extens-gfm-strikethrough`.\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to enable GFM\n *   syntax.\n */\nexport function gfm(options) {\n  return combineExtensions([\n    gfmAutolinkLiteral,\n    gfmFootnote(),\n    gfmStrikethrough(options),\n    gfmTable,\n    gfmTaskListItem\n  ])\n}\n\n/**\n * Create an extension for `micromark` to support GFM when serializing to HTML.\n *\n * @param {HtmlOptions | null | undefined} [options]\n *   Configuration.\n *\n *   Passed to `micromark-extens-gfm-footnote`.\n * @returns {HtmlExtension}\n *   Extension for `micromark` that can be passed in `htmlExtensions` to\n *   support GFM when serializing to HTML.\n */\nexport function gfmHtml(options) {\n  return combineHtmlExtensions([\n    gfmAutolinkLiteralHtml,\n    gfmFootnoteHtml(options),\n    gfmStrikethroughHtml,\n    gfmTableHtml,\n    gfmTagfilterHtml,\n    gfmTaskListItemHtml\n  ])\n}\n", "export default function escapeStringRegexp(string) {\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\t// Escape characters with special meaning either inside or outside character sets.\n\t// Use a simple backslash escape when it\u2019s always valid, and a `\\xnn` escape when the simpler form would be disallowed by Unicode patterns\u2019 stricter grammar.\n\treturn string\n\t\t.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&')\n\t\t.replace(/-/g, '\\\\x2d');\n}\n", "/**\n * @typedef {import('mdast').Parent} MdastParent\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').Text} Text\n * @typedef {import('unist-util-visit-parents').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * @typedef {Content | Root} Node\n * @typedef {Extract<Node, MdastParent>} Parent\n * @typedef {Exclude<Parent, Root>} ContentParent\n *\n * @typedef RegExpMatchObject\n *   Info on the match.\n * @property {number} index\n *   The index of the search at which the result was found.\n * @property {string} input\n *   A copy of the search string in the text node.\n * @property {[Root, ...Array<ContentParent>, Text]} stack\n *   All ancestors of the text node, where the last node is the text itself.\n *\n * @callback ReplaceFunction\n *   Callback called when a search matches.\n * @param {...any} parameters\n *   The parameters are the result of corresponding search expression:\n *\n *   * `value` (`string`) \u2014 whole match\n *   * `...capture` (`Array<string>`) \u2014 matches from regex capture groups\n *   * `match` (`RegExpMatchObject`) \u2014 info on the match\n * @returns {Array<PhrasingContent> | PhrasingContent | string | false | undefined | null}\n *   Thing to replace with.\n *\n *   * when `null`, `undefined`, `''`, remove the match\n *   * \u2026or when `false`, do not replace at all\n *   * \u2026or when `string`, replace with a text node of that value\n *   * \u2026or when `Node` or `Array<Node>`, replace with those nodes\n *\n * @typedef {string | RegExp} Find\n *   Pattern to find.\n *\n *   Strings are escaped and then turned into global expressions.\n *\n * @typedef {Array<FindAndReplaceTuple>} FindAndReplaceList\n *   Several find and replaces, in array form.\n * @typedef {Record<string, Replace>} FindAndReplaceSchema\n *   Several find and replaces, in object form.\n * @typedef {[Find, Replace]} FindAndReplaceTuple\n *   Find and replace in tuple form.\n * @typedef {string | ReplaceFunction} Replace\n *   Thing to replace with.\n * @typedef {[RegExp, ReplaceFunction]} Pair\n *   Normalized find and replace.\n * @typedef {Array<Pair>} Pairs\n *   All find and replaced.\n *\n * @typedef Options\n *   Configuration.\n * @property {Test | null | undefined} [ignore]\n *   Test for which nodes to ignore.\n */\n\nimport escape from 'escape-string-regexp'\nimport {visitParents} from 'unist-util-visit-parents'\nimport {convert} from 'unist-util-is'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Find patterns in a tree and replace them.\n *\n * The algorithm searches the tree in *preorder* for complete values in `Text`\n * nodes.\n * Partial matches are not supported.\n *\n * @param tree\n *   Tree to change.\n * @param find\n *   Patterns to find.\n * @param replace\n *   Things to replace with (when `find` is `Find`) or configuration.\n * @param options\n *   Configuration (when `find` is not `Find`).\n * @returns\n *   Given, modified, tree.\n */\n// To do: next major: remove `find` & `replace` combo, remove schema.\nexport const findAndReplace =\n  /**\n   * @type {(\n   *   (<Tree extends Node>(tree: Tree, find: Find, replace?: Replace | null | undefined, options?: Options | null | undefined) => Tree) &\n   *   (<Tree extends Node>(tree: Tree, schema: FindAndReplaceSchema | FindAndReplaceList, options?: Options | null | undefined) => Tree)\n   * )}\n   **/\n  (\n    /**\n     * @template {Node} Tree\n     * @param {Tree} tree\n     * @param {Find | FindAndReplaceSchema | FindAndReplaceList} find\n     * @param {Replace | Options | null | undefined} [replace]\n     * @param {Options | null | undefined} [options]\n     * @returns {Tree}\n     */\n    function (tree, find, replace, options) {\n      /** @type {Options | null | undefined} */\n      let settings\n      /** @type {FindAndReplaceSchema|FindAndReplaceList} */\n      let schema\n\n      if (typeof find === 'string' || find instanceof RegExp) {\n        // @ts-expect-error don\u2019t expect options twice.\n        schema = [[find, replace]]\n        settings = options\n      } else {\n        schema = find\n        // @ts-expect-error don\u2019t expect replace twice.\n        settings = replace\n      }\n\n      if (!settings) {\n        settings = {}\n      }\n\n      const ignored = convert(settings.ignore || [])\n      const pairs = toPairs(schema)\n      let pairIndex = -1\n\n      while (++pairIndex < pairs.length) {\n        visitParents(tree, 'text', visitor)\n      }\n\n      // To do next major: don\u2019t return the given tree.\n      return tree\n\n      /** @type {import('unist-util-visit-parents/complex-types.js').BuildVisitor<Root, 'text'>} */\n      function visitor(node, parents) {\n        let index = -1\n        /** @type {Parent | undefined} */\n        let grandparent\n\n        while (++index < parents.length) {\n          const parent = parents[index]\n\n          if (\n            ignored(\n              parent,\n              // @ts-expect-error: TS doesn\u2019t understand but it\u2019s perfect.\n              grandparent ? grandparent.children.indexOf(parent) : undefined,\n              grandparent\n            )\n          ) {\n            return\n          }\n\n          grandparent = parent\n        }\n\n        if (grandparent) {\n          return handler(node, parents)\n        }\n      }\n\n      /**\n       * Handle a text node which is not in an ignored parent.\n       *\n       * @param {Text} node\n       *   Text node.\n       * @param {Array<Parent>} parents\n       *   Parents.\n       * @returns {VisitorResult}\n       *   Result.\n       */\n      function handler(node, parents) {\n        const parent = parents[parents.length - 1]\n        const find = pairs[pairIndex][0]\n        const replace = pairs[pairIndex][1]\n        let start = 0\n        // @ts-expect-error: TS is wrong, some of these children can be text.\n        const index = parent.children.indexOf(node)\n        let change = false\n        /** @type {Array<PhrasingContent>} */\n        let nodes = []\n\n        find.lastIndex = 0\n\n        let match = find.exec(node.value)\n\n        while (match) {\n          const position = match.index\n          /** @type {RegExpMatchObject} */\n          const matchObject = {\n            index: match.index,\n            input: match.input,\n            // @ts-expect-error: stack is fine.\n            stack: [...parents, node]\n          }\n          let value = replace(...match, matchObject)\n\n          if (typeof value === 'string') {\n            value = value.length > 0 ? {type: 'text', value} : undefined\n          }\n\n          // It wasn\u2019t a match after all.\n          if (value !== false) {\n            if (start !== position) {\n              nodes.push({\n                type: 'text',\n                value: node.value.slice(start, position)\n              })\n            }\n\n            if (Array.isArray(value)) {\n              nodes.push(...value)\n            } else if (value) {\n              nodes.push(value)\n            }\n\n            start = position + match[0].length\n            change = true\n          }\n\n          if (!find.global) {\n            break\n          }\n\n          match = find.exec(node.value)\n        }\n\n        if (change) {\n          if (start < node.value.length) {\n            nodes.push({type: 'text', value: node.value.slice(start)})\n          }\n\n          parent.children.splice(index, 1, ...nodes)\n        } else {\n          nodes = [node]\n        }\n\n        return index + nodes.length\n      }\n    }\n  )\n\n/**\n * Turn a schema into pairs.\n *\n * @param {FindAndReplaceSchema | FindAndReplaceList} schema\n *   Schema.\n * @returns {Pairs}\n *   Clean pairs.\n */\nfunction toPairs(schema) {\n  /** @type {Pairs} */\n  const result = []\n\n  if (typeof schema !== 'object') {\n    throw new TypeError('Expected array or object as schema')\n  }\n\n  if (Array.isArray(schema)) {\n    let index = -1\n\n    while (++index < schema.length) {\n      result.push([\n        toExpression(schema[index][0]),\n        toFunction(schema[index][1])\n      ])\n    }\n  } else {\n    /** @type {string} */\n    let key\n\n    for (key in schema) {\n      if (own.call(schema, key)) {\n        result.push([toExpression(key), toFunction(schema[key])])\n      }\n    }\n  }\n\n  return result\n}\n\n/**\n * Turn a find into an expression.\n *\n * @param {Find} find\n *   Find.\n * @returns {RegExp}\n *   Expression.\n */\nfunction toExpression(find) {\n  return typeof find === 'string' ? new RegExp(escape(find), 'g') : find\n}\n\n/**\n * Turn a replace into a function.\n *\n * @param {Replace} replace\n *   Replace.\n * @returns {ReplaceFunction}\n *   Function.\n */\nfunction toFunction(replace) {\n  return typeof replace === 'function' ? replace : () => replace\n}\n", "// This module is generated by `script/`.\n//\n// CommonMark handles attention (emphasis, strong) markers based on what comes\n// before or after them.\n// One such difference is if those characters are Unicode punctuation.\n// This script is generated from the Unicode data.\n\n/**\n * Regular expression that matches a unicode punctuation character.\n */\nexport const unicodePunctuationRegex =\n  /[!-\\/:-@\\[-`\\{-~\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061D-\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1B7D\\u1B7E\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52-\\u2E5D\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]/\n", "/**\n * @typedef {import('micromark-util-types').Code} Code\n */\n\nimport {unicodePunctuationRegex} from './lib/unicode-punctuation-regex.js'\n\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiAlpha = regexCheck(/[A-Za-z]/)\n\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  )\n}\n\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiDigit = regexCheck(/\\d/)\n\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2\n}\n\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32)\n}\n\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32\n}\n\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodePunctuation = regexCheck(unicodePunctuationRegex)\n\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodeWhitespace = regexCheck(/\\s/)\n\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => boolean}\n */\nfunction regexCheck(regex) {\n  return check\n\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code\n   *   Character code.\n   * @returns {boolean}\n   *   Whether the character code matches the bound regex.\n   */\n  function check(code) {\n    return code !== null && regex.test(String.fromCharCode(code))\n  }\n}\n", "/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-from-markdown').Transform} FromMarkdownTransform\n *\n * @typedef {import('mdast-util-to-markdown').ConstructName} ConstructName\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n *\n * @typedef {import('mdast-util-find-and-replace').ReplaceFunction} ReplaceFunction\n * @typedef {import('mdast-util-find-and-replace').RegExpMatchObject} RegExpMatchObject\n */\n\nimport {ccount} from 'ccount'\nimport {findAndReplace} from 'mdast-util-find-and-replace'\nimport {unicodePunctuation, unicodeWhitespace} from 'micromark-util-character'\n\n/** @type {ConstructName} */\nconst inConstruct = 'phrasing'\n/** @type {Array<ConstructName>} */\nconst notInConstruct = ['autolink', 'link', 'image', 'label']\n\n// To do: next major: expose functions instead of extensions.\n\n/**\n * Extension for `mdast-util-from-markdown` to enable GFM autolink literals.\n *\n * @type {FromMarkdownExtension}\n */\nexport const gfmAutolinkLiteralFromMarkdown = {\n  transforms: [transformGfmAutolinkLiterals],\n  enter: {\n    literalAutolink: enterLiteralAutolink,\n    literalAutolinkEmail: enterLiteralAutolinkValue,\n    literalAutolinkHttp: enterLiteralAutolinkValue,\n    literalAutolinkWww: enterLiteralAutolinkValue\n  },\n  exit: {\n    literalAutolink: exitLiteralAutolink,\n    literalAutolinkEmail: exitLiteralAutolinkEmail,\n    literalAutolinkHttp: exitLiteralAutolinkHttp,\n    literalAutolinkWww: exitLiteralAutolinkWww\n  }\n}\n\n/**\n * Extension for `mdast-util-to-markdown` to enable GFM autolink literals.\n *\n * @type {ToMarkdownExtension}\n */\nexport const gfmAutolinkLiteralToMarkdown = {\n  unsafe: [\n    {\n      character: '@',\n      before: '[+\\\\-.\\\\w]',\n      after: '[\\\\-.\\\\w]',\n      inConstruct,\n      notInConstruct\n    },\n    {\n      character: '.',\n      before: '[Ww]',\n      after: '[\\\\-.\\\\w]',\n      inConstruct,\n      notInConstruct\n    },\n    {character: ':', before: '[ps]', after: '\\\\/', inConstruct, notInConstruct}\n  ]\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterLiteralAutolink(token) {\n  this.enter({type: 'link', title: null, url: '', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterLiteralAutolinkValue(token) {\n  this.config.enter.autolinkProtocol.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkHttp(token) {\n  this.config.exit.autolinkProtocol.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkWww(token) {\n  this.config.exit.data.call(this, token)\n  const node = /** @type {Link} */ (this.stack[this.stack.length - 1])\n  node.url = 'http://' + this.sliceSerialize(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkEmail(token) {\n  this.config.exit.autolinkEmail.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolink(token) {\n  this.exit(token)\n}\n\n/** @type {FromMarkdownTransform} */\nfunction transformGfmAutolinkLiterals(tree) {\n  findAndReplace(\n    tree,\n    [\n      [/(https?:\\/\\/|www(?=\\.))([-.\\w]+)([^ \\t\\r\\n]*)/gi, findUrl],\n      [/([-.\\w+]+)@([-\\w]+(?:\\.[-\\w]+)+)/g, findEmail]\n    ],\n    {ignore: ['link', 'linkReference']}\n  )\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} protocol\n * @param {string} domain\n * @param {string} path\n * @param {RegExpMatchObject} match\n * @returns {Link | Array<PhrasingContent> | false}\n */\n// eslint-disable-next-line max-params\nfunction findUrl(_, protocol, domain, path, match) {\n  let prefix = ''\n\n  // Not an expected previous character.\n  if (!previous(match)) {\n    return false\n  }\n\n  // Treat `www` as part of the domain.\n  if (/^w/i.test(protocol)) {\n    domain = protocol + domain\n    protocol = ''\n    prefix = 'http://'\n  }\n\n  if (!isCorrectDomain(domain)) {\n    return false\n  }\n\n  const parts = splitUrl(domain + path)\n\n  if (!parts[0]) return false\n\n  /** @type {Link} */\n  const result = {\n    type: 'link',\n    title: null,\n    url: prefix + protocol + parts[0],\n    children: [{type: 'text', value: protocol + parts[0]}]\n  }\n\n  if (parts[1]) {\n    return [result, {type: 'text', value: parts[1]}]\n  }\n\n  return result\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} atext\n * @param {string} label\n * @param {RegExpMatchObject} match\n * @returns {Link | false}\n */\nfunction findEmail(_, atext, label, match) {\n  if (\n    // Not an expected previous character.\n    !previous(match, true) ||\n    // Label ends in not allowed character.\n    /[-\\d_]$/.test(label)\n  ) {\n    return false\n  }\n\n  return {\n    type: 'link',\n    title: null,\n    url: 'mailto:' + atext + '@' + label,\n    children: [{type: 'text', value: atext + '@' + label}]\n  }\n}\n\n/**\n * @param {string} domain\n * @returns {boolean}\n */\nfunction isCorrectDomain(domain) {\n  const parts = domain.split('.')\n\n  if (\n    parts.length < 2 ||\n    (parts[parts.length - 1] &&\n      (/_/.test(parts[parts.length - 1]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 1]))) ||\n    (parts[parts.length - 2] &&\n      (/_/.test(parts[parts.length - 2]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 2])))\n  ) {\n    return false\n  }\n\n  return true\n}\n\n/**\n * @param {string} url\n * @returns {[string, string | undefined]}\n */\nfunction splitUrl(url) {\n  const trailExec = /[!\"&'),.:;<>?\\]}]+$/.exec(url)\n\n  if (!trailExec) {\n    return [url, undefined]\n  }\n\n  url = url.slice(0, trailExec.index)\n\n  let trail = trailExec[0]\n  let closingParenIndex = trail.indexOf(')')\n  const openingParens = ccount(url, '(')\n  let closingParens = ccount(url, ')')\n\n  while (closingParenIndex !== -1 && openingParens > closingParens) {\n    url += trail.slice(0, closingParenIndex + 1)\n    trail = trail.slice(closingParenIndex + 1)\n    closingParenIndex = trail.indexOf(')')\n    closingParens++\n  }\n\n  return [url, trail]\n}\n\n/**\n * @param {RegExpMatchObject} match\n * @param {boolean | null | undefined} [email=false]\n * @returns {boolean}\n */\nfunction previous(match, email) {\n  const code = match.input.charCodeAt(match.index - 1)\n\n  return (\n    (match.index === 0 ||\n      unicodeWhitespace(code) ||\n      unicodePunctuation(code)) &&\n    (!email || code !== 47)\n  )\n}\n", "/**\n * @typedef {import('../types.js').AssociationId} AssociationId\n */\n\nimport {decodeString} from 'micromark-util-decode-string'\n\n/**\n * Get an identifier from an association to match it to others.\n *\n * Associations are nodes that match to something else through an ID:\n * <https://github.com/syntax-tree/mdast#association>.\n *\n * The `label` of an association is the string value: character escapes and\n * references work, and casing is intact.\n * The `identifier` is used to match one association to another:\n * controversially, character escapes and references don\u2019t work in this\n * matching: `&copy;` does not match `\u00A9`, and `\\+` does not match `+`.\n *\n * But casing is ignored (and whitespace) is trimmed and collapsed: ` A\\nb`\n * matches `a b`.\n * So, we do prefer the label when figuring out how we\u2019re going to serialize:\n * it has whitespace, casing, and we can ignore most useless character\n * escapes and all character references.\n *\n * @type {AssociationId}\n */\nexport function association(node) {\n  if (node.label || !node.identifier) {\n    return node.label || ''\n  }\n\n  return decodeString(node.identifier)\n}\n", "/**\n * @typedef {import('../types.js').FlowContent} FlowContent\n * @typedef {import('../types.js').Node} Node\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').TrackFields} TrackFields\n */\n\n/**\n * @param {Parent & {children: Array<FlowContent>}} parent\n *   Parent of flow nodes.\n * @param {State} state\n *   Info passed around about the current state.\n * @param {TrackFields} info\n *   Info on where we are in the document we are generating.\n * @returns {string}\n *   Serialized children, joined by (blank) lines.\n */\nexport function containerFlow(parent, state, info) {\n  const indexStack = state.indexStack\n  const children = parent.children || []\n  const tracker = state.createTracker(info)\n  /** @type {Array<string>} */\n  const results = []\n  let index = -1\n\n  indexStack.push(-1)\n\n  while (++index < children.length) {\n    const child = children[index]\n\n    indexStack[indexStack.length - 1] = index\n\n    results.push(\n      tracker.move(\n        state.handle(child, parent, state, {\n          before: '\\n',\n          after: '\\n',\n          ...tracker.current()\n        })\n      )\n    )\n\n    if (child.type !== 'list') {\n      state.bulletLastUsed = undefined\n    }\n\n    if (index < children.length - 1) {\n      results.push(\n        tracker.move(between(child, children[index + 1], parent, state))\n      )\n    }\n  }\n\n  indexStack.pop()\n\n  return results.join('')\n}\n\n/**\n * @param {Node} left\n * @param {Node} right\n * @param {Parent} parent\n * @param {State} state\n * @returns {string}\n */\nfunction between(left, right, parent, state) {\n  let index = state.join.length\n\n  while (index--) {\n    const result = state.join[index](left, right, parent, state)\n\n    if (result === true || result === 1) {\n      break\n    }\n\n    if (typeof result === 'number') {\n      return '\\n'.repeat(1 + result)\n    }\n\n    if (result === false) {\n      return '\\n\\n<!---->\\n\\n'\n    }\n  }\n\n  return '\\n\\n'\n}\n", "/**\n * @typedef {import('../types.js').IndentLines} IndentLines\n */\n\nconst eol = /\\r?\\n|\\r/g\n\n/**\n * @type {IndentLines}\n */\nexport function indentLines(value, map) {\n  /** @type {Array<string>} */\n  const result = []\n  let start = 0\n  let line = 0\n  /** @type {RegExpExecArray | null} */\n  let match\n\n  while ((match = eol.exec(value))) {\n    one(value.slice(start, match.index))\n    result.push(match[0])\n    start = match.index + match[0].length\n    line++\n  }\n\n  one(value.slice(start))\n\n  return result.join('')\n\n  /**\n   * @param {string} value\n   */\n  function one(value) {\n    result.push(map(value, line, !value))\n  }\n}\n", "/**\n * @typedef {import('../types.js').Unsafe} Unsafe\n */\n\n/**\n * @param {Unsafe} pattern\n * @returns {RegExp}\n */\nexport function patternCompile(pattern) {\n  if (!pattern._compiled) {\n    const before =\n      (pattern.atBreak ? '[\\\\r\\\\n][\\\\t ]*' : '') +\n      (pattern.before ? '(?:' + pattern.before + ')' : '')\n\n    pattern._compiled = new RegExp(\n      (before ? '(' + before + ')' : '') +\n        (/[|\\\\{}()[\\]^$+*?.-]/.test(pattern.character) ? '\\\\' : '') +\n        pattern.character +\n        (pattern.after ? '(?:' + pattern.after + ')' : ''),\n      'g'\n    )\n  }\n\n  return pattern._compiled\n}\n", "/**\n * @typedef {import('../types.js').Unsafe} Unsafe\n * @typedef {import('../types.js').ConstructName} ConstructName\n */\n\n/**\n * @param {Array<ConstructName>} stack\n * @param {Unsafe} pattern\n * @returns {boolean}\n */\nexport function patternInScope(stack, pattern) {\n  return (\n    listInScope(stack, pattern.inConstruct, true) &&\n    !listInScope(stack, pattern.notInConstruct, false)\n  )\n}\n\n/**\n * @param {Array<ConstructName>} stack\n * @param {Unsafe['inConstruct']} list\n * @param {boolean} none\n * @returns {boolean}\n */\nfunction listInScope(stack, list, none) {\n  if (typeof list === 'string') {\n    list = [list]\n  }\n\n  if (!list || list.length === 0) {\n    return none\n  }\n\n  let index = -1\n\n  while (++index < list.length) {\n    if (stack.includes(list[index])) {\n      return true\n    }\n  }\n\n  return false\n}\n", "/**\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').SafeConfig} SafeConfig\n */\n\nimport {patternCompile} from './pattern-compile.js'\nimport {patternInScope} from './pattern-in-scope.js'\n\n/**\n * Make a string safe for embedding in markdown constructs.\n *\n * In markdown, almost all punctuation characters can, in certain cases,\n * result in something.\n * Whether they do is highly subjective to where they happen and in what\n * they happen.\n *\n * To solve this, `mdast-util-to-markdown` tracks:\n *\n * * Characters before and after something;\n * * What \u201Cconstructs\u201D we are in.\n *\n * This information is then used by this function to escape or encode\n * special characters.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {string | null | undefined} input\n *   Raw value to make safe.\n * @param {SafeConfig} config\n *   Configuration.\n * @returns {string}\n *   Serialized markdown safe for embedding.\n */\nexport function safe(state, input, config) {\n  const value = (config.before || '') + (input || '') + (config.after || '')\n  /** @type {Array<number>} */\n  const positions = []\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {Record<number, {before: boolean, after: boolean}>} */\n  const infos = {}\n  let index = -1\n\n  while (++index < state.unsafe.length) {\n    const pattern = state.unsafe[index]\n\n    if (!patternInScope(state.stack, pattern)) {\n      continue\n    }\n\n    const expression = patternCompile(pattern)\n    /** @type {RegExpExecArray | null} */\n    let match\n\n    while ((match = expression.exec(value))) {\n      const before = 'before' in pattern || Boolean(pattern.atBreak)\n      const after = 'after' in pattern\n      const position = match.index + (before ? match[1].length : 0)\n\n      if (positions.includes(position)) {\n        if (infos[position].before && !before) {\n          infos[position].before = false\n        }\n\n        if (infos[position].after && !after) {\n          infos[position].after = false\n        }\n      } else {\n        positions.push(position)\n        infos[position] = {before, after}\n      }\n    }\n  }\n\n  positions.sort(numerical)\n\n  let start = config.before ? config.before.length : 0\n  const end = value.length - (config.after ? config.after.length : 0)\n  index = -1\n\n  while (++index < positions.length) {\n    const position = positions[index]\n\n    // Character before or after matched:\n    if (position < start || position >= end) {\n      continue\n    }\n\n    // If this character is supposed to be escaped because it has a condition on\n    // the next character, and the next character is definitly being escaped,\n    // then skip this escape.\n    if (\n      (position + 1 < end &&\n        positions[index + 1] === position + 1 &&\n        infos[position].after &&\n        !infos[position + 1].before &&\n        !infos[position + 1].after) ||\n      (positions[index - 1] === position - 1 &&\n        infos[position].before &&\n        !infos[position - 1].before &&\n        !infos[position - 1].after)\n    ) {\n      continue\n    }\n\n    if (start !== position) {\n      // If we have to use a character reference, an ampersand would be more\n      // correct, but as backslashes only care about punctuation, either will\n      // do the trick\n      result.push(escapeBackslashes(value.slice(start, position), '\\\\'))\n    }\n\n    start = position\n\n    if (\n      /[!-/:-@[-`{-~]/.test(value.charAt(position)) &&\n      (!config.encode || !config.encode.includes(value.charAt(position)))\n    ) {\n      // Character escape.\n      result.push('\\\\')\n    } else {\n      // Character reference.\n      result.push(\n        '&#x' + value.charCodeAt(position).toString(16).toUpperCase() + ';'\n      )\n      start++\n    }\n  }\n\n  result.push(escapeBackslashes(value.slice(start, end), config.after))\n\n  return result.join('')\n}\n\n/**\n * @param {number} a\n * @param {number} b\n * @returns {number}\n */\nfunction numerical(a, b) {\n  return a - b\n}\n\n/**\n * @param {string} value\n * @param {string} after\n * @returns {string}\n */\nfunction escapeBackslashes(value, after) {\n  const expression = /\\\\(?=[!-/:-@[-`{-~])/g\n  /** @type {Array<number>} */\n  const positions = []\n  /** @type {Array<string>} */\n  const results = []\n  const whole = value + after\n  let index = -1\n  let start = 0\n  /** @type {RegExpExecArray | null} */\n  let match\n\n  while ((match = expression.exec(whole))) {\n    positions.push(match.index)\n  }\n\n  while (++index < positions.length) {\n    if (start !== positions[index]) {\n      results.push(value.slice(start, positions[index]))\n    }\n\n    results.push('\\\\')\n    start = positions[index]\n  }\n\n  results.push(value.slice(start))\n\n  return results.join('')\n}\n", "/**\n * @typedef {import('../types.js').CreateTracker} CreateTracker\n * @typedef {import('../types.js').TrackCurrent} TrackCurrent\n * @typedef {import('../types.js').TrackMove} TrackMove\n * @typedef {import('../types.js').TrackShift} TrackShift\n */\n\n/**\n * Track positional info in the output.\n *\n * @type {CreateTracker}\n */\nexport function track(config) {\n  // Defaults are used to prevent crashes when older utilities somehow activate\n  // this code.\n  /* c8 ignore next 5 */\n  const options = config || {}\n  const now = options.now || {}\n  let lineShift = options.lineShift || 0\n  let line = now.line || 1\n  let column = now.column || 1\n\n  return {move, current, shift}\n\n  /**\n   * Get the current tracked info.\n   *\n   * @type {TrackCurrent}\n   */\n  function current() {\n    return {now: {line, column}, lineShift}\n  }\n\n  /**\n   * Define an increased line shift (the typical indent for lines).\n   *\n   * @type {TrackShift}\n   */\n  function shift(value) {\n    lineShift += value\n  }\n\n  /**\n   * Move past some generated markdown.\n   *\n   * @type {TrackMove}\n   */\n  function move(input) {\n    // eslint-disable-next-line unicorn/prefer-default-parameters\n    const value = input || ''\n    const chunks = value.split(/\\r?\\n|\\r/g)\n    const tail = chunks[chunks.length - 1]\n    line += chunks.length - 1\n    column =\n      chunks.length === 1 ? column + tail.length : 1 + tail.length + lineShift\n    return value\n  }\n}\n", "/**\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('mdast').FootnoteDefinition} FootnoteDefinition\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Map} Map\n */\n\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {association} from 'mdast-util-to-markdown/lib/util/association.js'\nimport {containerFlow} from 'mdast-util-to-markdown/lib/util/container-flow.js'\nimport {indentLines} from 'mdast-util-to-markdown/lib/util/indent-lines.js'\nimport {safe} from 'mdast-util-to-markdown/lib/util/safe.js'\nimport {track} from 'mdast-util-to-markdown/lib/util/track.js'\n\nfootnoteReference.peek = footnoteReferencePeek\n\n// To do: next major: rename `context` -> `state`, `safeOptions` to `info`, use\n// utilities on `state`.\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM footnotes\n * in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown`.\n */\nexport function gfmFootnoteFromMarkdown() {\n  return {\n    enter: {\n      gfmFootnoteDefinition: enterFootnoteDefinition,\n      gfmFootnoteDefinitionLabelString: enterFootnoteDefinitionLabelString,\n      gfmFootnoteCall: enterFootnoteCall,\n      gfmFootnoteCallString: enterFootnoteCallString\n    },\n    exit: {\n      gfmFootnoteDefinition: exitFootnoteDefinition,\n      gfmFootnoteDefinitionLabelString: exitFootnoteDefinitionLabelString,\n      gfmFootnoteCall: exitFootnoteCall,\n      gfmFootnoteCallString: exitFootnoteCallString\n    }\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM footnotes\n * in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown`.\n */\nexport function gfmFootnoteToMarkdown() {\n  return {\n    // This is on by default already.\n    unsafe: [{character: '[', inConstruct: ['phrasing', 'label', 'reference']}],\n    handlers: {footnoteDefinition, footnoteReference}\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteDefinition(token) {\n  this.enter(\n    {type: 'footnoteDefinition', identifier: '', label: '', children: []},\n    token\n  )\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteDefinitionLabelString() {\n  this.buffer()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteDefinitionLabelString(token) {\n  const label = this.resume()\n  const node = /** @type {FootnoteDefinition} */ (\n    this.stack[this.stack.length - 1]\n  )\n  node.label = label\n  node.identifier = normalizeIdentifier(\n    this.sliceSerialize(token)\n  ).toLowerCase()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteDefinition(token) {\n  this.exit(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteCall(token) {\n  this.enter({type: 'footnoteReference', identifier: '', label: ''}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteCallString() {\n  this.buffer()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteCallString(token) {\n  const label = this.resume()\n  const node = /** @type {FootnoteDefinition} */ (\n    this.stack[this.stack.length - 1]\n  )\n  node.label = label\n  node.identifier = normalizeIdentifier(\n    this.sliceSerialize(token)\n  ).toLowerCase()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteCall(token) {\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {FootnoteReference} node\n */\nfunction footnoteReference(node, _, context, safeOptions) {\n  const tracker = track(safeOptions)\n  let value = tracker.move('[^')\n  const exit = context.enter('footnoteReference')\n  const subexit = context.enter('reference')\n  value += tracker.move(\n    safe(context, association(node), {\n      ...tracker.current(),\n      before: value,\n      after: ']'\n    })\n  )\n  subexit()\n  exit()\n  value += tracker.move(']')\n  return value\n}\n\n/** @type {ToMarkdownHandle} */\nfunction footnoteReferencePeek() {\n  return '['\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {FootnoteDefinition} node\n */\nfunction footnoteDefinition(node, _, context, safeOptions) {\n  const tracker = track(safeOptions)\n  let value = tracker.move('[^')\n  const exit = context.enter('footnoteDefinition')\n  const subexit = context.enter('label')\n  value += tracker.move(\n    safe(context, association(node), {\n      ...tracker.current(),\n      before: value,\n      after: ']'\n    })\n  )\n  subexit()\n  value += tracker.move(\n    ']:' + (node.children && node.children.length > 0 ? ' ' : '')\n  )\n  tracker.shift(4)\n  value += tracker.move(\n    indentLines(containerFlow(node, context, tracker.current()), map)\n  )\n  exit()\n\n  return value\n}\n\n/** @type {Map} */\nfunction map(line, index, blank) {\n  if (index === 0) {\n    return line\n  }\n\n  return (blank ? '' : '    ') + line\n}\n", "/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').PhrasingContent} PhrasingContent\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * Serialize the children of a parent that contains phrasing children.\n *\n * These children will be joined flush together.\n *\n * @param {Parent & {children: Array<PhrasingContent>}} parent\n *   Parent of flow nodes.\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Info} info\n *   Info on where we are in the document we are generating.\n * @returns {string}\n *   Serialized children, joined together.\n */\nexport function containerPhrasing(parent, state, info) {\n  const indexStack = state.indexStack\n  const children = parent.children || []\n  /** @type {Array<string>} */\n  const results = []\n  let index = -1\n  let before = info.before\n\n  indexStack.push(-1)\n  let tracker = state.createTracker(info)\n\n  while (++index < children.length) {\n    const child = children[index]\n    /** @type {string} */\n    let after\n\n    indexStack[indexStack.length - 1] = index\n\n    if (index + 1 < children.length) {\n      /** @type {Handle} */\n      // @ts-expect-error: hush, it\u2019s actually a `zwitch`.\n      let handle = state.handle.handlers[children[index + 1].type]\n      /** @type {Handle} */\n      // @ts-expect-error: hush, it\u2019s actually a `zwitch`.\n      if (handle && handle.peek) handle = handle.peek\n      after = handle\n        ? handle(children[index + 1], parent, state, {\n            before: '',\n            after: '',\n            ...tracker.current()\n          }).charAt(0)\n        : ''\n    } else {\n      after = info.after\n    }\n\n    // In some cases, html (text) can be found in phrasing right after an eol.\n    // When we\u2019d serialize that, in most cases that would be seen as html\n    // (flow).\n    // As we can\u2019t escape or so to prevent it from happening, we take a somewhat\n    // reasonable approach: replace that eol with a space.\n    // See: <https://github.com/syntax-tree/mdast-util-to-markdown/issues/15>\n    if (\n      results.length > 0 &&\n      (before === '\\r' || before === '\\n') &&\n      child.type === 'html'\n    ) {\n      results[results.length - 1] = results[results.length - 1].replace(\n        /(\\r?\\n|\\r)$/,\n        ' '\n      )\n      before = ' '\n\n      // To do: does this work to reset tracker?\n      tracker = state.createTracker(info)\n      tracker.move(results.join(''))\n    }\n\n    results.push(\n      tracker.move(\n        state.handle(child, parent, state, {\n          ...tracker.current(),\n          before,\n          after\n        })\n      )\n    )\n\n    before = results[results.length - 1].slice(-1)\n  }\n\n  indexStack.pop()\n\n  return results.join('')\n}\n", "/**\n * @typedef {import('mdast').Delete} Delete\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n *\n * @typedef {import('mdast-util-to-markdown').ConstructName} ConstructName\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n */\n\nimport {containerPhrasing} from 'mdast-util-to-markdown/lib/util/container-phrasing.js'\nimport {track} from 'mdast-util-to-markdown/lib/util/track.js'\n\n// To do: next major: expose functions.\n// To do: next major: use `state`, state utilities.\n\n/**\n * List of constructs that occur in phrasing (paragraphs, headings), but cannot\n * contain strikethrough.\n * So they sort of cancel each other out.\n * Note: could use a better name.\n *\n * Note: keep in sync with: <https://github.com/syntax-tree/mdast-util-to-markdown/blob/8ce8dbf/lib/unsafe.js#L14>\n *\n * @type {Array<ConstructName>}\n */\nconst constructsWithoutStrikethrough = [\n  'autolink',\n  'destinationLiteral',\n  'destinationRaw',\n  'reference',\n  'titleQuote',\n  'titleApostrophe'\n]\n\nhandleDelete.peek = peekDelete\n\n/**\n * Extension for `mdast-util-from-markdown` to enable GFM strikethrough.\n *\n * @type {FromMarkdownExtension}\n */\nexport const gfmStrikethroughFromMarkdown = {\n  canContainEols: ['delete'],\n  enter: {strikethrough: enterStrikethrough},\n  exit: {strikethrough: exitStrikethrough}\n}\n\n/**\n * Extension for `mdast-util-to-markdown` to enable GFM strikethrough.\n *\n * @type {ToMarkdownExtension}\n */\nexport const gfmStrikethroughToMarkdown = {\n  unsafe: [\n    {\n      character: '~',\n      inConstruct: 'phrasing',\n      notInConstruct: constructsWithoutStrikethrough\n    }\n  ],\n  handlers: {delete: handleDelete}\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterStrikethrough(token) {\n  this.enter({type: 'delete', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitStrikethrough(token) {\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {Delete} node\n */\nfunction handleDelete(node, _, context, safeOptions) {\n  const tracker = track(safeOptions)\n  const exit = context.enter('strikethrough')\n  let value = tracker.move('~~')\n  value += containerPhrasing(node, context, {\n    ...tracker.current(),\n    before: value,\n    after: '~'\n  })\n  value += tracker.move('~~')\n  exit()\n  return value\n}\n\n/** @type {ToMarkdownHandle} */\nfunction peekDelete() {\n  return '~'\n}\n", "/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').State} State\n */\n\nimport {patternCompile} from '../util/pattern-compile.js'\n\ninlineCode.peek = inlineCodePeek\n\n/**\n * @param {InlineCode} node\n * @param {Parent | undefined} _\n * @param {State} state\n * @returns {string}\n */\nexport function inlineCode(node, _, state) {\n  let value = node.value || ''\n  let sequence = '`'\n  let index = -1\n\n  // If there is a single grave accent on its own in the code, use a fence of\n  // two.\n  // If there are two in a row, use one.\n  while (new RegExp('(^|[^`])' + sequence + '([^`]|$)').test(value)) {\n    sequence += '`'\n  }\n\n  // If this is not just spaces or eols (tabs don\u2019t count), and either the\n  // first or last character are a space, eol, or tick, then pad with spaces.\n  if (\n    /[^ \\r\\n]/.test(value) &&\n    ((/^[ \\r\\n]/.test(value) && /[ \\r\\n]$/.test(value)) || /^`|`$/.test(value))\n  ) {\n    value = ' ' + value + ' '\n  }\n\n  // We have a potential problem: certain characters after eols could result in\n  // blocks being seen.\n  // For example, if someone injected the string `'\\n# b'`, then that would\n  // result in an ATX heading.\n  // We can\u2019t escape characters in `inlineCode`, but because eols are\n  // transformed to spaces when going from markdown to HTML anyway, we can swap\n  // them out.\n  while (++index < state.unsafe.length) {\n    const pattern = state.unsafe[index]\n    const expression = patternCompile(pattern)\n    /** @type {RegExpExecArray | null} */\n    let match\n\n    // Only look for `atBreak`s.\n    // Btw: note that `atBreak` patterns will always start the regex at LF or\n    // CR.\n    if (!pattern.atBreak) continue\n\n    while ((match = expression.exec(value))) {\n      let position = match.index\n\n      // Support CRLF (patterns only look for one of the characters).\n      if (\n        value.charCodeAt(position) === 10 /* `\\n` */ &&\n        value.charCodeAt(position - 1) === 13 /* `\\r` */\n      ) {\n        position--\n      }\n\n      value = value.slice(0, position) + ' ' + value.slice(match.index + 1)\n    }\n  }\n\n  return sequence + value + sequence\n}\n\n/**\n * @returns {string}\n */\nfunction inlineCodePeek() {\n  return '`'\n}\n", "/**\n * @typedef Options\n *   Configuration (optional).\n * @property {string|null|ReadonlyArray<string|null|undefined>} [align]\n *   One style for all columns, or styles for their respective columns.\n *   Each style is either `'l'` (left), `'r'` (right), or `'c'` (center).\n *   Other values are treated as `''`, which doesn\u2019t place the colon in the\n *   alignment row but does align left.\n *   *Only the lowercased first character is used, so `Right` is fine.*\n * @property {boolean} [padding=true]\n *   Whether to add a space of padding between delimiters and cells.\n *\n *   When `true`, there is padding:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there is no padding:\n *\n *   ```markdown\n *   |Alpha|B    |\n *   |-----|-----|\n *   |C    |Delta|\n *   ```\n * @property {boolean} [delimiterStart=true]\n *   Whether to begin each row with the delimiter.\n *\n *   > \uD83D\uDC49 **Note**: please don\u2019t use this: it could create fragile structures\n *   > that aren\u2019t understandable to some markdown parsers.\n *\n *   When `true`, there are starting delimiters:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there are no starting delimiters:\n *\n *   ```markdown\n *   Alpha | B     |\n *   ----- | ----- |\n *   C     | Delta |\n *   ```\n * @property {boolean} [delimiterEnd=true]\n *   Whether to end each row with the delimiter.\n *\n *   > \uD83D\uDC49 **Note**: please don\u2019t use this: it could create fragile structures\n *   > that aren\u2019t understandable to some markdown parsers.\n *\n *   When `true`, there are ending delimiters:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there are no ending delimiters:\n *\n *   ```markdown\n *   | Alpha | B\n *   | ----- | -----\n *   | C     | Delta\n *   ```\n * @property {boolean} [alignDelimiters=true]\n *   Whether to align the delimiters.\n *   By default, they are aligned:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   Pass `false` to make them staggered:\n *\n *   ```markdown\n *   | Alpha | B |\n *   | - | - |\n *   | C | Delta |\n *   ```\n * @property {(value: string) => number} [stringLength]\n *   Function to detect the length of table cell content.\n *   This is used when aligning the delimiters (`|`) between table cells.\n *   Full-width characters and emoji mess up delimiter alignment when viewing\n *   the markdown source.\n *   To fix this, you can pass this function, which receives the cell content\n *   and returns its \u201Cvisible\u201D size.\n *   Note that what is and isn\u2019t visible depends on where the text is displayed.\n *\n *   Without such a function, the following:\n *\n *   ```js\n *   markdownTable([\n *     ['Alpha', 'Bravo'],\n *     ['\u4E2D\u6587', 'Charlie'],\n *     ['\uD83D\uDC69\u200D\u2764\uFE0F\u200D\uD83D\uDC69', 'Delta']\n *   ])\n *   ```\n *\n *   Yields:\n *\n *   ```markdown\n *   | Alpha | Bravo |\n *   | - | - |\n *   | \u4E2D\u6587 | Charlie |\n *   | \uD83D\uDC69\u200D\u2764\uFE0F\u200D\uD83D\uDC69 | Delta |\n *   ```\n *\n *   With [`string-width`](https://github.com/sindresorhus/string-width):\n *\n *   ```js\n *   import stringWidth from 'string-width'\n *\n *   markdownTable(\n *     [\n *       ['Alpha', 'Bravo'],\n *       ['\u4E2D\u6587', 'Charlie'],\n *       ['\uD83D\uDC69\u200D\u2764\uFE0F\u200D\uD83D\uDC69', 'Delta']\n *     ],\n *     {stringLength: stringWidth}\n *   )\n *   ```\n *\n *   Yields:\n *\n *   ```markdown\n *   | Alpha | Bravo   |\n *   | ----- | ------- |\n *   | \u4E2D\u6587  | Charlie |\n *   | \uD83D\uDC69\u200D\u2764\uFE0F\u200D\uD83D\uDC69    | Delta   |\n *   ```\n */\n\n/**\n * @typedef {Options} MarkdownTableOptions\n * @todo\n *   Remove next major.\n */\n\n/**\n * Generate a markdown ([GFM](https://docs.github.com/en/github/writing-on-github/working-with-advanced-formatting/organizing-information-with-tables)) table..\n *\n * @param {ReadonlyArray<ReadonlyArray<string|null|undefined>>} table\n *   Table data (matrix of strings).\n * @param {Options} [options]\n *   Configuration (optional).\n * @returns {string}\n */\nexport function markdownTable(table, options = {}) {\n  const align = (options.align || []).concat()\n  const stringLength = options.stringLength || defaultStringLength\n  /** @type {Array<number>} Character codes as symbols for alignment per column. */\n  const alignments = []\n  /** @type {Array<Array<string>>} Cells per row. */\n  const cellMatrix = []\n  /** @type {Array<Array<number>>} Sizes of each cell per row. */\n  const sizeMatrix = []\n  /** @type {Array<number>} */\n  const longestCellByColumn = []\n  let mostCellsPerRow = 0\n  let rowIndex = -1\n\n  // This is a superfluous loop if we don\u2019t align delimiters, but otherwise we\u2019d\n  // do superfluous work when aligning, so optimize for aligning.\n  while (++rowIndex < table.length) {\n    /** @type {Array<string>} */\n    const row = []\n    /** @type {Array<number>} */\n    const sizes = []\n    let columnIndex = -1\n\n    if (table[rowIndex].length > mostCellsPerRow) {\n      mostCellsPerRow = table[rowIndex].length\n    }\n\n    while (++columnIndex < table[rowIndex].length) {\n      const cell = serialize(table[rowIndex][columnIndex])\n\n      if (options.alignDelimiters !== false) {\n        const size = stringLength(cell)\n        sizes[columnIndex] = size\n\n        if (\n          longestCellByColumn[columnIndex] === undefined ||\n          size > longestCellByColumn[columnIndex]\n        ) {\n          longestCellByColumn[columnIndex] = size\n        }\n      }\n\n      row.push(cell)\n    }\n\n    cellMatrix[rowIndex] = row\n    sizeMatrix[rowIndex] = sizes\n  }\n\n  // Figure out which alignments to use.\n  let columnIndex = -1\n\n  if (typeof align === 'object' && 'length' in align) {\n    while (++columnIndex < mostCellsPerRow) {\n      alignments[columnIndex] = toAlignment(align[columnIndex])\n    }\n  } else {\n    const code = toAlignment(align)\n\n    while (++columnIndex < mostCellsPerRow) {\n      alignments[columnIndex] = code\n    }\n  }\n\n  // Inject the alignment row.\n  columnIndex = -1\n  /** @type {Array<string>} */\n  const row = []\n  /** @type {Array<number>} */\n  const sizes = []\n\n  while (++columnIndex < mostCellsPerRow) {\n    const code = alignments[columnIndex]\n    let before = ''\n    let after = ''\n\n    if (code === 99 /* `c` */) {\n      before = ':'\n      after = ':'\n    } else if (code === 108 /* `l` */) {\n      before = ':'\n    } else if (code === 114 /* `r` */) {\n      after = ':'\n    }\n\n    // There *must* be at least one hyphen-minus in each alignment cell.\n    let size =\n      options.alignDelimiters === false\n        ? 1\n        : Math.max(\n            1,\n            longestCellByColumn[columnIndex] - before.length - after.length\n          )\n\n    const cell = before + '-'.repeat(size) + after\n\n    if (options.alignDelimiters !== false) {\n      size = before.length + size + after.length\n\n      if (size > longestCellByColumn[columnIndex]) {\n        longestCellByColumn[columnIndex] = size\n      }\n\n      sizes[columnIndex] = size\n    }\n\n    row[columnIndex] = cell\n  }\n\n  // Inject the alignment row.\n  cellMatrix.splice(1, 0, row)\n  sizeMatrix.splice(1, 0, sizes)\n\n  rowIndex = -1\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (++rowIndex < cellMatrix.length) {\n    const row = cellMatrix[rowIndex]\n    const sizes = sizeMatrix[rowIndex]\n    columnIndex = -1\n    /** @type {Array<string>} */\n    const line = []\n\n    while (++columnIndex < mostCellsPerRow) {\n      const cell = row[columnIndex] || ''\n      let before = ''\n      let after = ''\n\n      if (options.alignDelimiters !== false) {\n        const size =\n          longestCellByColumn[columnIndex] - (sizes[columnIndex] || 0)\n        const code = alignments[columnIndex]\n\n        if (code === 114 /* `r` */) {\n          before = ' '.repeat(size)\n        } else if (code === 99 /* `c` */) {\n          if (size % 2) {\n            before = ' '.repeat(size / 2 + 0.5)\n            after = ' '.repeat(size / 2 - 0.5)\n          } else {\n            before = ' '.repeat(size / 2)\n            after = before\n          }\n        } else {\n          after = ' '.repeat(size)\n        }\n      }\n\n      if (options.delimiterStart !== false && !columnIndex) {\n        line.push('|')\n      }\n\n      if (\n        options.padding !== false &&\n        // Don\u2019t add the opening space if we\u2019re not aligning and the cell is\n        // empty: there will be a closing space.\n        !(options.alignDelimiters === false && cell === '') &&\n        (options.delimiterStart !== false || columnIndex)\n      ) {\n        line.push(' ')\n      }\n\n      if (options.alignDelimiters !== false) {\n        line.push(before)\n      }\n\n      line.push(cell)\n\n      if (options.alignDelimiters !== false) {\n        line.push(after)\n      }\n\n      if (options.padding !== false) {\n        line.push(' ')\n      }\n\n      if (\n        options.delimiterEnd !== false ||\n        columnIndex !== mostCellsPerRow - 1\n      ) {\n        line.push('|')\n      }\n    }\n\n    lines.push(\n      options.delimiterEnd === false\n        ? line.join('').replace(/ +$/, '')\n        : line.join('')\n    )\n  }\n\n  return lines.join('\\n')\n}\n\n/**\n * @param {string|null|undefined} [value]\n * @returns {string}\n */\nfunction serialize(value) {\n  return value === null || value === undefined ? '' : String(value)\n}\n\n/**\n * @param {string} value\n * @returns {number}\n */\nfunction defaultStringLength(value) {\n  return value.length\n}\n\n/**\n * @param {string|null|undefined} value\n * @returns {number}\n */\nfunction toAlignment(value) {\n  const code = typeof value === 'string' ? value.codePointAt(0) : 0\n\n  return code === 67 /* `C` */ || code === 99 /* `c` */\n    ? 99 /* `c` */\n    : code === 76 /* `L` */ || code === 108 /* `l` */\n    ? 108 /* `l` */\n    : code === 82 /* `R` */ || code === 114 /* `r` */\n    ? 114 /* `r` */\n    : 0\n}\n", "/**\n * @typedef {import('mdast').Table} Table\n * @typedef {import('mdast').TableRow} TableRow\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('mdast').InlineCode} InlineCode\n *\n * @typedef {import('markdown-table').MarkdownTableOptions} MarkdownTableOptions\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n *\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Context} ToMarkdownContext\n * @typedef {import('mdast-util-to-markdown').SafeOptions} SafeOptions\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {boolean | null | undefined} [tableCellPadding=true]\n *   Whether to add a space of padding between delimiters and cells.\n * @property {boolean | null | undefined} [tablePipeAlign=true]\n *   Whether to align the delimiters.\n * @property {MarkdownTableOptions['stringLength'] | null | undefined} [stringLength]\n *   Function to detect the length of table cell content, used when aligning\n *   the delimiters between cells\n */\n\nimport {containerPhrasing} from 'mdast-util-to-markdown/lib/util/container-phrasing.js'\nimport {inlineCode} from 'mdast-util-to-markdown/lib/handle/inline-code.js'\nimport {markdownTable} from 'markdown-table'\n\n// To do: next major: use `state` and `state` utilities from `mdast-util-to-markdown`.\n// To do: next major: use `defaultHandlers.inlineCode`.\n// To do: next major: expose functions.\n\n/**\n * Extension for `mdast-util-from-markdown` to enable GFM tables.\n *\n * @type {FromMarkdownExtension}\n */\nexport const gfmTableFromMarkdown = {\n  enter: {\n    table: enterTable,\n    tableData: enterCell,\n    tableHeader: enterCell,\n    tableRow: enterRow\n  },\n  exit: {\n    codeText: exitCodeText,\n    table: exitTable,\n    tableData: exit,\n    tableHeader: exit,\n    tableRow: exit\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterTable(token) {\n  /** @type {Array<'left' | 'right' | 'center' | 'none'>} */\n  // @ts-expect-error: `align` is custom.\n  const align = token._align\n  this.enter(\n    {\n      type: 'table',\n      align: align.map((d) => (d === 'none' ? null : d)),\n      children: []\n    },\n    token\n  )\n  this.setData('inTable', true)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitTable(token) {\n  this.exit(token)\n  this.setData('inTable')\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterRow(token) {\n  this.enter({type: 'tableRow', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exit(token) {\n  this.exit(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterCell(token) {\n  this.enter({type: 'tableCell', children: []}, token)\n}\n\n// Overwrite the default code text data handler to unescape escaped pipes when\n// they are in tables.\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitCodeText(token) {\n  let value = this.resume()\n\n  if (this.getData('inTable')) {\n    value = value.replace(/\\\\([\\\\|])/g, replace)\n  }\n\n  const node = /** @type {InlineCode} */ (this.stack[this.stack.length - 1])\n  node.value = value\n  this.exit(token)\n}\n\n/**\n * @param {string} $0\n * @param {string} $1\n * @returns {string}\n */\nfunction replace($0, $1) {\n  // Pipes work, backslashes don\u2019t (but can\u2019t escape pipes).\n  return $1 === '|' ? $1 : $0\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM tables in\n * markdown.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM tables.\n */\nexport function gfmTableToMarkdown(options) {\n  const settings = options || {}\n  const padding = settings.tableCellPadding\n  const alignDelimiters = settings.tablePipeAlign\n  const stringLength = settings.stringLength\n  const around = padding ? ' ' : '|'\n\n  return {\n    unsafe: [\n      {character: '\\r', inConstruct: 'tableCell'},\n      {character: '\\n', inConstruct: 'tableCell'},\n      // A pipe, when followed by a tab or space (padding), or a dash or colon\n      // (unpadded delimiter row), could result in a table.\n      {atBreak: true, character: '|', after: '[\\t :-]'},\n      // A pipe in a cell must be encoded.\n      {character: '|', inConstruct: 'tableCell'},\n      // A colon must be followed by a dash, in which case it could start a\n      // delimiter row.\n      {atBreak: true, character: ':', after: '-'},\n      // A delimiter row can also start with a dash, when followed by more\n      // dashes, a colon, or a pipe.\n      // This is a stricter version than the built in check for lists, thematic\n      // breaks, and setex heading underlines though:\n      // <https://github.com/syntax-tree/mdast-util-to-markdown/blob/51a2038/lib/unsafe.js#L57>\n      {atBreak: true, character: '-', after: '[:|-]'}\n    ],\n    handlers: {\n      table: handleTable,\n      tableRow: handleTableRow,\n      tableCell: handleTableCell,\n      inlineCode: inlineCodeWithTable\n    }\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {Table} node\n   */\n  function handleTable(node, _, context, safeOptions) {\n    return serializeData(\n      handleTableAsData(node, context, safeOptions),\n      node.align\n    )\n  }\n\n  /**\n   * This function isn\u2019t really used normally, because we handle rows at the\n   * table level.\n   * But, if someone passes in a table row, this ensures we make somewhat sense.\n   *\n   * @type {ToMarkdownHandle}\n   * @param {TableRow} node\n   */\n  function handleTableRow(node, _, context, safeOptions) {\n    const row = handleTableRowAsData(node, context, safeOptions)\n    const value = serializeData([row])\n    // `markdown-table` will always add an align row\n    return value.slice(0, value.indexOf('\\n'))\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {TableCell} node\n   */\n  function handleTableCell(node, _, context, safeOptions) {\n    const exit = context.enter('tableCell')\n    const subexit = context.enter('phrasing')\n    const value = containerPhrasing(node, context, {\n      ...safeOptions,\n      before: around,\n      after: around\n    })\n    subexit()\n    exit()\n    return value\n  }\n\n  /**\n   * @param {Array<Array<string>>} matrix\n   * @param {Array<string | null | undefined> | null | undefined} [align]\n   */\n  function serializeData(matrix, align) {\n    return markdownTable(matrix, {\n      align,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      alignDelimiters,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      padding,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      stringLength\n    })\n  }\n\n  /**\n   * @param {Table} node\n   * @param {ToMarkdownContext} context\n   * @param {SafeOptions} safeOptions\n   */\n  function handleTableAsData(node, context, safeOptions) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<Array<string>>} */\n    const result = []\n    const subexit = context.enter('table')\n\n    while (++index < children.length) {\n      result[index] = handleTableRowAsData(\n        children[index],\n        context,\n        safeOptions\n      )\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @param {TableRow} node\n   * @param {ToMarkdownContext} context\n   * @param {SafeOptions} safeOptions\n   */\n  function handleTableRowAsData(node, context, safeOptions) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<string>} */\n    const result = []\n    const subexit = context.enter('tableRow')\n\n    while (++index < children.length) {\n      // Note: the positional info as used here is incorrect.\n      // Making it correct would be impossible due to aligning cells?\n      // And it would need copy/pasting `markdown-table` into this project.\n      result[index] = handleTableCell(\n        children[index],\n        node,\n        context,\n        safeOptions\n      )\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {InlineCode} node\n   */\n  function inlineCodeWithTable(node, parent, context) {\n    let value = inlineCode(node, parent, context)\n\n    if (context.stack.includes('tableCell')) {\n      value = value.replace(/\\|/g, '\\\\$&')\n    }\n\n    return value\n  }\n}\n", "/**\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bullet'], null | undefined>}\n */\nexport function checkBullet(state) {\n  const marker = state.options.bullet || '*'\n\n  if (marker !== '*' && marker !== '+' && marker !== '-') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        marker +\n        '` for `options.bullet`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  return marker\n}\n", "/**\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['listItemIndent'], null | undefined>}\n */\nexport function checkListItemIndent(state) {\n  const style = state.options.listItemIndent || 'tab'\n\n  // To do: remove in a major.\n  // @ts-expect-error: deprecated.\n  if (style === 1 || style === '1') {\n    return 'one'\n  }\n\n  if (style !== 'tab' && style !== 'one' && style !== 'mixed') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        style +\n        '` for `options.listItemIndent`, expected `tab`, `one`, or `mixed`'\n    )\n  }\n\n  return style\n}\n", "/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('../types.js').Map} Map\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Info} Info\n */\n\nimport {checkBullet} from '../util/check-bullet.js'\nimport {checkListItemIndent} from '../util/check-list-item-indent.js'\n\n/**\n * @param {ListItem} node\n * @param {Parent | undefined} parent\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function listItem(node, parent, state, info) {\n  const listItemIndent = checkListItemIndent(state)\n  let bullet = state.bulletCurrent || checkBullet(state)\n\n  // Add the marker value for ordered lists.\n  if (parent && parent.type === 'list' && parent.ordered) {\n    bullet =\n      (typeof parent.start === 'number' && parent.start > -1\n        ? parent.start\n        : 1) +\n      (state.options.incrementListMarker === false\n        ? 0\n        : parent.children.indexOf(node)) +\n      bullet\n  }\n\n  let size = bullet.length + 1\n\n  if (\n    listItemIndent === 'tab' ||\n    (listItemIndent === 'mixed' &&\n      ((parent && parent.type === 'list' && parent.spread) || node.spread))\n  ) {\n    size = Math.ceil(size / 4) * 4\n  }\n\n  const tracker = state.createTracker(info)\n  tracker.move(bullet + ' '.repeat(size - bullet.length))\n  tracker.shift(size)\n  const exit = state.enter('listItem')\n  const value = state.indentLines(\n    state.containerFlow(node, tracker.current()),\n    map\n  )\n  exit()\n\n  return value\n\n  /** @type {Map} */\n  function map(line, index, blank) {\n    if (index) {\n      return (blank ? '' : ' '.repeat(size)) + line\n    }\n\n    return (blank ? bullet : bullet + ' '.repeat(size - bullet.length)) + line\n  }\n}\n", "/**\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n */\n\n/**\n * @typedef {Extract<Root | Content, Parent>} Parents\n */\n\nimport {listItem} from 'mdast-util-to-markdown/lib/handle/list-item.js'\nimport {track} from 'mdast-util-to-markdown/lib/util/track.js'\n\n// To do: next major: rename `context` -> `state`, `safeOptions` -> `info`, use\n// `track` from `state`.\n// To do: next major: replace exports with functions.\n// To do: next major: use `defaulthandlers.listItem`.\n\n/**\n * Extension for `mdast-util-from-markdown` to enable GFM task list items.\n *\n * @type {FromMarkdownExtension}\n */\nexport const gfmTaskListItemFromMarkdown = {\n  exit: {\n    taskListCheckValueChecked: exitCheck,\n    taskListCheckValueUnchecked: exitCheck,\n    paragraph: exitParagraphWithTaskListItem\n  }\n}\n\n/**\n * Extension for `mdast-util-to-markdown` to enable GFM task list items.\n *\n * @type {ToMarkdownExtension}\n */\nexport const gfmTaskListItemToMarkdown = {\n  unsafe: [{atBreak: true, character: '-', after: '[:|-]'}],\n  handlers: {listItem: listItemWithTaskListItem}\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitCheck(token) {\n  const node = /** @type {ListItem} */ (this.stack[this.stack.length - 2])\n  // We\u2019re always in a paragraph, in a list item.\n  node.checked = token.type === 'taskListCheckValueChecked'\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitParagraphWithTaskListItem(token) {\n  const parent = /** @type {Parents} */ (this.stack[this.stack.length - 2])\n\n  if (\n    parent &&\n    parent.type === 'listItem' &&\n    typeof parent.checked === 'boolean'\n  ) {\n    const node = /** @type {Paragraph} */ (this.stack[this.stack.length - 1])\n    const head = node.children[0]\n\n    if (head && head.type === 'text') {\n      const siblings = parent.children\n      let index = -1\n      /** @type {Paragraph | undefined} */\n      let firstParaghraph\n\n      while (++index < siblings.length) {\n        const sibling = siblings[index]\n        if (sibling.type === 'paragraph') {\n          firstParaghraph = sibling\n          break\n        }\n      }\n\n      if (firstParaghraph === node) {\n        // Must start with a space or a tab.\n        head.value = head.value.slice(1)\n\n        if (head.value.length === 0) {\n          node.children.shift()\n        } else if (\n          node.position &&\n          head.position &&\n          typeof head.position.start.offset === 'number'\n        ) {\n          head.position.start.column++\n          head.position.start.offset++\n          node.position.start = Object.assign({}, head.position.start)\n        }\n      }\n    }\n  }\n\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {ListItem} node\n */\nfunction listItemWithTaskListItem(node, parent, context, safeOptions) {\n  const head = node.children[0]\n  const checkable =\n    typeof node.checked === 'boolean' && head && head.type === 'paragraph'\n  const checkbox = '[' + (node.checked ? 'x' : ' ') + '] '\n  const tracker = track(safeOptions)\n\n  if (checkable) {\n    tracker.move(checkbox)\n  }\n\n  let value = listItem(node, parent, context, {\n    ...safeOptions,\n    ...tracker.current()\n  })\n\n  if (checkable) {\n    value = value.replace(/^(?:[*+-]|\\d+\\.)([\\r\\n]| {1,3})/, check)\n  }\n\n  return value\n\n  /**\n   * @param {string} $0\n   * @returns {string}\n   */\n  function check($0) {\n    return $0 + checkbox\n  }\n}\n", "/**\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n */\n\n/**\n * @typedef {import('mdast-util-gfm-table').Options} Options\n *   Configuration.\n */\n\nimport {\n  gfmAutolinkLiteralFromMarkdown,\n  gfmAutolinkLiteralToMarkdown\n} from 'mdast-util-gfm-autolink-literal'\nimport {\n  gfmFootnoteFromMarkdown,\n  gfmFootnoteToMarkdown\n} from 'mdast-util-gfm-footnote'\nimport {\n  gfmStrikethroughFromMarkdown,\n  gfmStrikethroughToMarkdown\n} from 'mdast-util-gfm-strikethrough'\nimport {gfmTableFromMarkdown, gfmTableToMarkdown} from 'mdast-util-gfm-table'\nimport {\n  gfmTaskListItemFromMarkdown,\n  gfmTaskListItemToMarkdown\n} from 'mdast-util-gfm-task-list-item'\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM (autolink\n * literals, footnotes, strikethrough, tables, tasklists).\n *\n * @returns {Array<FromMarkdownExtension>}\n *   Extension for `mdast-util-from-markdown` to enable GFM (autolink literals,\n *   footnotes, strikethrough, tables, tasklists).\n */\nexport function gfmFromMarkdown() {\n  return [\n    gfmAutolinkLiteralFromMarkdown,\n    gfmFootnoteFromMarkdown(),\n    gfmStrikethroughFromMarkdown,\n    gfmTableFromMarkdown,\n    gfmTaskListItemFromMarkdown\n  ]\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM (autolink\n * literals, footnotes, strikethrough, tables, tasklists).\n *\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM (autolink literals,\n *   footnotes, strikethrough, tables, tasklists).\n */\nexport function gfmToMarkdown(options) {\n  return {\n    extensions: [\n      gfmAutolinkLiteralToMarkdown,\n      gfmFootnoteToMarkdown(),\n      gfmStrikethroughToMarkdown,\n      gfmTableToMarkdown(options),\n      gfmTaskListItemToMarkdown\n    ]\n  }\n}\n", "/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('micromark-extension-gfm').Options & import('mdast-util-gfm').Options} Options\n */\n\nimport {gfm} from 'micromark-extension-gfm'\nimport {gfmFromMarkdown, gfmToMarkdown} from 'mdast-util-gfm'\n\n/**\n * Plugin to support GFM (autolink literals, footnotes, strikethrough, tables, tasklists).\n *\n * @type {import('unified').Plugin<[Options?]|void[], Root>}\n */\nexport default function remarkGfm(options = {}) {\n  const data = this.data()\n\n  add('micromarkExtensions', gfm(options))\n  add('fromMarkdownExtensions', gfmFromMarkdown())\n  add('toMarkdownExtensions', gfmToMarkdown(options))\n\n  /**\n   * @param {string} field\n   * @param {unknown} value\n   */\n  function add(field, value) {\n    const list = /** @type {unknown[]} */ (\n      // Other extensions\n      /* c8 ignore next 2 */\n      data[field] ? data[field] : (data[field] = [])\n    )\n\n    list.push(value)\n  }\n}\n", "/**\n * @typedef {import('mdast').Root|import('mdast').Content} Node\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [includeImageAlt=true]\n *   Whether to use `alt` for `image`s.\n * @property {boolean | null | undefined} [includeHtml=true]\n *   Whether to use `value` of HTML.\n */\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Get the text content of a node or list of nodes.\n *\n * Prefers the node\u2019s plain-text fields, otherwise serializes its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} value\n *   Thing to serialize, typically `Node`.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized `value`.\n */\nexport function toString(value, options) {\n  const settings = options || emptyOptions\n  const includeImageAlt =\n    typeof settings.includeImageAlt === 'boolean'\n      ? settings.includeImageAlt\n      : true\n  const includeHtml =\n    typeof settings.includeHtml === 'boolean' ? settings.includeHtml : true\n\n  return one(value, includeImageAlt, includeHtml)\n}\n\n/**\n * One node or several nodes.\n *\n * @param {unknown} value\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(value, includeImageAlt, includeHtml) {\n  if (node(value)) {\n    if ('value' in value) {\n      return value.type === 'html' && !includeHtml ? '' : value.value\n    }\n\n    if (includeImageAlt && 'alt' in value && value.alt) {\n      return value.alt\n    }\n\n    if ('children' in value) {\n      return all(value.children, includeImageAlt, includeHtml)\n    }\n  }\n\n  if (Array.isArray(value)) {\n    return all(value, includeImageAlt, includeHtml)\n  }\n\n  return ''\n}\n\n/**\n * Serialize a list of nodes.\n *\n * @param {Array<unknown>} values\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized nodes.\n */\nfunction all(values, includeImageAlt, includeHtml) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt, includeHtml)\n  }\n\n  return result.join('')\n}\n\n/**\n * Check if `value` looks like a node.\n *\n * @param {unknown} value\n *   Thing.\n * @returns {value is Node}\n *   Whether `value` is a node.\n */\nfunction node(value) {\n  return Boolean(value && typeof value === 'object')\n}\n", "/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * Check if `Child` can be a child of `Ancestor`.\n *\n * Returns the ancestor when `Child` can be a child of `Ancestor`, or returns\n * `never`.\n *\n * @template {Node} Ancestor\n *   Node type.\n * @template {Node} Child\n *   Node type.\n * @typedef {(\n *   Ancestor extends Parent\n *     ? Child extends Ancestor['children'][number]\n *       ? Ancestor\n *       : never\n *     : never\n * )} ParentsOf\n */\n\n/**\n * @template {Node} [Visited=Node]\n *   Visited node type.\n * @template {Parent} [Ancestor=Parent]\n *   Ancestor type.\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends Node ? number | null : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends Node ? Ancestor | null : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n */\n\n/**\n * Build a typed `Visitor` function from a node and all possible parents.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} Visited\n *   Node type.\n * @template {Parent} Ancestor\n *   Parent type.\n * @typedef {Visitor<Visited, ParentsOf<Ancestor, Visited>>} BuildVisitorFromMatch\n */\n\n/**\n * Build a typed `Visitor` function from a list of descendants and a test.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     import('unist-util-visit-parents/complex-types.js').Matches<Descendant, Check>,\n *     Extract<Descendant, Parent>\n *   >\n * )} BuildVisitorFromDescendants\n */\n\n/**\n * Build a typed `Visitor` function from a tree and a test.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} [Tree=Node]\n *   Node type.\n * @template {Test} [Check=string]\n *   Test type.\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     import('unist-util-visit-parents/complex-types.js').InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @param tree\n *   Tree to traverse.\n * @param test\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Handle each node.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns\n *   Nothing.\n */\nexport const visit =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: BuildVisitor<Tree, Check>, reverse?: boolean | null | undefined) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: BuildVisitor<Tree>, reverse?: boolean | null | undefined) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {Visitor} visitor\n     * @param {boolean | null | undefined} [reverse]\n     * @returns {void}\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        visitor = test\n        test = null\n      }\n\n      visitParents(tree, test, overload, reverse)\n\n      /**\n       * @param {Node} node\n       * @param {Array<Parent>} parents\n       */\n      function overload(node, parents) {\n        const parent = parents[parents.length - 1]\n        return visitor(\n          node,\n          parent ? parent.children.indexOf(node) : null,\n          parent\n        )\n      }\n    }\n  )\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n", "/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('hast').Properties} Properties\n */\n\nimport {toString} from 'mdast-util-to-string'\nimport {visit} from 'unist-util-visit'\nimport BananaSlug from 'github-slugger'\n\nconst slugs = new BananaSlug()\n\n/**\n * Plugin to add anchors headings using GitHub\u2019s algorithm.\n *\n * @type {import('unified').Plugin<void[], Root>}\n */\nexport default function remarkSlug() {\n  return (tree) => {\n    slugs.reset()\n\n    visit(tree, 'heading', (node) => {\n      const data = node.data || (node.data = {})\n      const props = /** @type {Properties} */ (\n        data.hProperties || (data.hProperties = {})\n      )\n      let id = props.id\n\n      id = id ? slugs.slug(String(id), true) : slugs.slug(toString(node))\n\n      data.id = id\n      props.id = id\n    })\n  }\n}\n", "// This module is generated by `script/`.\n/* eslint-disable no-control-regex, no-misleading-character-class, no-useless-escape */\nexport const regex = /[\\0-\\x1F!-,\\.\\/:-@\\[-\\^`\\{-\\xA9\\xAB-\\xB4\\xB6-\\xB9\\xBB-\\xBF\\xD7\\xF7\\u02C2-\\u02C5\\u02D2-\\u02DF\\u02E5-\\u02EB\\u02ED\\u02EF-\\u02FF\\u0375\\u0378\\u0379\\u037E\\u0380-\\u0385\\u0387\\u038B\\u038D\\u03A2\\u03F6\\u0482\\u0530\\u0557\\u0558\\u055A-\\u055F\\u0589-\\u0590\\u05BE\\u05C0\\u05C3\\u05C6\\u05C8-\\u05CF\\u05EB-\\u05EE\\u05F3-\\u060F\\u061B-\\u061F\\u066A-\\u066D\\u06D4\\u06DD\\u06DE\\u06E9\\u06FD\\u06FE\\u0700-\\u070F\\u074B\\u074C\\u07B2-\\u07BF\\u07F6-\\u07F9\\u07FB\\u07FC\\u07FE\\u07FF\\u082E-\\u083F\\u085C-\\u085F\\u086B-\\u089F\\u08B5\\u08C8-\\u08D2\\u08E2\\u0964\\u0965\\u0970\\u0984\\u098D\\u098E\\u0991\\u0992\\u09A9\\u09B1\\u09B3-\\u09B5\\u09BA\\u09BB\\u09C5\\u09C6\\u09C9\\u09CA\\u09CF-\\u09D6\\u09D8-\\u09DB\\u09DE\\u09E4\\u09E5\\u09F2-\\u09FB\\u09FD\\u09FF\\u0A00\\u0A04\\u0A0B-\\u0A0E\\u0A11\\u0A12\\u0A29\\u0A31\\u0A34\\u0A37\\u0A3A\\u0A3B\\u0A3D\\u0A43-\\u0A46\\u0A49\\u0A4A\\u0A4E-\\u0A50\\u0A52-\\u0A58\\u0A5D\\u0A5F-\\u0A65\\u0A76-\\u0A80\\u0A84\\u0A8E\\u0A92\\u0AA9\\u0AB1\\u0AB4\\u0ABA\\u0ABB\\u0AC6\\u0ACA\\u0ACE\\u0ACF\\u0AD1-\\u0ADF\\u0AE4\\u0AE5\\u0AF0-\\u0AF8\\u0B00\\u0B04\\u0B0D\\u0B0E\\u0B11\\u0B12\\u0B29\\u0B31\\u0B34\\u0B3A\\u0B3B\\u0B45\\u0B46\\u0B49\\u0B4A\\u0B4E-\\u0B54\\u0B58-\\u0B5B\\u0B5E\\u0B64\\u0B65\\u0B70\\u0B72-\\u0B81\\u0B84\\u0B8B-\\u0B8D\\u0B91\\u0B96-\\u0B98\\u0B9B\\u0B9D\\u0BA0-\\u0BA2\\u0BA5-\\u0BA7\\u0BAB-\\u0BAD\\u0BBA-\\u0BBD\\u0BC3-\\u0BC5\\u0BC9\\u0BCE\\u0BCF\\u0BD1-\\u0BD6\\u0BD8-\\u0BE5\\u0BF0-\\u0BFF\\u0C0D\\u0C11\\u0C29\\u0C3A-\\u0C3C\\u0C45\\u0C49\\u0C4E-\\u0C54\\u0C57\\u0C5B-\\u0C5F\\u0C64\\u0C65\\u0C70-\\u0C7F\\u0C84\\u0C8D\\u0C91\\u0CA9\\u0CB4\\u0CBA\\u0CBB\\u0CC5\\u0CC9\\u0CCE-\\u0CD4\\u0CD7-\\u0CDD\\u0CDF\\u0CE4\\u0CE5\\u0CF0\\u0CF3-\\u0CFF\\u0D0D\\u0D11\\u0D45\\u0D49\\u0D4F-\\u0D53\\u0D58-\\u0D5E\\u0D64\\u0D65\\u0D70-\\u0D79\\u0D80\\u0D84\\u0D97-\\u0D99\\u0DB2\\u0DBC\\u0DBE\\u0DBF\\u0DC7-\\u0DC9\\u0DCB-\\u0DCE\\u0DD5\\u0DD7\\u0DE0-\\u0DE5\\u0DF0\\u0DF1\\u0DF4-\\u0E00\\u0E3B-\\u0E3F\\u0E4F\\u0E5A-\\u0E80\\u0E83\\u0E85\\u0E8B\\u0EA4\\u0EA6\\u0EBE\\u0EBF\\u0EC5\\u0EC7\\u0ECE\\u0ECF\\u0EDA\\u0EDB\\u0EE0-\\u0EFF\\u0F01-\\u0F17\\u0F1A-\\u0F1F\\u0F2A-\\u0F34\\u0F36\\u0F38\\u0F3A-\\u0F3D\\u0F48\\u0F6D-\\u0F70\\u0F85\\u0F98\\u0FBD-\\u0FC5\\u0FC7-\\u0FFF\\u104A-\\u104F\\u109E\\u109F\\u10C6\\u10C8-\\u10CC\\u10CE\\u10CF\\u10FB\\u1249\\u124E\\u124F\\u1257\\u1259\\u125E\\u125F\\u1289\\u128E\\u128F\\u12B1\\u12B6\\u12B7\\u12BF\\u12C1\\u12C6\\u12C7\\u12D7\\u1311\\u1316\\u1317\\u135B\\u135C\\u1360-\\u137F\\u1390-\\u139F\\u13F6\\u13F7\\u13FE-\\u1400\\u166D\\u166E\\u1680\\u169B-\\u169F\\u16EB-\\u16ED\\u16F9-\\u16FF\\u170D\\u1715-\\u171F\\u1735-\\u173F\\u1754-\\u175F\\u176D\\u1771\\u1774-\\u177F\\u17D4-\\u17D6\\u17D8-\\u17DB\\u17DE\\u17DF\\u17EA-\\u180A\\u180E\\u180F\\u181A-\\u181F\\u1879-\\u187F\\u18AB-\\u18AF\\u18F6-\\u18FF\\u191F\\u192C-\\u192F\\u193C-\\u1945\\u196E\\u196F\\u1975-\\u197F\\u19AC-\\u19AF\\u19CA-\\u19CF\\u19DA-\\u19FF\\u1A1C-\\u1A1F\\u1A5F\\u1A7D\\u1A7E\\u1A8A-\\u1A8F\\u1A9A-\\u1AA6\\u1AA8-\\u1AAF\\u1AC1-\\u1AFF\\u1B4C-\\u1B4F\\u1B5A-\\u1B6A\\u1B74-\\u1B7F\\u1BF4-\\u1BFF\\u1C38-\\u1C3F\\u1C4A-\\u1C4C\\u1C7E\\u1C7F\\u1C89-\\u1C8F\\u1CBB\\u1CBC\\u1CC0-\\u1CCF\\u1CD3\\u1CFB-\\u1CFF\\u1DFA\\u1F16\\u1F17\\u1F1E\\u1F1F\\u1F46\\u1F47\\u1F4E\\u1F4F\\u1F58\\u1F5A\\u1F5C\\u1F5E\\u1F7E\\u1F7F\\u1FB5\\u1FBD\\u1FBF-\\u1FC1\\u1FC5\\u1FCD-\\u1FCF\\u1FD4\\u1FD5\\u1FDC-\\u1FDF\\u1FED-\\u1FF1\\u1FF5\\u1FFD-\\u203E\\u2041-\\u2053\\u2055-\\u2070\\u2072-\\u207E\\u2080-\\u208F\\u209D-\\u20CF\\u20F1-\\u2101\\u2103-\\u2106\\u2108\\u2109\\u2114\\u2116-\\u2118\\u211E-\\u2123\\u2125\\u2127\\u2129\\u212E\\u213A\\u213B\\u2140-\\u2144\\u214A-\\u214D\\u214F-\\u215F\\u2189-\\u24B5\\u24EA-\\u2BFF\\u2C2F\\u2C5F\\u2CE5-\\u2CEA\\u2CF4-\\u2CFF\\u2D26\\u2D28-\\u2D2C\\u2D2E\\u2D2F\\u2D68-\\u2D6E\\u2D70-\\u2D7E\\u2D97-\\u2D9F\\u2DA7\\u2DAF\\u2DB7\\u2DBF\\u2DC7\\u2DCF\\u2DD7\\u2DDF\\u2E00-\\u2E2E\\u2E30-\\u3004\\u3008-\\u3020\\u3030\\u3036\\u3037\\u303D-\\u3040\\u3097\\u3098\\u309B\\u309C\\u30A0\\u30FB\\u3100-\\u3104\\u3130\\u318F-\\u319F\\u31C0-\\u31EF\\u3200-\\u33FF\\u4DC0-\\u4DFF\\u9FFD-\\u9FFF\\uA48D-\\uA4CF\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA62C-\\uA63F\\uA673\\uA67E\\uA6F2-\\uA716\\uA720\\uA721\\uA789\\uA78A\\uA7C0\\uA7C1\\uA7CB-\\uA7F4\\uA828-\\uA82B\\uA82D-\\uA83F\\uA874-\\uA87F\\uA8C6-\\uA8CF\\uA8DA-\\uA8DF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA954-\\uA95F\\uA97D-\\uA97F\\uA9C1-\\uA9CE\\uA9DA-\\uA9DF\\uA9FF\\uAA37-\\uAA3F\\uAA4E\\uAA4F\\uAA5A-\\uAA5F\\uAA77-\\uAA79\\uAAC3-\\uAADA\\uAADE\\uAADF\\uAAF0\\uAAF1\\uAAF7-\\uAB00\\uAB07\\uAB08\\uAB0F\\uAB10\\uAB17-\\uAB1F\\uAB27\\uAB2F\\uAB5B\\uAB6A-\\uAB6F\\uABEB\\uABEE\\uABEF\\uABFA-\\uABFF\\uD7A4-\\uD7AF\\uD7C7-\\uD7CA\\uD7FC-\\uD7FF\\uE000-\\uF8FF\\uFA6E\\uFA6F\\uFADA-\\uFAFF\\uFB07-\\uFB12\\uFB18-\\uFB1C\\uFB29\\uFB37\\uFB3D\\uFB3F\\uFB42\\uFB45\\uFBB2-\\uFBD2\\uFD3E-\\uFD4F\\uFD90\\uFD91\\uFDC8-\\uFDEF\\uFDFC-\\uFDFF\\uFE10-\\uFE1F\\uFE30-\\uFE32\\uFE35-\\uFE4C\\uFE50-\\uFE6F\\uFE75\\uFEFD-\\uFF0F\\uFF1A-\\uFF20\\uFF3B-\\uFF3E\\uFF40\\uFF5B-\\uFF65\\uFFBF-\\uFFC1\\uFFC8\\uFFC9\\uFFD0\\uFFD1\\uFFD8\\uFFD9\\uFFDD-\\uFFFF]|\\uD800[\\uDC0C\\uDC27\\uDC3B\\uDC3E\\uDC4E\\uDC4F\\uDC5E-\\uDC7F\\uDCFB-\\uDD3F\\uDD75-\\uDDFC\\uDDFE-\\uDE7F\\uDE9D-\\uDE9F\\uDED1-\\uDEDF\\uDEE1-\\uDEFF\\uDF20-\\uDF2C\\uDF4B-\\uDF4F\\uDF7B-\\uDF7F\\uDF9E\\uDF9F\\uDFC4-\\uDFC7\\uDFD0\\uDFD6-\\uDFFF]|\\uD801[\\uDC9E\\uDC9F\\uDCAA-\\uDCAF\\uDCD4-\\uDCD7\\uDCFC-\\uDCFF\\uDD28-\\uDD2F\\uDD64-\\uDDFF\\uDF37-\\uDF3F\\uDF56-\\uDF5F\\uDF68-\\uDFFF]|\\uD802[\\uDC06\\uDC07\\uDC09\\uDC36\\uDC39-\\uDC3B\\uDC3D\\uDC3E\\uDC56-\\uDC5F\\uDC77-\\uDC7F\\uDC9F-\\uDCDF\\uDCF3\\uDCF6-\\uDCFF\\uDD16-\\uDD1F\\uDD3A-\\uDD7F\\uDDB8-\\uDDBD\\uDDC0-\\uDDFF\\uDE04\\uDE07-\\uDE0B\\uDE14\\uDE18\\uDE36\\uDE37\\uDE3B-\\uDE3E\\uDE40-\\uDE5F\\uDE7D-\\uDE7F\\uDE9D-\\uDEBF\\uDEC8\\uDEE7-\\uDEFF\\uDF36-\\uDF3F\\uDF56-\\uDF5F\\uDF73-\\uDF7F\\uDF92-\\uDFFF]|\\uD803[\\uDC49-\\uDC7F\\uDCB3-\\uDCBF\\uDCF3-\\uDCFF\\uDD28-\\uDD2F\\uDD3A-\\uDE7F\\uDEAA\\uDEAD-\\uDEAF\\uDEB2-\\uDEFF\\uDF1D-\\uDF26\\uDF28-\\uDF2F\\uDF51-\\uDFAF\\uDFC5-\\uDFDF\\uDFF7-\\uDFFF]|\\uD804[\\uDC47-\\uDC65\\uDC70-\\uDC7E\\uDCBB-\\uDCCF\\uDCE9-\\uDCEF\\uDCFA-\\uDCFF\\uDD35\\uDD40-\\uDD43\\uDD48-\\uDD4F\\uDD74\\uDD75\\uDD77-\\uDD7F\\uDDC5-\\uDDC8\\uDDCD\\uDDDB\\uDDDD-\\uDDFF\\uDE12\\uDE38-\\uDE3D\\uDE3F-\\uDE7F\\uDE87\\uDE89\\uDE8E\\uDE9E\\uDEA9-\\uDEAF\\uDEEB-\\uDEEF\\uDEFA-\\uDEFF\\uDF04\\uDF0D\\uDF0E\\uDF11\\uDF12\\uDF29\\uDF31\\uDF34\\uDF3A\\uDF45\\uDF46\\uDF49\\uDF4A\\uDF4E\\uDF4F\\uDF51-\\uDF56\\uDF58-\\uDF5C\\uDF64\\uDF65\\uDF6D-\\uDF6F\\uDF75-\\uDFFF]|\\uD805[\\uDC4B-\\uDC4F\\uDC5A-\\uDC5D\\uDC62-\\uDC7F\\uDCC6\\uDCC8-\\uDCCF\\uDCDA-\\uDD7F\\uDDB6\\uDDB7\\uDDC1-\\uDDD7\\uDDDE-\\uDDFF\\uDE41-\\uDE43\\uDE45-\\uDE4F\\uDE5A-\\uDE7F\\uDEB9-\\uDEBF\\uDECA-\\uDEFF\\uDF1B\\uDF1C\\uDF2C-\\uDF2F\\uDF3A-\\uDFFF]|\\uD806[\\uDC3B-\\uDC9F\\uDCEA-\\uDCFE\\uDD07\\uDD08\\uDD0A\\uDD0B\\uDD14\\uDD17\\uDD36\\uDD39\\uDD3A\\uDD44-\\uDD4F\\uDD5A-\\uDD9F\\uDDA8\\uDDA9\\uDDD8\\uDDD9\\uDDE2\\uDDE5-\\uDDFF\\uDE3F-\\uDE46\\uDE48-\\uDE4F\\uDE9A-\\uDE9C\\uDE9E-\\uDEBF\\uDEF9-\\uDFFF]|\\uD807[\\uDC09\\uDC37\\uDC41-\\uDC4F\\uDC5A-\\uDC71\\uDC90\\uDC91\\uDCA8\\uDCB7-\\uDCFF\\uDD07\\uDD0A\\uDD37-\\uDD39\\uDD3B\\uDD3E\\uDD48-\\uDD4F\\uDD5A-\\uDD5F\\uDD66\\uDD69\\uDD8F\\uDD92\\uDD99-\\uDD9F\\uDDAA-\\uDEDF\\uDEF7-\\uDFAF\\uDFB1-\\uDFFF]|\\uD808[\\uDF9A-\\uDFFF]|\\uD809[\\uDC6F-\\uDC7F\\uDD44-\\uDFFF]|[\\uD80A\\uD80B\\uD80E-\\uD810\\uD812-\\uD819\\uD824-\\uD82B\\uD82D\\uD82E\\uD830-\\uD833\\uD837\\uD839\\uD83D\\uD83F\\uD87B-\\uD87D\\uD87F\\uD885-\\uDB3F\\uDB41-\\uDBFF][\\uDC00-\\uDFFF]|\\uD80D[\\uDC2F-\\uDFFF]|\\uD811[\\uDE47-\\uDFFF]|\\uD81A[\\uDE39-\\uDE3F\\uDE5F\\uDE6A-\\uDECF\\uDEEE\\uDEEF\\uDEF5-\\uDEFF\\uDF37-\\uDF3F\\uDF44-\\uDF4F\\uDF5A-\\uDF62\\uDF78-\\uDF7C\\uDF90-\\uDFFF]|\\uD81B[\\uDC00-\\uDE3F\\uDE80-\\uDEFF\\uDF4B-\\uDF4E\\uDF88-\\uDF8E\\uDFA0-\\uDFDF\\uDFE2\\uDFE5-\\uDFEF\\uDFF2-\\uDFFF]|\\uD821[\\uDFF8-\\uDFFF]|\\uD823[\\uDCD6-\\uDCFF\\uDD09-\\uDFFF]|\\uD82C[\\uDD1F-\\uDD4F\\uDD53-\\uDD63\\uDD68-\\uDD6F\\uDEFC-\\uDFFF]|\\uD82F[\\uDC6B-\\uDC6F\\uDC7D-\\uDC7F\\uDC89-\\uDC8F\\uDC9A-\\uDC9C\\uDC9F-\\uDFFF]|\\uD834[\\uDC00-\\uDD64\\uDD6A-\\uDD6C\\uDD73-\\uDD7A\\uDD83\\uDD84\\uDD8C-\\uDDA9\\uDDAE-\\uDE41\\uDE45-\\uDFFF]|\\uD835[\\uDC55\\uDC9D\\uDCA0\\uDCA1\\uDCA3\\uDCA4\\uDCA7\\uDCA8\\uDCAD\\uDCBA\\uDCBC\\uDCC4\\uDD06\\uDD0B\\uDD0C\\uDD15\\uDD1D\\uDD3A\\uDD3F\\uDD45\\uDD47-\\uDD49\\uDD51\\uDEA6\\uDEA7\\uDEC1\\uDEDB\\uDEFB\\uDF15\\uDF35\\uDF4F\\uDF6F\\uDF89\\uDFA9\\uDFC3\\uDFCC\\uDFCD]|\\uD836[\\uDC00-\\uDDFF\\uDE37-\\uDE3A\\uDE6D-\\uDE74\\uDE76-\\uDE83\\uDE85-\\uDE9A\\uDEA0\\uDEB0-\\uDFFF]|\\uD838[\\uDC07\\uDC19\\uDC1A\\uDC22\\uDC25\\uDC2B-\\uDCFF\\uDD2D-\\uDD2F\\uDD3E\\uDD3F\\uDD4A-\\uDD4D\\uDD4F-\\uDEBF\\uDEFA-\\uDFFF]|\\uD83A[\\uDCC5-\\uDCCF\\uDCD7-\\uDCFF\\uDD4C-\\uDD4F\\uDD5A-\\uDFFF]|\\uD83B[\\uDC00-\\uDDFF\\uDE04\\uDE20\\uDE23\\uDE25\\uDE26\\uDE28\\uDE33\\uDE38\\uDE3A\\uDE3C-\\uDE41\\uDE43-\\uDE46\\uDE48\\uDE4A\\uDE4C\\uDE50\\uDE53\\uDE55\\uDE56\\uDE58\\uDE5A\\uDE5C\\uDE5E\\uDE60\\uDE63\\uDE65\\uDE66\\uDE6B\\uDE73\\uDE78\\uDE7D\\uDE7F\\uDE8A\\uDE9C-\\uDEA0\\uDEA4\\uDEAA\\uDEBC-\\uDFFF]|\\uD83C[\\uDC00-\\uDD2F\\uDD4A-\\uDD4F\\uDD6A-\\uDD6F\\uDD8A-\\uDFFF]|\\uD83E[\\uDC00-\\uDFEF\\uDFFA-\\uDFFF]|\\uD869[\\uDEDE-\\uDEFF]|\\uD86D[\\uDF35-\\uDF3F]|\\uD86E[\\uDC1E\\uDC1F]|\\uD873[\\uDEA2-\\uDEAF]|\\uD87A[\\uDFE1-\\uDFFF]|\\uD87E[\\uDE1E-\\uDFFF]|\\uD884[\\uDF4B-\\uDFFF]|\\uDB40[\\uDC00-\\uDCFF\\uDDF0-\\uDFFF]/g\n", "import { regex } from './regex.js'\n\nconst own = Object.hasOwnProperty\n\n/**\n * Slugger.\n */\nexport default class BananaSlug {\n  /**\n   * Create a new slug class.\n   */\n  constructor () {\n    /** @type {Record<string, number>} */\n    // eslint-disable-next-line no-unused-expressions\n    this.occurrences\n\n    this.reset()\n  }\n\n  /**\n   * Generate a unique slug.\n  *\n  * Tracks previously generated slugs: repeated calls with the same value\n  * will result in different slugs.\n  * Use the `slug` function to get same slugs.\n   *\n   * @param  {string} value\n   *   String of text to slugify\n   * @param  {boolean} [maintainCase=false]\n   *   Keep the current case, otherwise make all lowercase\n   * @return {string}\n   *   A unique slug string\n   */\n  slug (value, maintainCase) {\n    const self = this\n    let result = slug(value, maintainCase === true)\n    const originalSlug = result\n\n    while (own.call(self.occurrences, result)) {\n      self.occurrences[originalSlug]++\n      result = originalSlug + '-' + self.occurrences[originalSlug]\n    }\n\n    self.occurrences[result] = 0\n\n    return result\n  }\n\n  /**\n   * Reset - Forget all previous slugs\n   *\n   * @return void\n   */\n  reset () {\n    this.occurrences = Object.create(null)\n  }\n}\n\n/**\n * Generate a slug.\n *\n * Does not track previously generated slugs: repeated calls with the same value\n * will result in the exact same slug.\n * Use the `GithubSlugger` class to get unique slugs.\n *\n * @param  {string} value\n *   String of text to slugify\n * @param  {boolean} [maintainCase=false]\n *   Keep the current case, otherwise make all lowercase\n * @return {string}\n *   A unique slug string\n */\nexport function slug (value, maintainCase) {\n  if (typeof value !== 'string') return ''\n  if (!maintainCase) value = value.toLowerCase()\n  return value.replace(regex, '').replace(/ /g, '-')\n}\n", "/**\n * @typedef {import('mdast').Root|import('mdast').Content} Node\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [includeImageAlt=true]\n *   Whether to use `alt` for `image`s.\n * @property {boolean | null | undefined} [includeHtml=true]\n *   Whether to use `value` of HTML.\n */\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Get the text content of a node or list of nodes.\n *\n * Prefers the node\u2019s plain-text fields, otherwise serializes its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} value\n *   Thing to serialize, typically `Node`.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized `value`.\n */\nexport function toString(value, options) {\n  const settings = options || emptyOptions\n  const includeImageAlt =\n    typeof settings.includeImageAlt === 'boolean'\n      ? settings.includeImageAlt\n      : true\n  const includeHtml =\n    typeof settings.includeHtml === 'boolean' ? settings.includeHtml : true\n\n  return one(value, includeImageAlt, includeHtml)\n}\n\n/**\n * One node or several nodes.\n *\n * @param {unknown} value\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(value, includeImageAlt, includeHtml) {\n  if (node(value)) {\n    if ('value' in value) {\n      return value.type === 'html' && !includeHtml ? '' : value.value\n    }\n\n    if (includeImageAlt && 'alt' in value && value.alt) {\n      return value.alt\n    }\n\n    if ('children' in value) {\n      return all(value.children, includeImageAlt, includeHtml)\n    }\n  }\n\n  if (Array.isArray(value)) {\n    return all(value, includeImageAlt, includeHtml)\n  }\n\n  return ''\n}\n\n/**\n * Serialize a list of nodes.\n *\n * @param {Array<unknown>} values\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized nodes.\n */\nfunction all(values, includeImageAlt, includeHtml) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt, includeHtml)\n  }\n\n  return result.join('')\n}\n\n/**\n * Check if `value` looks like a node.\n *\n * @param {unknown} value\n *   Thing.\n * @returns {value is Node}\n *   Whether `value` is a node.\n */\nfunction node(value) {\n  return Boolean(value && typeof value === 'object')\n}\n", "/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * Check if `Child` can be a child of `Ancestor`.\n *\n * Returns the ancestor when `Child` can be a child of `Ancestor`, or returns\n * `never`.\n *\n * @template {Node} Ancestor\n *   Node type.\n * @template {Node} Child\n *   Node type.\n * @typedef {(\n *   Ancestor extends Parent\n *     ? Child extends Ancestor['children'][number]\n *       ? Ancestor\n *       : never\n *     : never\n * )} ParentsOf\n */\n\n/**\n * @template {Node} [Visited=Node]\n *   Visited node type.\n * @template {Parent} [Ancestor=Parent]\n *   Ancestor type.\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends Node ? number | null : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends Node ? Ancestor | null : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n */\n\n/**\n * Build a typed `Visitor` function from a node and all possible parents.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} Visited\n *   Node type.\n * @template {Parent} Ancestor\n *   Parent type.\n * @typedef {Visitor<Visited, ParentsOf<Ancestor, Visited>>} BuildVisitorFromMatch\n */\n\n/**\n * Build a typed `Visitor` function from a list of descendants and a test.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     import('unist-util-visit-parents/complex-types.js').Matches<Descendant, Check>,\n *     Extract<Descendant, Parent>\n *   >\n * )} BuildVisitorFromDescendants\n */\n\n/**\n * Build a typed `Visitor` function from a tree and a test.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} [Tree=Node]\n *   Node type.\n * @template {Test} [Check=string]\n *   Test type.\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     import('unist-util-visit-parents/complex-types.js').InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @param tree\n *   Tree to traverse.\n * @param test\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Handle each node.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns\n *   Nothing.\n */\nexport const visit =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: BuildVisitor<Tree, Check>, reverse?: boolean | null | undefined) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: BuildVisitor<Tree>, reverse?: boolean | null | undefined) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {Visitor} visitor\n     * @param {boolean | null | undefined} [reverse]\n     * @returns {void}\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        visitor = test\n        test = null\n      }\n\n      visitParents(tree, test, overload, reverse)\n\n      /**\n       * @param {Node} node\n       * @param {Array<Parent>} parents\n       */\n      function overload(node, parents) {\n        const parent = parents[parents.length - 1]\n        return visitor(\n          node,\n          parent ? parent.children.indexOf(node) : null,\n          parent\n        )\n      }\n    }\n  )\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n", "/**\n * Transform a string into an applicable expression.\n *\n * @param {string} value\n * @returns {RegExp}\n */\nexport function toExpression(value) {\n  return new RegExp('^(' + value + ')$', 'i')\n}\n", "/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('unist-util-is').Test} Test\n */\n\n/**\n * @typedef {Root | Content} Node\n * @typedef {Heading['depth']} Rank\n *\n */\n\n/**\n * @typedef SearchOptions\n *   Search configuration.\n * @property {Rank | null | undefined} [maxDepth=6]\n *   Maximum heading depth to include in the table of contents.\n *\n *   This is inclusive: when set to `3`, level three headings are included\n *   (those with three hashes, `###`).\n * @property {string | null | undefined} [skip]\n *   Headings to skip, wrapped in `new RegExp('^(' + value + ')$', 'i')`.\n *\n *   Any heading matching this expression will not be present in the table of\n *   contents.\n * @property {Test} [parents]\n *   Allow headings to be children of certain node types (default: the to `toc`\n *   given `tree`, to only allow top-level headings).\n *\n *   Internally, uses `unist-util-is` to check, so `parents` can be any\n *   `is`-compatible test.\n *\n * @typedef SearchEntry\n *   Entry.\n * @property {string} id\n *   ID of entry.\n * @property {Array<PhrasingContent>} children\n *   Contents of entry.\n * @property {Rank} depth\n *   Rank of entry.\n *\n * @typedef SearchResult\n *   Results.\n * @property {number} index\n *   Where the contents section starts, if looking for a heading.\n * @property {number} endIndex\n *   Where the contents section ends, if looking for a heading.\n * @property {Array<SearchEntry>} map\n *   List of entries.\n */\n\nimport Slugger from 'github-slugger'\nimport {toString} from 'mdast-util-to-string'\nimport {visit} from 'unist-util-visit'\nimport {convert} from 'unist-util-is'\nimport {toExpression} from './to-expression.js'\n\nconst slugs = new Slugger()\n\n/**\n * Search a node for a toc.\n *\n * @param {Node} root\n * @param {RegExp | undefined} expression\n * @param {SearchOptions} settings\n * @returns {SearchResult}\n */\nexport function search(root, expression, settings) {\n  const skip = settings.skip ? toExpression(settings.skip) : undefined\n  const parents = convert(settings.parents || ((d) => d === root))\n  /** @type {Array<SearchEntry>} */\n  const map = []\n  /** @type {number | undefined} */\n  let index\n  /** @type {number | undefined} */\n  let endIndex\n  /** @type {Heading | undefined} */\n  let opening\n\n  slugs.reset()\n\n  // Visit all headings in `root`.  We `slug` all headings (to account for\n  // duplicates), but only create a TOC from top-level headings (by default).\n  visit(root, 'heading', (node, position, parent) => {\n    const value = toString(node, {includeImageAlt: false})\n    /** @type {string} */\n    // @ts-expect-error `hProperties` from <https://github.com/syntax-tree/mdast-util-to-hast>\n    const id = node.data && node.data.hProperties && node.data.hProperties.id\n    const slug = slugs.slug(id || value)\n\n    if (!parents(parent)) {\n      return\n    }\n\n    // Our opening heading.\n    if (position !== null && expression && !index && expression.test(value)) {\n      index = position + 1\n      opening = node\n      return\n    }\n\n    // Our closing heading.\n    if (\n      position !== null &&\n      opening &&\n      !endIndex &&\n      node.depth <= opening.depth\n    ) {\n      endIndex = position\n    }\n\n    // A heading after the closing (if we were looking for one).\n    if (\n      (endIndex || !expression) &&\n      (!settings.maxDepth || node.depth <= settings.maxDepth) &&\n      (!skip || !skip.test(value))\n    ) {\n      map.push({depth: node.depth, children: node.children, id: slug})\n    }\n  })\n\n  return {\n    index: index === undefined ? -1 : index,\n    // <sindresorhus/eslint-plugin-unicorn#980>\n    // @ts-expect-error Looks like a parent.\n    endIndex: index === undefined ? -1 : endIndex || root.children.length, // eslint-disable-line unicorn/explicit-length-check\n    map\n  }\n}\n", "/**\n * @typedef {import('mdast').List} List\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').StaticPhrasingContent} StaticPhrasingContent\n * @typedef {import('./search.js').SearchEntry} SearchEntry\n */\n\n/**\n * @typedef ContentsOptions\n *   Build configuration.\n * @property {boolean | null | undefined} [tight=false]\n *   Whether to compile list items tightly.\n * @property {boolean | null | undefined} [ordered=false]\n *   Whether to compile list items as an ordered list, otherwise they are\n *   unordered.\n * @property {string | null | undefined} [prefix=undefined]\n *   Add a prefix to links to headings in the table of contents.\n *\n *   Useful for example when later going from mdast to hast and sanitizing with\n *   `hast-util-sanitize`.\n */\n\nimport extend from 'extend'\n\n/**\n * Transform a list of heading objects to a markdown list.\n *\n * @param {Array<SearchEntry>} map\n * @param {ContentsOptions} settings\n */\nexport function contents(map, settings) {\n  const {ordered = false, tight = false, prefix = null} = settings\n  /** @type {List} */\n  const table = {type: 'list', ordered, spread: false, children: []}\n  let minDepth = Number.POSITIVE_INFINITY\n  let index = -1\n\n  // Find minimum depth.\n  while (++index < map.length) {\n    if (map[index].depth < minDepth) {\n      minDepth = map[index].depth\n    }\n  }\n\n  // Normalize depth.\n  index = -1\n\n  while (++index < map.length) {\n    map[index].depth -= minDepth - 1\n  }\n\n  // Add TOC to list.\n  index = -1\n\n  while (++index < map.length) {\n    insert(map[index], table, {ordered, tight, prefix})\n  }\n\n  return table\n}\n\n/**\n * Insert an entry into `parent`.\n *\n * @param {SearchEntry} entry\n * @param {List | ListItem} parent\n * @param {ContentsOptions} settings\n */\nfunction insert(entry, parent, settings) {\n  let index = -1\n  const tail = parent.children[parent.children.length - 1]\n\n  if (parent.type === 'list') {\n    if (entry.depth === 1) {\n      parent.children.push({\n        type: 'listItem',\n        spread: false,\n        children: [\n          {\n            type: 'paragraph',\n            children: [\n              {\n                type: 'link',\n                title: null,\n                url: '#' + (settings.prefix || '') + entry.id,\n                children: all(entry.children)\n              }\n            ]\n          }\n        ]\n      })\n    } else if (parent.children.length > 0) {\n      const tail = parent.children[parent.children.length - 1]\n      insert(entry, tail, settings)\n    } else {\n      /** @type {ListItem} */\n      const item = {type: 'listItem', spread: false, children: []}\n      parent.children.push(item)\n      insert(entry, item, settings)\n    }\n  }\n  // List item\n  else if (tail && tail.type === 'list') {\n    entry.depth--\n    insert(entry, tail, settings)\n  } else {\n    /** @type {List} */\n    const item = {\n      type: 'list',\n      ordered: settings.ordered,\n      spread: false,\n      children: []\n    }\n    parent.children.push(item)\n    entry.depth--\n    insert(entry, item, settings)\n  }\n\n  if (parent.type === 'list' && !settings.tight) {\n    parent.spread = false\n\n    while (++index < parent.children.length) {\n      if (parent.children[index].children.length > 1) {\n        parent.spread = true\n        break\n      }\n    }\n  } else {\n    parent.spread = !settings.tight\n  }\n}\n\n/**\n * @param {Array<PhrasingContent>} [nodes]\n * @returns {Array<StaticPhrasingContent>}\n */\nfunction all(nodes) {\n  /** @type {Array<StaticPhrasingContent>} */\n  let result = []\n  let index = -1\n\n  if (nodes) {\n    while (++index < nodes.length) {\n      result = result.concat(one(nodes[index]))\n    }\n  }\n\n  return result\n}\n\n/**\n * @param {PhrasingContent} node\n * @returns {StaticPhrasingContent | Array<StaticPhrasingContent>}\n */\nfunction one(node) {\n  if (node.type === 'footnoteReference') {\n    return []\n  }\n\n  if (\n    node.type === 'link' ||\n    node.type === 'linkReference' ||\n    node.type === 'footnote'\n  ) {\n    return all(node.children)\n  }\n\n  if ('children' in node) {\n    const {children, position, ...copy} = node\n    return Object.assign(extend(true, {}, copy), {children: all(node.children)})\n  }\n\n  const {position, ...copy} = node\n  return extend(true, {}, copy)\n}\n", "/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').List} List\n * @typedef {import('./search.js').SearchOptions} SearchOptions\n * @typedef {import('./contents.js').ContentsOptions} ContentsOptions\n */\n\n/**\n * @typedef {Root | Content} Node\n * @typedef {SearchOptions & ContentsOptions & ExtraOptions} Options\n *\n * @typedef ExtraOptions\n *   Extra configuration fields.\n * @property {string | null | undefined} [heading]\n *   Heading to look for, wrapped in `new RegExp('^(' + value + ')$', 'i')`.\n *\n * @typedef Result\n *   Results.\n * @property {number | null} index\n *   Index of the node right after the table of contents heading, `-1` if no\n *   heading was found, `null` if no `heading` was given.\n * @property {number | null} endIndex\n *   Index of the first node after `heading` that is not part of its section,\n *   `-1` if no heading was found, `null` if no `heading` was given, same as\n *   `index` if there are no nodes between `heading` and the first heading in\n *   the table of contents.\n * @property {List | null} map\n *   List representing the generated table of contents, `null` if no table of\n *   contents could be created, either because no heading was found or because\n *   no following headings were found.\n */\n\nimport {search} from './search.js'\nimport {contents} from './contents.js'\nimport {toExpression} from './to-expression.js'\n\n/**\n * Generate a table of contents from `tree`.\n *\n * Looks for the first heading matching `options.heading` (case insensitive) and\n * returns a table of contents (a list) for all following headings.\n * If no `heading` is specified, creates a table of contents for all headings in\n * `tree`.\n * `tree` is not changed.\n *\n * Links in the list to headings are based on GitHub\u2019s style.\n * Only top-level headings (those not in blockquotes or lists), are used.\n * This default behavior can be changed by passing `options.parents`.\n *\n * @param {Node} tree\n *   Tree to search and generate from.\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {Result}\n *   Results.\n */\nexport function toc(tree, options) {\n  const settings = options || {}\n  const heading = settings.heading ? toExpression(settings.heading) : undefined\n  const result = search(tree, heading, settings)\n\n  return {\n    index: heading ? result.index : null,\n    endIndex: heading ? result.endIndex : null,\n    map: result.map.length > 0 ? contents(result.map, settings) : null\n  }\n}\n", "/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-toc').Options} Options\n */\n\nimport {toc} from 'mdast-util-toc'\n\n/**\n * Plugin to generate a Table of Contents (TOC).\n *\n * @type {import('unified').Plugin<[Options?]|void[], Root>}\n */\nexport default function remarkToc(options = {}) {\n  return (node) => {\n    const result = toc(\n      node,\n      Object.assign({}, options, {\n        heading: options.heading || 'toc|table[ -]of[ -]contents?'\n      })\n    )\n\n    if (\n      result.endIndex === null ||\n      result.index === null ||\n      result.index === -1 ||\n      !result.map\n    ) {\n      return\n    }\n\n    node.children = [\n      ...node.children.slice(0, result.index),\n      result.map,\n      ...node.children.slice(result.endIndex)\n    ]\n  }\n}\n", "// src/emojify.ts\nimport { assert as assert2, default as is } from \"@sindresorhus/is\";\n\n// src/findByName.ts\nimport { assert } from \"@sindresorhus/is\";\n\n// src/data.ts\nimport emojilib from \"emojilib\";\n\n// src/utils.ts\nimport charRegex from \"char-regex\";\nvar charRegexMatcher = charRegex();\nfunction asFunction(input) {\n  return typeof input === \"function\" ? input : () => input;\n}\nvar NON_SPACING_MARK = String.fromCharCode(65039);\nvar nonSpacingRegex = new RegExp(NON_SPACING_MARK, \"g\");\nfunction normalizeCode(code) {\n  return code.replace(nonSpacingRegex, \"\");\n}\nfunction normalizeName(name) {\n  return /:.+:/.test(name) ? name.slice(1, -1) : name;\n}\nfunction randomItem(array) {\n  return array[Math.floor(Math.random() * array.length)];\n}\n\n// src/data.ts\nvar emojiData = Object.entries(emojilib.lib).map(\n  ([name, { char: emoji }]) => [name, emoji]\n);\nvar emojiCodesByName = new Map(emojiData);\nvar emojiNamesByCode = new Map(\n  emojiData.map(([name, emoji]) => [normalizeCode(emoji), name])\n);\n\n// src/findByName.ts\nvar findByName = (name) => {\n  assert.string(name);\n  const nameNormalized = normalizeName(name);\n  const emoji = emojiCodesByName.get(nameNormalized);\n  return emoji ? { emoji, key: nameNormalized } : void 0;\n};\n\n// src/emojify.ts\nvar emojify = (input, { fallback, format = (name) => name } = {}) => {\n  const fallbackFunction = fallback === void 0 ? fallback : asFunction(fallback);\n  assert2.string(input);\n  assert2.any([is.undefined, is.function_], fallbackFunction);\n  assert2.function_(format);\n  return input.replace(/:([a-zA-Z0-9_\\-+]+):/g, (part) => {\n    const found = findByName(part);\n    if (found) {\n      return format(found.emoji, part, input);\n    }\n    if (fallbackFunction) {\n      return format(fallbackFunction(normalizeName(part)));\n    }\n    return format(part);\n  });\n};\n\n// src/findByCode.ts\nimport { assert as assert3 } from \"@sindresorhus/is\";\nvar findByCode = (code) => {\n  assert3.string(code);\n  const emojiNormalized = normalizeCode(code);\n  const key = emojiNamesByCode.get(emojiNormalized);\n  return key ? { emoji: emojiNormalized, key } : void 0;\n};\n\n// src/find.ts\nvar find = (codeOrName) => {\n  return findByCode(codeOrName) || findByName(codeOrName);\n};\n\n// src/get.ts\nimport { assert as assert4 } from \"@sindresorhus/is\";\nvar get = (codeOrName) => {\n  assert4.string(codeOrName);\n  return emojiCodesByName.get(normalizeName(codeOrName));\n};\n\n// src/has.ts\nimport { assert as assert5 } from \"@sindresorhus/is\";\nvar has = (codeOrName) => {\n  assert5.string(codeOrName);\n  return emojiCodesByName.has(normalizeName(codeOrName)) || emojiNamesByCode.has(normalizeCode(codeOrName));\n};\n\n// src/random.ts\nvar random = () => {\n  const [name, emoji] = randomItem(emojiData);\n  return { name, emoji };\n};\n\n// src/replace.ts\nimport { assert as assert6 } from \"@sindresorhus/is\";\nvar replace = (input, replacement, { preserveSpaces = false } = {}) => {\n  const replace2 = asFunction(replacement);\n  assert6.string(input);\n  assert6.function_(replace2);\n  assert6.boolean(preserveSpaces);\n  const characters = input.match(charRegexMatcher);\n  if (characters === null) {\n    return input;\n  }\n  return characters.map((character, index) => {\n    const found = findByCode(character);\n    if (!found) {\n      return character;\n    }\n    if (!preserveSpaces && characters[index + 1] === \" \") {\n      characters[index + 1] = \"\";\n    }\n    return replace2(found, index, input);\n  }).join(\"\");\n};\n\n// src/search.ts\nimport { assert as assert7 } from \"@sindresorhus/is\";\nvar search = (keyword) => {\n  assert7.string(keyword);\n  keyword = normalizeName(keyword);\n  return emojiData.filter(([name]) => name.includes(keyword)).map(([name, emoji]) => ({ name, emoji }));\n};\n\n// src/strip.ts\nvar strip = (input, { preserveSpaces } = {}) => replace(input, \"\", { preserveSpaces });\n\n// src/unemojify.ts\nimport { assert as assert9 } from \"@sindresorhus/is\";\n\n// src/which.ts\nimport { assert as assert8 } from \"@sindresorhus/is\";\nimport skinTone from \"skin-tone\";\nvar which = (emoji, { markdown = false } = {}) => {\n  assert8.string(emoji);\n  assert8.boolean(markdown);\n  const result = findByCode(skinTone(emoji, \"none\"));\n  if (result === void 0) {\n    return void 0;\n  }\n  return markdown ? `:${result.key}:` : result.key;\n};\n\n// src/unemojify.ts\nvar unemojify = (input) => {\n  assert9.string(input);\n  const characters = input.match(charRegexMatcher);\n  if (characters === null) {\n    return input;\n  }\n  return characters.map((character) => which(character, { markdown: true }) || character).join(\"\");\n};\nexport {\n  emojify,\n  find,\n  get,\n  has,\n  random,\n  replace,\n  search,\n  strip,\n  unemojify,\n  which\n};\n", "/**\n * @typedef Emoticon\n *   Info on an emoticon.\n * @property {string} name\n *   Name of an emoticon (preferred name from `wooorm/gemoji`).\n * @property {string} emoji\n *   Corresponding emoji.\n * @property {Array<string>} tags\n *   Associated tags (from `wooorm/gemoji`).\n * @property {string} description\n *   Associated description (from `wooorm/gemoji`).\n * @property {Array<string>} emoticons\n *   ASCII emoticons.\n */\n\n/**\n * List of emoticons.\n *\n * @type {Array<Emoticon>}\n */\nexport const emoticon = [\n  {\n    name: 'angry',\n    emoji: '\uD83D\uDE20',\n    tags: ['mad', 'annoyed'],\n    description: 'angry face',\n    emoticons: ['>:(', '>:[', '>:-(', '>:-[', '>=(', '>=[', '>=-(', '>=-[']\n  },\n  {\n    name: 'blush',\n    emoji: '\uD83D\uDE0A',\n    tags: ['proud'],\n    description: 'smiling face with smiling eyes',\n    emoticons: [\n      ':\")',\n      ':\"]',\n      ':\"D',\n      ':-\")',\n      ':-\"]',\n      ':-\"D',\n      '=\")',\n      '=\"]',\n      '=\"D',\n      '=-\")',\n      '=-\"]',\n      '=-\"D'\n    ]\n  },\n  {\n    name: 'broken_heart',\n    emoji: '\uD83D\uDC94',\n    tags: [],\n    description: 'broken heart',\n    emoticons: ['<\\\\3', '</3']\n  },\n  {\n    name: 'confused',\n    emoji: '\uD83D\uDE15',\n    tags: [],\n    description: 'confused face',\n    emoticons: [':/', ':\\\\', ':-/', ':-\\\\', '=/', '=\\\\', '=-/', '=-\\\\']\n  },\n  {\n    name: 'cry',\n    emoji: '\uD83D\uDE22',\n    tags: ['sad', 'tear'],\n    description: 'crying face',\n    emoticons: [\n      ':,(',\n      ':,[',\n      ':,|',\n      ':,-(',\n      ':,-[',\n      ':,-|',\n      \":'(\",\n      \":'[\",\n      \":'|\",\n      \":'-(\",\n      \":'-[\",\n      \":'-|\",\n      '=,(',\n      '=,[',\n      '=,|',\n      '=,-(',\n      '=,-[',\n      '=,-|',\n      \"='(\",\n      \"='[\",\n      \"='|\",\n      \"='-(\",\n      \"='-[\",\n      \"='-|\"\n    ]\n  },\n  {\n    name: 'frowning',\n    emoji: '\uD83D\uDE26',\n    tags: [],\n    description: 'frowning face with open mouth',\n    emoticons: [':(', ':[', ':-(', ':-[', '=(', '=[', '=-(', '=-[']\n  },\n  {\n    name: 'heart',\n    emoji: '\u2764\uFE0F',\n    tags: ['love'],\n    description: 'red heart',\n    emoticons: ['<3']\n  },\n  {\n    name: 'imp',\n    emoji: '\uD83D\uDC7F',\n    tags: ['angry', 'devil', 'evil', 'horns'],\n    description: 'angry face with horns',\n    emoticons: [']:(', ']:[', ']:-(', ']:-[', ']=(', ']=[', ']=-(', ']=-[']\n  },\n  {\n    name: 'innocent',\n    emoji: '\uD83D\uDE07',\n    tags: ['angel'],\n    description: 'smiling face with halo',\n    emoticons: [\n      'o:)',\n      'o:]',\n      'o:D',\n      'o:-)',\n      'o:-]',\n      'o:-D',\n      'o=)',\n      'o=]',\n      'o=D',\n      'o=-)',\n      'o=-]',\n      'o=-D',\n      'O:)',\n      'O:]',\n      'O:D',\n      'O:-)',\n      'O:-]',\n      'O:-D',\n      'O=)',\n      'O=]',\n      'O=D',\n      'O=-)',\n      'O=-]',\n      'O=-D',\n      '0:)',\n      '0:]',\n      '0:D',\n      '0:-)',\n      '0:-]',\n      '0:-D',\n      '0=)',\n      '0=]',\n      '0=D',\n      '0=-)',\n      '0=-]',\n      '0=-D'\n    ]\n  },\n  {\n    name: 'joy',\n    emoji: '\uD83D\uDE02',\n    tags: ['tears'],\n    description: 'face with tears of joy',\n    emoticons: [\n      ':,)',\n      ':,]',\n      ':,D',\n      ':,-)',\n      ':,-]',\n      ':,-D',\n      \":')\",\n      \":']\",\n      \":'D\",\n      \":'-)\",\n      \":'-]\",\n      \":'-D\",\n      '=,)',\n      '=,]',\n      '=,D',\n      '=,-)',\n      '=,-]',\n      '=,-D',\n      \"=')\",\n      \"=']\",\n      \"='D\",\n      \"='-)\",\n      \"='-]\",\n      \"='-D\"\n    ]\n  },\n  {\n    name: 'kissing',\n    emoji: '\uD83D\uDE17',\n    tags: [],\n    description: 'kissing face',\n    emoticons: [':*', ':-*', '=*', '=-*']\n  },\n  {\n    name: 'laughing',\n    emoji: '\uD83D\uDE06',\n    tags: ['happy', 'haha'],\n    description: 'grinning squinting face',\n    emoticons: [\n      'x)',\n      'x]',\n      'xD',\n      'x-)',\n      'x-]',\n      'x-D',\n      'X)',\n      'X]',\n      'X-)',\n      'X-]',\n      'X-D'\n    ]\n  },\n  {\n    name: 'man',\n    emoji: '\uD83D\uDC68',\n    tags: ['mustache', 'father', 'dad'],\n    description: 'man',\n    emoticons: [':3', ':-3', '=3', '=-3', ';3', ';-3', 'x3', 'x-3', 'X3', 'X-3']\n  },\n  {\n    name: 'neutral_face',\n    emoji: '\uD83D\uDE10',\n    tags: ['meh'],\n    description: 'neutral face',\n    emoticons: [':|', ':-|', '=|', '=-|']\n  },\n  {\n    name: 'no_mouth',\n    emoji: '\uD83D\uDE36',\n    tags: ['mute', 'silence'],\n    description: 'face without mouth',\n    emoticons: [':-']\n  },\n  {\n    name: 'open_mouth',\n    emoji: '\uD83D\uDE2E',\n    tags: ['surprise', 'impressed', 'wow'],\n    description: 'face with open mouth',\n    emoticons: [\n      ':o',\n      ':O',\n      ':0',\n      ':-o',\n      ':-O',\n      ':-0',\n      '=o',\n      '=O',\n      '=0',\n      '=-o',\n      '=-O',\n      '=-0'\n    ]\n  },\n  {\n    name: 'rage',\n    emoji: '\uD83D\uDE21',\n    tags: ['angry'],\n    description: 'pouting face',\n    emoticons: [':@', ':-@', '=@', '=-@']\n  },\n  {\n    name: 'smile',\n    emoji: '\uD83D\uDE04',\n    tags: ['happy', 'joy', 'laugh', 'pleased'],\n    description: 'grinning face with smiling eyes',\n    emoticons: [':D', ':-D', '=D', '=-D']\n  },\n  {\n    name: 'smiley',\n    emoji: '\uD83D\uDE03',\n    tags: ['happy', 'joy', 'haha'],\n    description: 'grinning face with big eyes',\n    emoticons: [':)', ':]', ':-)', ':-]', '=)', '=]', '=-)', '=-]']\n  },\n  {\n    name: 'smiling_imp',\n    emoji: '\uD83D\uDE08',\n    tags: ['devil', 'evil', 'horns'],\n    description: 'smiling face with horns',\n    emoticons: [\n      ']:)',\n      ']:]',\n      ']:D',\n      ']:-)',\n      ']:-]',\n      ']:-D',\n      ']=)',\n      ']=]',\n      ']=D',\n      ']=-)',\n      ']=-]',\n      ']=-D'\n    ]\n  },\n  {\n    name: 'sob',\n    emoji: '\uD83D\uDE2D',\n    tags: ['sad', 'cry', 'bawling'],\n    description: 'loudly crying face',\n    emoticons: [\n      \":,'(\",\n      \":,'[\",\n      \":,'-(\",\n      \":,'-[\",\n      \":',(\",\n      \":',[\",\n      \":',-(\",\n      \":',-[\",\n      \"=,'(\",\n      \"=,'[\",\n      \"=,'-(\",\n      \"=,'-[\",\n      \"=',(\",\n      \"=',[\",\n      \"=',-(\",\n      \"=',-[\"\n    ]\n  },\n  {\n    name: 'stuck_out_tongue',\n    emoji: '\uD83D\uDE1B',\n    tags: [],\n    description: 'face with tongue',\n    emoticons: [\n      ':p',\n      ':P',\n      ':d',\n      ':-p',\n      ':-P',\n      ':-d',\n      '=p',\n      '=P',\n      '=d',\n      '=-p',\n      '=-P',\n      '=-d'\n    ]\n  },\n  {\n    name: 'stuck_out_tongue_closed_eyes',\n    emoji: '\uD83D\uDE1D',\n    tags: ['prank'],\n    description: 'squinting face with tongue',\n    emoticons: ['xP', 'x-p', 'x-P', 'x-d', 'Xp', 'Xd', 'X-p', 'X-P', 'X-d']\n  },\n  {\n    name: 'stuck_out_tongue_winking_eye',\n    emoji: '\uD83D\uDE1C',\n    tags: ['prank', 'silly'],\n    description: 'winking face with tongue',\n    emoticons: [';p', ';P', ';d', ';-p', ';-P', ';-d']\n  },\n  {\n    name: 'sunglasses',\n    emoji: '\uD83D\uDE0E',\n    tags: ['cool'],\n    description: 'smiling face with sunglasses',\n    emoticons: [\n      '8)',\n      '8]',\n      '8D',\n      '8-)',\n      '8-]',\n      '8-D',\n      'B)',\n      'B]',\n      'B-)',\n      'B-]',\n      'B-D'\n    ]\n  },\n  {\n    name: 'sweat',\n    emoji: '\uD83D\uDE13',\n    tags: [],\n    description: 'downcast face with sweat',\n    emoticons: [\n      ',:(',\n      ',:[',\n      ',:-(',\n      ',:-[',\n      ',=(',\n      ',=[',\n      ',=-(',\n      ',=-[',\n      \"':(\",\n      \"':[\",\n      \"':-(\",\n      \"':-[\",\n      \"'=(\",\n      \"'=[\",\n      \"'=-(\",\n      \"'=-[\"\n    ]\n  },\n  {\n    name: 'sweat_smile',\n    emoji: '\uD83D\uDE05',\n    tags: ['hot'],\n    description: 'grinning face with sweat',\n    emoticons: [\n      ',:)',\n      ',:]',\n      ',:D',\n      ',:-)',\n      ',:-]',\n      ',:-D',\n      ',=)',\n      ',=]',\n      ',=D',\n      ',=-)',\n      ',=-]',\n      ',=-D',\n      \"':)\",\n      \"':]\",\n      \"':D\",\n      \"':-)\",\n      \"':-]\",\n      \"':-D\",\n      \"'=)\",\n      \"'=]\",\n      \"'=D\",\n      \"'=-)\",\n      \"'=-]\",\n      \"'=-D\"\n    ]\n  },\n  {\n    name: 'unamused',\n    emoji: '\uD83D\uDE12',\n    tags: ['meh'],\n    description: 'unamused face',\n    emoticons: [\n      ':$',\n      ':s',\n      ':z',\n      ':S',\n      ':Z',\n      ':-$',\n      ':-s',\n      ':-z',\n      ':-S',\n      ':-Z',\n      '=$',\n      '=s',\n      '=z',\n      '=S',\n      '=Z',\n      '=-$',\n      '=-s',\n      '=-z',\n      '=-S',\n      '=-Z'\n    ]\n  },\n  {\n    name: 'wink',\n    emoji: '\uD83D\uDE09',\n    tags: ['flirt'],\n    description: 'winking face',\n    emoticons: [';)', ';]', ';D', ';-)', ';-]', ';-D']\n  }\n]\n", "/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @template Fn\n * @template Fallback\n * @typedef {Fn extends (value: any) => value is infer Thing ? Thing : Fallback} Predicate\n */\n\n/**\n * @callback Check\n *   Check that an arbitrary value is a node.\n * @param {unknown} this\n *   The given context.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node\u2019s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node\u2019s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n *\n * @typedef {Record<string, unknown> | Node} Props\n *   Object to check for equivalence.\n *\n *   Note: `Node` is included as it is common but is not indexable.\n *\n * @typedef {Array<Props | TestFunction | string> | Props | TestFunction | string | null | undefined} Test\n *   Check for an arbitrary node.\n *\n * @callback TestFunction\n *   Check if a node passes a test.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | undefined} [index]\n *   The node\u2019s position in its parent.\n * @param {Parent | undefined} [parent]\n *   The node\u2019s parent.\n * @returns {boolean | undefined | void}\n *   Whether this node passes the test.\n *\n *   Note: `void` is included until TS sees no return as `undefined`.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param {unknown} node\n *   Thing to check, typically `Node`.\n * @param {Test} test\n *   A check for a specific node.\n * @param {number | null | undefined} index\n *   The node\u2019s position in its parent.\n * @param {Parent | null | undefined} parent\n *   The node\u2019s parent.\n * @param {unknown} context\n *   Context object (`this`) to pass to `test` functions.\n * @returns {boolean}\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  // Note: overloads in JSDoc can\u2019t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((node?: null | undefined) => false) &\n   *   ((node: unknown, test?: null | undefined, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((node: unknown, test?: Test, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function (node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      return looksLikeANode(node)\n        ? check.call(context, node, index, parent)\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you\u2019re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param {Test} test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns {Check}\n *   An assertion.\n */\nexport const convert =\n  // Note: overloads in JSDoc can\u2019t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((test?: null | undefined) => (node?: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((test?: Test) => Check)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {Check}\n     */\n    function (test) {\n      if (test === null || test === undefined) {\n        return ok\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<Props | TestFunction | string>} tests\n * @returns {Check}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<Check>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @type {TestFunction}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].apply(this, parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {Check}\n */\nfunction propsFactory(check) {\n  const checkAsRecord = /** @type {Record<string, unknown>} */ (check)\n\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    const nodeAsRecord = /** @type {Record<string, unknown>} */ (\n      /** @type {unknown} */ (node)\n    )\n\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      if (nodeAsRecord[key] !== checkAsRecord[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {Check}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunction} testFunction\n * @returns {Check}\n */\nfunction castFactory(testFunction) {\n  return check\n\n  /**\n   * @this {unknown}\n   * @type {Check}\n   */\n  function check(value, index, parent) {\n    return Boolean(\n      looksLikeANode(value) &&\n        testFunction.call(\n          this,\n          value,\n          typeof index === 'number' ? index : undefined,\n          parent || undefined\n        )\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n\n/**\n * @param {unknown} value\n * @returns {value is Node}\n */\nfunction looksLikeANode(value) {\n  return value !== null && typeof value === 'object' && 'type' in value\n}\n", "/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn\u2019t work when publishing on npm.\n */\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {InternalAncestor<InclusiveDescendant<Tree>, Child>} Ancestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > \uD83D\uDC49 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn\u2019t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn\u2019t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {'skip' | boolean} Action\n *   Union of the action types.\n *\n * @typedef {number} Index\n *   Move to the sibling at `index` next (after node itself is completely\n *   traversed).\n *\n *   Useful if mutating the tree, such as removing the node the visitor is\n *   currently on, or any of its previous siblings.\n *   Results less than 0 or greater than or equal to `children.length` stop\n *   traversing the parent.\n *\n * @typedef {[(Action | null | undefined | void)?, (Index | null | undefined)?]} ActionTuple\n *   List with one or two values, the first an action, the second an index.\n *\n * @typedef {Action | ActionTuple | Index | null | undefined | void} VisitorResult\n *   Any value that can be returned from a visitor.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform the parent of node (the last of `ancestors`).\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of an ancestor still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Array<VisitedParents>} ancestors\n *   Ancestors of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [VisitedParents=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Matches<InclusiveDescendant<Tree>, Check>, Ancestor<Tree, Matches<InclusiveDescendant<Tree>, Check>>>} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parents`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Tree type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from 'unist-util-visit-parents/do-not-use-color'\n\n/** @type {Readonly<ActionTuple>} */\nconst empty = []\n\n/**\n * Continue traversing as normal.\n */\nexport const CONTINUE = true\n\n/**\n * Stop traversing immediately.\n */\nexport const EXIT = false\n\n/**\n * Do not traverse this node\u2019s children.\n */\nexport const SKIP = 'skip'\n\n/**\n * Visit nodes, with ancestral information.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} test\n *   `unist-util-is`-compatible test\n * @param {Visitor | boolean | null | undefined} [visitor]\n *   Handle each node.\n * @param {boolean | null | undefined} [reverse]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visitParents(tree, test, visitor, reverse) {\n  /** @type {Test} */\n  let check\n\n  if (typeof test === 'function' && typeof visitor !== 'function') {\n    reverse = visitor\n    // @ts-expect-error no visitor given, so `visitor` is test.\n    visitor = test\n  } else {\n    // @ts-expect-error visitor given, so `test` isn\u2019t a visitor.\n    check = test\n  }\n\n  const is = convert(check)\n  const step = reverse ? -1 : 1\n\n  factory(tree, undefined, [])()\n\n  /**\n   * @param {UnistNode} node\n   * @param {number | undefined} index\n   * @param {Array<UnistParent>} parents\n   */\n  function factory(node, index, parents) {\n    const value = /** @type {Record<string, unknown>} */ (\n      node && typeof node === 'object' ? node : {}\n    )\n\n    if (typeof value.type === 'string') {\n      const name =\n        // `hast`\n        typeof value.tagName === 'string'\n          ? value.tagName\n          : // `xast`\n          typeof value.name === 'string'\n          ? value.name\n          : undefined\n\n      Object.defineProperty(visit, 'name', {\n        value:\n          'node (' + color(node.type + (name ? '<' + name + '>' : '')) + ')'\n      })\n    }\n\n    return visit\n\n    function visit() {\n      /** @type {Readonly<ActionTuple>} */\n      let result = empty\n      /** @type {Readonly<ActionTuple>} */\n      let subresult\n      /** @type {number} */\n      let offset\n      /** @type {Array<UnistParent>} */\n      let grandparents\n\n      if (!test || is(node, index, parents[parents.length - 1] || undefined)) {\n        // @ts-expect-error: `visitor` is now a visitor.\n        result = toResult(visitor(node, parents))\n\n        if (result[0] === EXIT) {\n          return result\n        }\n      }\n\n      if ('children' in node && node.children) {\n        const nodeAsParent = /** @type {UnistParent} */ (node)\n\n        if (nodeAsParent.children && result[0] !== SKIP) {\n          offset = (reverse ? nodeAsParent.children.length : -1) + step\n          grandparents = parents.concat(nodeAsParent)\n\n          while (offset > -1 && offset < nodeAsParent.children.length) {\n            const child = nodeAsParent.children[offset]\n\n            subresult = factory(child, offset, grandparents)()\n\n            if (subresult[0] === EXIT) {\n              return subresult\n            }\n\n            offset =\n              typeof subresult[1] === 'number' ? subresult[1] : offset + step\n          }\n        }\n      }\n\n      return result\n    }\n  }\n}\n\n/**\n * Turn a return value into a clean result.\n *\n * @param {VisitorResult} value\n *   Valid return values from visitors.\n * @returns {Readonly<ActionTuple>}\n *   Clean result.\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return value === null || value === undefined ? empty : [value]\n}\n", "/**\n * @typedef {import('mdast').Nodes} Nodes\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Text} Text\n * @typedef {import('unist-util-visit-parents').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * @typedef RegExpMatchObject\n *   Info on the match.\n * @property {number} index\n *   The index of the search at which the result was found.\n * @property {string} input\n *   A copy of the search string in the text node.\n * @property {[...Array<Parents>, Text]} stack\n *   All ancestors of the text node, where the last node is the text itself.\n *\n * @typedef {RegExp | string} Find\n *   Pattern to find.\n *\n *   Strings are escaped and then turned into global expressions.\n *\n * @typedef {Array<FindAndReplaceTuple>} FindAndReplaceList\n *   Several find and replaces, in array form.\n *\n * @typedef {[Find, Replace?]} FindAndReplaceTuple\n *   Find and replace in tuple form.\n *\n * @typedef {ReplaceFunction | string | null | undefined} Replace\n *   Thing to replace with.\n *\n * @callback ReplaceFunction\n *   Callback called when a search matches.\n * @param {...any} parameters\n *   The parameters are the result of corresponding search expression:\n *\n *   * `value` (`string`) \u2014 whole match\n *   * `...capture` (`Array<string>`) \u2014 matches from regex capture groups\n *   * `match` (`RegExpMatchObject`) \u2014 info on the match\n * @returns {Array<PhrasingContent> | PhrasingContent | string | false | null | undefined}\n *   Thing to replace with.\n *\n *   * when `null`, `undefined`, `''`, remove the match\n *   * \u2026or when `false`, do not replace at all\n *   * \u2026or when `string`, replace with a text node of that value\n *   * \u2026or when `Node` or `Array<Node>`, replace with those nodes\n *\n * @typedef {[RegExp, ReplaceFunction]} Pair\n *   Normalized find and replace.\n *\n * @typedef {Array<Pair>} Pairs\n *   All find and replaced.\n *\n * @typedef Options\n *   Configuration.\n * @property {Test | null | undefined} [ignore]\n *   Test for which nodes to ignore (optional).\n */\n\nimport escape from 'escape-string-regexp'\nimport {visitParents} from 'unist-util-visit-parents'\nimport {convert} from 'unist-util-is'\n\n/**\n * Find patterns in a tree and replace them.\n *\n * The algorithm searches the tree in *preorder* for complete values in `Text`\n * nodes.\n * Partial matches are not supported.\n *\n * @param {Nodes} tree\n *   Tree to change.\n * @param {FindAndReplaceList | FindAndReplaceTuple} list\n *   Patterns to find.\n * @param {Options | null | undefined} [options]\n *   Configuration (when `find` is not `Find`).\n * @returns {undefined}\n *   Nothing.\n */\nexport function findAndReplace(tree, list, options) {\n  const settings = options || {}\n  const ignored = convert(settings.ignore || [])\n  const pairs = toPairs(list)\n  let pairIndex = -1\n\n  while (++pairIndex < pairs.length) {\n    visitParents(tree, 'text', visitor)\n  }\n\n  /** @type {import('unist-util-visit-parents').BuildVisitor<Root, 'text'>} */\n  function visitor(node, parents) {\n    let index = -1\n    /** @type {Parents | undefined} */\n    let grandparent\n\n    while (++index < parents.length) {\n      const parent = parents[index]\n      /** @type {Array<Nodes> | undefined} */\n      const siblings = grandparent ? grandparent.children : undefined\n\n      if (\n        ignored(\n          parent,\n          siblings ? siblings.indexOf(parent) : undefined,\n          grandparent\n        )\n      ) {\n        return\n      }\n\n      grandparent = parent\n    }\n\n    if (grandparent) {\n      return handler(node, parents)\n    }\n  }\n\n  /**\n   * Handle a text node which is not in an ignored parent.\n   *\n   * @param {Text} node\n   *   Text node.\n   * @param {Array<Parents>} parents\n   *   Parents.\n   * @returns {VisitorResult}\n   *   Result.\n   */\n  function handler(node, parents) {\n    const parent = parents[parents.length - 1]\n    const find = pairs[pairIndex][0]\n    const replace = pairs[pairIndex][1]\n    let start = 0\n    /** @type {Array<Nodes>} */\n    const siblings = parent.children\n    const index = siblings.indexOf(node)\n    let change = false\n    /** @type {Array<PhrasingContent>} */\n    let nodes = []\n\n    find.lastIndex = 0\n\n    let match = find.exec(node.value)\n\n    while (match) {\n      const position = match.index\n      /** @type {RegExpMatchObject} */\n      const matchObject = {\n        index: match.index,\n        input: match.input,\n        stack: [...parents, node]\n      }\n      let value = replace(...match, matchObject)\n\n      if (typeof value === 'string') {\n        value = value.length > 0 ? {type: 'text', value} : undefined\n      }\n\n      // It wasn\u2019t a match after all.\n      if (value !== false) {\n        if (start !== position) {\n          nodes.push({\n            type: 'text',\n            value: node.value.slice(start, position)\n          })\n        }\n\n        if (Array.isArray(value)) {\n          nodes.push(...value)\n        } else if (value) {\n          nodes.push(value)\n        }\n\n        start = position + match[0].length\n        change = true\n      }\n\n      if (!find.global) {\n        break\n      }\n\n      match = find.exec(node.value)\n    }\n\n    if (change) {\n      if (start < node.value.length) {\n        nodes.push({type: 'text', value: node.value.slice(start)})\n      }\n\n      parent.children.splice(index, 1, ...nodes)\n    } else {\n      nodes = [node]\n    }\n\n    return index + nodes.length\n  }\n}\n\n/**\n * Turn a tuple or a list of tuples into pairs.\n *\n * @param {FindAndReplaceList | FindAndReplaceTuple} tupleOrList\n *   Schema.\n * @returns {Pairs}\n *   Clean pairs.\n */\nfunction toPairs(tupleOrList) {\n  /** @type {Pairs} */\n  const result = []\n\n  if (!Array.isArray(tupleOrList)) {\n    throw new TypeError('Expected find and replace tuple or list of tuples')\n  }\n\n  /** @type {FindAndReplaceList} */\n  // @ts-expect-error: correct.\n  const list =\n    !tupleOrList[0] || Array.isArray(tupleOrList[0])\n      ? tupleOrList\n      : [tupleOrList]\n\n  let index = -1\n\n  while (++index < list.length) {\n    const tuple = list[index]\n    result.push([toExpression(tuple[0]), toFunction(tuple[1])])\n  }\n\n  return result\n}\n\n/**\n * Turn a find into an expression.\n *\n * @param {Find} find\n *   Find.\n * @returns {RegExp}\n *   Expression.\n */\nfunction toExpression(find) {\n  return typeof find === 'string' ? new RegExp(escape(find), 'g') : find\n}\n\n/**\n * Turn a replace into a function.\n *\n * @param {Replace} replace\n *   Replace.\n * @returns {ReplaceFunction}\n *   Function.\n */\nfunction toFunction(replace) {\n  return typeof replace === 'function'\n    ? replace\n    : function () {\n        return replace\n      }\n}\n", "import { get as getEmoji } from 'node-emoji';\nimport { emoticon } from 'emoticon';\nimport { findAndReplace } from 'mdast-util-find-and-replace';\n\nconst RE_EMOJI = /:\\+1:|:-1:|:[\\w-]+:/g;\nconst RE_SHORT = /[$@|*'\",;.=:\\-)([\\]\\\\/<>038BOopPsSdDxXzZ]{2,5}/g;\nconst RE_PUNCT = /(?:_|-(?!1))/g;\n\nconst DEFAULT_SETTINGS = {\n    padSpaceAfter: false,\n    emoticon: false,\n    accessible: false,\n};\n\nexport default function plugin(options) {\n    const settings = Object.assign({}, DEFAULT_SETTINGS, options);\n    const pad = !!settings.padSpaceAfter;\n    const emoticonEnable = !!settings.emoticon;\n    const accessible = !!settings.accessible;\n\n    function aria(text, label) {\n        // Creating HTML node in Markdown node is undocumented.\n        // https://github.com/syntax-tree/mdast-util-math/blob/e70bb824dc70f5423324b31b0b68581cf6698fe8/index.js#L44-L55\n        return {\n            type: 'text',\n            meta: null,\n            value: text,\n            data: {\n                hName: 'span',\n                hProperties: {\n                    role: 'img',\n                    ariaLabel: label,\n                },\n                hChildren: [{ type: 'text', value: text }],\n            },\n        };\n    }\n\n    function replaceEmoticon(match) {\n        // find emoji by shortcode - full match or with-out last char as it could be from text e.g. :-),\n        const iconFull = emoticon.find(e => e.emoticons.includes(match)); // full match\n        const iconPart = emoticon.find(e => e.emoticons.includes(match.slice(0, -1))); // second search pattern\n        const icon = iconFull || iconPart;\n        if (!icon) {\n            return false;\n        }\n        const trimmedChar = !iconFull && iconPart ? match.slice(-1) : '';\n        const addPad = pad ? ' ' : '';\n        const replaced = icon.emoji + addPad + trimmedChar;\n        if (accessible) {\n            return aria(replaced, icon.name + ' emoticon');\n        }\n        return replaced;\n    }\n\n    function replaceEmoji(match) {\n        let got = getEmoji(match);\n\n        if (typeof got === 'undefined') {\n            return false;\n        }\n\n        if (pad) {\n            got = got + ' ';\n        }\n\n        if (accessible) {\n            const label = match.slice(1, -1).replace(RE_PUNCT, ' ') + ' emoji';\n            return aria(got, label);\n        }\n\n        return got;\n    }\n\n    const replacers = [[RE_EMOJI, replaceEmoji]];\n    if (emoticonEnable) {\n        replacers.push([RE_SHORT, replaceEmoticon]);\n    }\n\n    function transformer(tree) {\n        findAndReplace(tree, replacers);\n    }\n\n    return transformer;\n}\n", "/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Image} Image\n * @typedef {import('mdast').Link} Link\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {Array<string>} [imageExtensions]\n *   File extensions (without dot) to treat as images.\n */\n\nimport isUrl from 'is-url'\nimport {visitParents} from 'unist-util-visit-parents'\nimport {is} from 'unist-util-is'\n\nconst isImgPath = (/** @type {string} */ value) =>\n  value.startsWith('/') || value.startsWith('./') || value.startsWith('../')\n\n/**\n * Extensions recognized as images by default\n */\nexport const defaultImageExtensions = [\n  'svg',\n  'png',\n  'jpg',\n  'jpeg',\n  'gif',\n  'webp',\n  'avif'\n]\n\n/**\n * Plugin to add a simpler image syntax.\n *\n * @type {import('unified').Plugin<[Options?]|void[], Root>}\n */\nexport default function remarkImages({\n  imageExtensions = defaultImageExtensions\n} = {}) {\n  const imgExtRegex = new RegExp(`\\\\.(${imageExtensions.join('|')})$`)\n  const isImgExt = (/** @type {string} */ value) => imgExtRegex.test(value)\n\n  return (tree) => {\n    visitParents(tree, 'text', (node, parents) => {\n      const value = String(node.value).trim()\n\n      if ((isUrl(value) || isImgPath(value)) && isImgExt(value)) {\n        let interactive = false\n        let length = parents.length\n        const parent = parents[length - 1]\n        const siblings = parent.children\n        // @ts-expect-error: too many possible parents.\n        const index = siblings.indexOf(node)\n\n        // Check if we\u2019re in interactive content.\n        while (length--) {\n          if (is(parents[length], ['link', 'linkReference'])) {\n            interactive = true\n            break\n          }\n        }\n\n        /** @type {Image} */\n        const image = {\n          type: 'image',\n          url: value,\n          title: null,\n          alt: '',\n          position: node.position\n        }\n        /** @type {Image|Link} */\n        let next = image\n\n        // Add a link if we\u2019re not already in one.\n        if (!interactive) {\n          next = {\n            type: 'link',\n            url: value,\n            title: null,\n            children: [image],\n            position: node.position\n          }\n        }\n\n        siblings[index] = next\n      }\n    })\n  }\n}\n", "// This module is generated by `script/`.\n//\n// CommonMark handles attention (emphasis, strong) markers based on what comes\n// before or after them.\n// One such difference is if those characters are Unicode punctuation.\n// This script is generated from the Unicode data.\n\n/**\n * Regular expression that matches a unicode punctuation character.\n */\nexport const unicodePunctuationRegex =\n  /[!-\\/:-@\\[-`\\{-~\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061D-\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1B7D\\u1B7E\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52-\\u2E5D\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]/\n", "/**\n * @typedef {import('micromark-util-types').Code} Code\n */\n\nimport {unicodePunctuationRegex} from './lib/unicode-punctuation-regex.js'\n\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiAlpha = regexCheck(/[A-Za-z]/)\n\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  )\n}\n\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiDigit = regexCheck(/\\d/)\n\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2\n}\n\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32)\n}\n\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32\n}\n\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodePunctuation = regexCheck(unicodePunctuationRegex)\n\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodeWhitespace = regexCheck(/\\s/)\n\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => boolean}\n */\nfunction regexCheck(regex) {\n  return check\n\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code\n   *   Character code.\n   * @returns {boolean}\n   *   Whether the character code matches the bound regex.\n   */\n  function check(code) {\n    return code !== null && regex.test(String.fromCharCode(code))\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {TokenType} attributesType\n * @param {TokenType} attributesMarkerType\n * @param {TokenType} attributeType\n * @param {TokenType} attributeIdType\n * @param {TokenType} attributeClassType\n * @param {TokenType} attributeNameType\n * @param {TokenType} attributeInitializerType\n * @param {TokenType} attributeValueLiteralType\n * @param {TokenType} attributeValueType\n * @param {TokenType} attributeValueMarker\n * @param {TokenType} attributeValueData\n * @param {boolean} [disallowEol=false]\n */\n/* eslint-disable-next-line max-params */\nexport function factoryAttributes(\n  effects,\n  ok,\n  nok,\n  attributesType,\n  attributesMarkerType,\n  attributeType,\n  attributeIdType,\n  attributeClassType,\n  attributeNameType,\n  attributeInitializerType,\n  attributeValueLiteralType,\n  attributeValueType,\n  attributeValueMarker,\n  attributeValueData,\n  disallowEol\n) {\n  /** @type {TokenType} */\n  let type\n  /** @type {Code | undefined} */\n  let marker\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    effects.enter(attributesType)\n    effects.enter(attributesMarkerType)\n    effects.consume(code)\n    effects.exit(attributesMarkerType)\n    return between\n  }\n\n  /** @type {State} */\n  function between(code) {\n    if (code === 35) {\n      type = attributeIdType\n      return shortcutStart(code)\n    }\n    if (code === 46) {\n      type = attributeClassType\n      return shortcutStart(code)\n    }\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.enter(attributeType)\n      effects.enter(attributeNameType)\n      effects.consume(code)\n      return name\n    }\n    if (disallowEol && markdownSpace(code)) {\n      return factorySpace(effects, between, 'whitespace')(code)\n    }\n    if (!disallowEol && markdownLineEndingOrSpace(code)) {\n      return factoryWhitespace(effects, between)(code)\n    }\n    return end(code)\n  }\n\n  /** @type {State} */\n  function shortcutStart(code) {\n    // Assume it\u2019s registered.\n    const markerType = /** @type {TokenType} */ type + 'Marker'\n    effects.enter(attributeType)\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    return shortcutStartAfter\n  }\n\n  /** @type {State} */\n  function shortcutStartAfter(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 35 ||\n      code === 39 ||\n      code === 46 ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96 ||\n      code === 125 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return nok(code)\n    }\n\n    // Assume it\u2019s registered.\n    const valueType = /** @type {TokenType} */ type + 'Value'\n    effects.enter(valueType)\n    effects.consume(code)\n    return shortcut\n  }\n\n  /** @type {State} */\n  function shortcut(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n    if (\n      code === 35 ||\n      code === 46 ||\n      code === 125 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      // Assume it\u2019s registered.\n      const valueType = /** @type {TokenType} */ type + 'Value'\n      effects.exit(valueType)\n      effects.exit(type)\n      effects.exit(attributeType)\n      return between(code)\n    }\n    effects.consume(code)\n    return shortcut\n  }\n\n  /** @type {State} */\n  function name(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return name\n    }\n    effects.exit(attributeNameType)\n    if (disallowEol && markdownSpace(code)) {\n      return factorySpace(effects, nameAfter, 'whitespace')(code)\n    }\n    if (!disallowEol && markdownLineEndingOrSpace(code)) {\n      return factoryWhitespace(effects, nameAfter)(code)\n    }\n    return nameAfter(code)\n  }\n\n  /** @type {State} */\n  function nameAfter(code) {\n    if (code === 61) {\n      effects.enter(attributeInitializerType)\n      effects.consume(code)\n      effects.exit(attributeInitializerType)\n      return valueBefore\n    }\n\n    // Attribute w/o value.\n    effects.exit(attributeType)\n    return between(code)\n  }\n\n  /** @type {State} */\n  function valueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96 ||\n      code === 125 ||\n      (disallowEol && markdownLineEnding(code))\n    ) {\n      return nok(code)\n    }\n    if (code === 34 || code === 39) {\n      effects.enter(attributeValueLiteralType)\n      effects.enter(attributeValueMarker)\n      effects.consume(code)\n      effects.exit(attributeValueMarker)\n      marker = code\n      return valueQuotedStart\n    }\n    if (disallowEol && markdownSpace(code)) {\n      return factorySpace(effects, valueBefore, 'whitespace')(code)\n    }\n    if (!disallowEol && markdownLineEndingOrSpace(code)) {\n      return factoryWhitespace(effects, valueBefore)(code)\n    }\n    effects.enter(attributeValueType)\n    effects.enter(attributeValueData)\n    effects.consume(code)\n    marker = undefined\n    return valueUnquoted\n  }\n\n  /** @type {State} */\n  function valueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n    if (code === 125 || markdownLineEndingOrSpace(code)) {\n      effects.exit(attributeValueData)\n      effects.exit(attributeValueType)\n      effects.exit(attributeType)\n      return between(code)\n    }\n    effects.consume(code)\n    return valueUnquoted\n  }\n\n  /** @type {State} */\n  function valueQuotedStart(code) {\n    if (code === marker) {\n      effects.enter(attributeValueMarker)\n      effects.consume(code)\n      effects.exit(attributeValueMarker)\n      effects.exit(attributeValueLiteralType)\n      effects.exit(attributeType)\n      return valueQuotedAfter\n    }\n    effects.enter(attributeValueType)\n    return valueQuotedBetween(code)\n  }\n\n  /** @type {State} */\n  function valueQuotedBetween(code) {\n    if (code === marker) {\n      effects.exit(attributeValueType)\n      return valueQuotedStart(code)\n    }\n    if (code === null) {\n      return nok(code)\n    }\n\n    // Note: blank lines can\u2019t exist in content.\n    if (markdownLineEnding(code)) {\n      return disallowEol\n        ? nok(code)\n        : factoryWhitespace(effects, valueQuotedBetween)(code)\n    }\n    effects.enter(attributeValueData)\n    effects.consume(code)\n    return valueQuoted\n  }\n\n  /** @type {State} */\n  function valueQuoted(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit(attributeValueData)\n      return valueQuotedBetween(code)\n    }\n    effects.consume(code)\n    return valueQuoted\n  }\n\n  /** @type {State} */\n  function valueQuotedAfter(code) {\n    return code === 125 || markdownLineEndingOrSpace(code)\n      ? between(code)\n      : end(code)\n  }\n\n  /** @type {State} */\n  function end(code) {\n    if (code === 125) {\n      effects.enter(attributesMarkerType)\n      effects.consume(code)\n      effects.exit(attributesMarkerType)\n      effects.exit(attributesType)\n      return ok\n    }\n    return nok(code)\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {markdownLineEnding} from 'micromark-util-character'\n// This is a fork of:\n// <https://github.com/micromark/micromark/tree/main/packages/micromark-factory-label>\n// to allow empty labels, balanced brackets (such as for nested directives),\n// text instead of strings, and optionally disallows EOLs.\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {TokenType} type\n * @param {TokenType} markerType\n * @param {TokenType} stringType\n * @param {boolean} [disallowEol=false]\n */ // eslint-disable-next-line max-params\nexport function factoryLabel(\n  effects,\n  ok,\n  nok,\n  type,\n  markerType,\n  stringType,\n  disallowEol\n) {\n  let size = 0\n  let balance = 0\n  /** @type {Token|undefined} */\n  let previous\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    return afterStart\n  }\n\n  /** @type {State} */\n  function afterStart(code) {\n    if (code === 93) {\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n    effects.enter(stringType)\n    return lineStart(code)\n  }\n\n  /** @type {State} */\n  function lineStart(code) {\n    if (code === 93 && !balance) {\n      return atClosingBrace(code)\n    }\n    const token = effects.enter('chunkText', {\n      contentType: 'text',\n      previous\n    })\n    if (previous) previous.next = token\n    previous = token\n    return data(code)\n  }\n\n  /** @type {State} */\n  function data(code) {\n    if (code === null || size > 999) {\n      return nok(code)\n    }\n    if (code === 91 && ++balance > 32) {\n      return nok(code)\n    }\n    if (code === 93 && !balance--) {\n      effects.exit('chunkText')\n      return atClosingBrace(code)\n    }\n    if (markdownLineEnding(code)) {\n      if (disallowEol) {\n        return nok(code)\n      }\n      effects.consume(code)\n      effects.exit('chunkText')\n      return lineStart\n    }\n    effects.consume(code)\n    return code === 92 ? dataEscape : data\n  }\n\n  /** @type {State} */\n  function dataEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return data\n    }\n    return data(code)\n  }\n\n  /** @type {State} */\n  function atClosingBrace(code) {\n    effects.exit(stringType)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    effects.exit(type)\n    return ok\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {asciiAlpha, asciiAlphanumeric} from 'micromark-util-character'\n/**\n * @this {TokenizeContext}\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {TokenType} type\n */\nexport function factoryName(effects, ok, nok, type) {\n  const self = this\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    if (asciiAlpha(code)) {\n      effects.enter(type)\n      effects.consume(code)\n      return name\n    }\n    return nok(code)\n  }\n\n  /** @type {State} */\n  function name(code) {\n    if (code === 45 || code === 95 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return name\n    }\n    effects.exit(type)\n    return self.previous === 45 || self.previous === 95 ? nok(code) : ok(code)\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {factoryAttributes} from './factory-attributes.js'\nimport {factoryLabel} from './factory-label.js'\nimport {factoryName} from './factory-name.js'\n\n/** @type {Construct} */\nexport const directiveContainer = {\n  tokenize: tokenizeDirectiveContainer,\n  concrete: true\n}\nconst label = {\n  tokenize: tokenizeLabel,\n  partial: true\n}\nconst attributes = {\n  tokenize: tokenizeAttributes,\n  partial: true\n}\nconst nonLazyLine = {\n  tokenize: tokenizeNonLazyLine,\n  partial: true\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDirectiveContainer(effects, ok, nok) {\n  const self = this\n  const tail = self.events[self.events.length - 1]\n  const initialSize =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let sizeOpen = 0\n  /** @type {Token} */\n  let previous\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    effects.enter('directiveContainer')\n    effects.enter('directiveContainerFence')\n    effects.enter('directiveContainerSequence')\n    return sequenceOpen(code)\n  }\n\n  /** @type {State} */\n  function sequenceOpen(code) {\n    if (code === 58) {\n      effects.consume(code)\n      sizeOpen++\n      return sequenceOpen\n    }\n    if (sizeOpen < 3) {\n      return nok(code)\n    }\n    effects.exit('directiveContainerSequence')\n    return factoryName.call(\n      self,\n      effects,\n      afterName,\n      nok,\n      'directiveContainerName'\n    )(code)\n  }\n\n  /** @type {State} */\n  function afterName(code) {\n    return code === 91\n      ? effects.attempt(label, afterLabel, afterLabel)(code)\n      : afterLabel(code)\n  }\n\n  /** @type {State} */\n  function afterLabel(code) {\n    return code === 123\n      ? effects.attempt(attributes, afterAttributes, afterAttributes)(code)\n      : afterAttributes(code)\n  }\n\n  /** @type {State} */\n  function afterAttributes(code) {\n    return factorySpace(effects, openAfter, 'whitespace')(code)\n  }\n\n  /** @type {State} */\n  function openAfter(code) {\n    effects.exit('directiveContainerFence')\n    if (code === null) {\n      return afterOpening(code)\n    }\n    if (markdownLineEnding(code)) {\n      if (self.interrupt) {\n        return ok(code)\n      }\n      return effects.attempt(nonLazyLine, contentStart, afterOpening)(code)\n    }\n    return nok(code)\n  }\n\n  /** @type {State} */\n  function afterOpening(code) {\n    effects.exit('directiveContainer')\n    return ok(code)\n  }\n\n  /** @type {State} */\n  function contentStart(code) {\n    if (code === null) {\n      effects.exit('directiveContainer')\n      return ok(code)\n    }\n    effects.enter('directiveContainerContent')\n    return lineStart(code)\n  }\n\n  /** @type {State} */\n  function lineStart(code) {\n    if (code === null) {\n      return after(code)\n    }\n    return effects.attempt(\n      {\n        tokenize: tokenizeClosingFence,\n        partial: true\n      },\n      after,\n      initialSize\n        ? factorySpace(effects, chunkStart, 'linePrefix', initialSize + 1)\n        : chunkStart\n    )(code)\n  }\n\n  /** @type {State} */\n  function chunkStart(code) {\n    if (code === null) {\n      return after(code)\n    }\n    const token = effects.enter('chunkDocument', {\n      contentType: 'document',\n      previous\n    })\n    if (previous) previous.next = token\n    previous = token\n    return contentContinue(code)\n  }\n\n  /** @type {State} */\n  function contentContinue(code) {\n    if (code === null) {\n      const t = effects.exit('chunkDocument')\n      self.parser.lazy[t.start.line] = false\n      return after(code)\n    }\n    if (markdownLineEnding(code)) {\n      return effects.check(nonLazyLine, nonLazyLineAfter, lineAfter)(code)\n    }\n    effects.consume(code)\n    return contentContinue\n  }\n\n  /** @type {State} */\n  function nonLazyLineAfter(code) {\n    effects.consume(code)\n    const t = effects.exit('chunkDocument')\n    self.parser.lazy[t.start.line] = false\n    return lineStart\n  }\n\n  /** @type {State} */\n  function lineAfter(code) {\n    const t = effects.exit('chunkDocument')\n    self.parser.lazy[t.start.line] = false\n    return after(code)\n  }\n\n  /** @type {State} */\n  function after(code) {\n    effects.exit('directiveContainerContent')\n    effects.exit('directiveContainer')\n    return ok(code)\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Tokenizer}\n   */\n  function tokenizeClosingFence(effects, ok, nok) {\n    let size = 0\n    return factorySpace(effects, closingPrefixAfter, 'linePrefix', 4)\n\n    /** @type {State} */\n    function closingPrefixAfter(code) {\n      effects.enter('directiveContainerFence')\n      effects.enter('directiveContainerSequence')\n      return closingSequence(code)\n    }\n\n    /** @type {State} */\n    function closingSequence(code) {\n      if (code === 58) {\n        effects.consume(code)\n        size++\n        return closingSequence\n      }\n      if (size < sizeOpen) return nok(code)\n      effects.exit('directiveContainerSequence')\n      return factorySpace(effects, closingSequenceEnd, 'whitespace')(code)\n    }\n\n    /** @type {State} */\n    function closingSequenceEnd(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit('directiveContainerFence')\n        return ok(code)\n      }\n      return nok(code)\n    }\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLabel(effects, ok, nok) {\n  // Always a `[`\n  return factoryLabel(\n    effects,\n    ok,\n    nok,\n    'directiveContainerLabel',\n    'directiveContainerLabelMarker',\n    'directiveContainerLabelString',\n    true\n  )\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeAttributes(effects, ok, nok) {\n  // Always a `{`\n  return factoryAttributes(\n    effects,\n    ok,\n    nok,\n    'directiveContainerAttributes',\n    'directiveContainerAttributesMarker',\n    'directiveContainerAttribute',\n    'directiveContainerAttributeId',\n    'directiveContainerAttributeClass',\n    'directiveContainerAttributeName',\n    'directiveContainerAttributeInitializerMarker',\n    'directiveContainerAttributeValueLiteral',\n    'directiveContainerAttributeValue',\n    'directiveContainerAttributeValueMarker',\n    'directiveContainerAttributeValueData',\n    true\n  )\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeNonLazyLine(effects, ok, nok) {\n  const self = this\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return lineStart\n  }\n\n  /** @type {State} */\n  function lineStart(code) {\n    return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {factoryAttributes} from './factory-attributes.js'\nimport {factoryLabel} from './factory-label.js'\nimport {factoryName} from './factory-name.js'\n\n/** @type {Construct} */\nexport const directiveLeaf = {\n  tokenize: tokenizeDirectiveLeaf\n}\nconst label = {\n  tokenize: tokenizeLabel,\n  partial: true\n}\nconst attributes = {\n  tokenize: tokenizeAttributes,\n  partial: true\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDirectiveLeaf(effects, ok, nok) {\n  const self = this\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    effects.enter('directiveLeaf')\n    effects.enter('directiveLeafSequence')\n    effects.consume(code)\n    return inStart\n  }\n\n  /** @type {State} */\n  function inStart(code) {\n    if (code === 58) {\n      effects.consume(code)\n      effects.exit('directiveLeafSequence')\n      return factoryName.call(\n        self,\n        effects,\n        afterName,\n        nok,\n        'directiveLeafName'\n      )\n    }\n    return nok(code)\n  }\n\n  /** @type {State} */\n  function afterName(code) {\n    return code === 91\n      ? effects.attempt(label, afterLabel, afterLabel)(code)\n      : afterLabel(code)\n  }\n\n  /** @type {State} */\n  function afterLabel(code) {\n    return code === 123\n      ? effects.attempt(attributes, afterAttributes, afterAttributes)(code)\n      : afterAttributes(code)\n  }\n\n  /** @type {State} */\n  function afterAttributes(code) {\n    return factorySpace(effects, end, 'whitespace')(code)\n  }\n\n  /** @type {State} */\n  function end(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('directiveLeaf')\n      return ok(code)\n    }\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLabel(effects, ok, nok) {\n  // Always a `[`\n  return factoryLabel(\n    effects,\n    ok,\n    nok,\n    'directiveLeafLabel',\n    'directiveLeafLabelMarker',\n    'directiveLeafLabelString',\n    true\n  )\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeAttributes(effects, ok, nok) {\n  // Always a `{`\n  return factoryAttributes(\n    effects,\n    ok,\n    nok,\n    'directiveLeafAttributes',\n    'directiveLeafAttributesMarker',\n    'directiveLeafAttribute',\n    'directiveLeafAttributeId',\n    'directiveLeafAttributeClass',\n    'directiveLeafAttributeName',\n    'directiveLeafAttributeInitializerMarker',\n    'directiveLeafAttributeValueLiteral',\n    'directiveLeafAttributeValue',\n    'directiveLeafAttributeValueMarker',\n    'directiveLeafAttributeValueData',\n    true\n  )\n}\n", "/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factoryAttributes} from './factory-attributes.js'\nimport {factoryLabel} from './factory-label.js'\nimport {factoryName} from './factory-name.js'\n\n/** @type {Construct} */\nexport const directiveText = {\n  tokenize: tokenizeDirectiveText,\n  previous\n}\nconst label = {\n  tokenize: tokenizeLabel,\n  partial: true\n}\nconst attributes = {\n  tokenize: tokenizeAttributes,\n  partial: true\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Previous}\n */\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return (\n    code !== 58 ||\n    this.events[this.events.length - 1][1].type === 'characterEscape'\n  )\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDirectiveText(effects, ok, nok) {\n  const self = this\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    effects.enter('directiveText')\n    effects.enter('directiveTextMarker')\n    effects.consume(code)\n    effects.exit('directiveTextMarker')\n    return factoryName.call(self, effects, afterName, nok, 'directiveTextName')\n  }\n\n  /** @type {State} */\n  function afterName(code) {\n    return code === 58\n      ? nok(code)\n      : code === 91\n      ? effects.attempt(label, afterLabel, afterLabel)(code)\n      : afterLabel(code)\n  }\n\n  /** @type {State} */\n  function afterLabel(code) {\n    return code === 123\n      ? effects.attempt(attributes, afterAttributes, afterAttributes)(code)\n      : afterAttributes(code)\n  }\n\n  /** @type {State} */\n  function afterAttributes(code) {\n    effects.exit('directiveText')\n    return ok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLabel(effects, ok, nok) {\n  // Always a `[`\n  return factoryLabel(\n    effects,\n    ok,\n    nok,\n    'directiveTextLabel',\n    'directiveTextLabelMarker',\n    'directiveTextLabelString'\n  )\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeAttributes(effects, ok, nok) {\n  // Always a `{`\n  return factoryAttributes(\n    effects,\n    ok,\n    nok,\n    'directiveTextAttributes',\n    'directiveTextAttributesMarker',\n    'directiveTextAttribute',\n    'directiveTextAttributeId',\n    'directiveTextAttributeClass',\n    'directiveTextAttributeName',\n    'directiveTextAttributeInitializerMarker',\n    'directiveTextAttributeValueLiteral',\n    'directiveTextAttributeValue',\n    'directiveTextAttributeValueMarker',\n    'directiveTextAttributeValueData'\n  )\n}\n", "/**\n * @typedef {import('micromark-util-types').Extension} Extension\n */\n\nimport {directiveContainer} from './directive-container.js'\nimport {directiveLeaf} from './directive-leaf.js'\nimport {directiveText} from './directive-text.js'\n\n/**\n * Create an extension for `micromark` to enable directive syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions`, to\n *   enable directive syntax.\n */\nexport function directive() {\n  return {\n    text: {\n      [58]: directiveText\n    },\n    flow: {\n      [58]: [directiveContainer, directiveLeaf]\n    }\n  }\n}\n", "/**\n * Map of invalid numeric character references to their replacements, according to HTML.\n *\n * @type {Record<number, string>}\n */\nexport const characterReferenceInvalid = {\n  0: '\uFFFD',\n  128: '\u20AC',\n  130: '\u201A',\n  131: '\u0192',\n  132: '\u201E',\n  133: '\u2026',\n  134: '\u2020',\n  135: '\u2021',\n  136: '\u02C6',\n  137: '\u2030',\n  138: '\u0160',\n  139: '\u2039',\n  140: '\u0152',\n  142: '\u017D',\n  145: '\u2018',\n  146: '\u2019',\n  147: '\u201C',\n  148: '\u201D',\n  149: '\u2022',\n  150: '\u2013',\n  151: '\u2014',\n  152: '\u02DC',\n  153: '\u2122',\n  154: '\u0161',\n  155: '\u203A',\n  156: '\u0153',\n  158: '\u017E',\n  159: '\u0178'\n}\n", "/**\n * Check if the given character code, or the character code at the first\n * character, is decimal.\n *\n * @param {string|number} character\n * @returns {boolean} Whether `character` is a decimal\n */\nexport function isDecimal(character) {\n  const code =\n    typeof character === 'string' ? character.charCodeAt(0) : character\n\n  return code >= 48 && code <= 57 /* 0-9 */\n}\n", "/**\n * Check if the given character code, or the character code at the first\n * character, is hexadecimal.\n *\n * @param {string|number} character\n * @returns {boolean} Whether `character` is hexadecimal\n */\nexport function isHexadecimal(character) {\n  const code =\n    typeof character === 'string' ? character.charCodeAt(0) : character\n\n  return (\n    (code >= 97 /* a */ && code <= 102) /* z */ ||\n    (code >= 65 /* A */ && code <= 70) /* Z */ ||\n    (code >= 48 /* A */ && code <= 57) /* Z */\n  )\n}\n", "/**\n * Check if the given character code, or the character code at the first\n * character, is alphabetical.\n *\n * @param {string|number} character\n * @returns {boolean} Whether `character` is alphabetical.\n */\nexport function isAlphabetical(character) {\n  const code =\n    typeof character === 'string' ? character.charCodeAt(0) : character\n\n  return (\n    (code >= 97 && code <= 122) /* a-z */ ||\n    (code >= 65 && code <= 90) /* A-Z */\n  )\n}\n", "import {isAlphabetical} from 'is-alphabetical'\nimport {isDecimal} from 'is-decimal'\n\n/**\n * Check if the given character code, or the character code at the first\n * character, is alphanumerical.\n *\n * @param {string|number} character\n * @returns {boolean} Whether `character` is alphanumerical.\n */\nexport function isAlphanumerical(character) {\n  return isAlphabetical(character) || isDecimal(character)\n}\n", "/**\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\nimport {characterEntitiesLegacy} from 'character-entities-legacy'\nimport {characterReferenceInvalid} from 'character-reference-invalid'\nimport {isDecimal} from 'is-decimal'\nimport {isHexadecimal} from 'is-hexadecimal'\nimport {isAlphanumerical} from 'is-alphanumerical'\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\n\nconst fromCharCode = String.fromCharCode\n\n// Warning messages.\nconst messages = [\n  '',\n  /* 1: Non terminated (named) */\n  'Named character references must be terminated by a semicolon',\n  /* 2: Non terminated (numeric) */\n  'Numeric character references must be terminated by a semicolon',\n  /* 3: Empty (named) */\n  'Named character references cannot be empty',\n  /* 4: Empty (numeric) */\n  'Numeric character references cannot be empty',\n  /* 5: Unknown (named) */\n  'Named character references must be known',\n  /* 6: Disallowed (numeric) */\n  'Numeric character references cannot be disallowed',\n  /* 7: Prohibited (numeric) */\n  'Numeric character references cannot be outside the permissible Unicode range'\n]\n\n/**\n * Parse HTML character references.\n *\n * @param {string} value\n * @param {import('../index.js').Options} [options={}]\n */\nexport function parseEntities(value, options = {}) {\n  const additional =\n    typeof options.additional === 'string'\n      ? options.additional.charCodeAt(0)\n      : options.additional\n  /** @type {Array<string>} */\n  const result = []\n  let index = 0\n  let lines = -1\n  let queue = ''\n  /** @type {Point|undefined} */\n  let point\n  /** @type {Array<number>|undefined} */\n  let indent\n\n  if (options.position) {\n    if ('start' in options.position || 'indent' in options.position) {\n      // @ts-expect-error: points don\u2019t have indent.\n      indent = options.position.indent\n      // @ts-expect-error: points don\u2019t have indent.\n      point = options.position.start\n    } else {\n      point = options.position\n    }\n  }\n\n  let line = (point ? point.line : 0) || 1\n  let column = (point ? point.column : 0) || 1\n\n  // Cache the current point.\n  let previous = now()\n  /** @type {number|undefined} */\n  let character\n\n  // Ensure the algorithm walks over the first character (inclusive).\n  index--\n\n  while (++index <= value.length) {\n    // If the previous character was a newline.\n    if (character === 10 /* `\\n` */) {\n      column = (indent ? indent[lines] : 0) || 1\n    }\n\n    character = value.charCodeAt(index)\n\n    if (character === 38 /* `&` */) {\n      const following = value.charCodeAt(index + 1)\n\n      // The behavior depends on the identity of the next character.\n      if (\n        following === 9 /* `\\t` */ ||\n        following === 10 /* `\\n` */ ||\n        following === 12 /* `\\f` */ ||\n        following === 32 /* ` ` */ ||\n        following === 38 /* `&` */ ||\n        following === 60 /* `<` */ ||\n        Number.isNaN(following) ||\n        (additional && following === additional)\n      ) {\n        // Not a character reference.\n        // No characters are consumed, and nothing is returned.\n        // This is not an error, either.\n        queue += fromCharCode(character)\n        column++\n        continue\n      }\n\n      const start = index + 1\n      let begin = start\n      let end = start\n      /** @type {string} */\n      let type\n\n      if (following === 35 /* `#` */) {\n        // Numerical reference.\n        end = ++begin\n\n        // The behavior further depends on the next character.\n        const following = value.charCodeAt(end)\n\n        if (following === 88 /* `X` */ || following === 120 /* `x` */) {\n          // ASCII hexadecimal digits.\n          type = 'hexadecimal'\n          end = ++begin\n        } else {\n          // ASCII decimal digits.\n          type = 'decimal'\n        }\n      } else {\n        // Named reference.\n        type = 'named'\n      }\n\n      let characterReferenceCharacters = ''\n      let characterReference = ''\n      let characters = ''\n      // Each type of character reference accepts different characters.\n      // This test is used to detect whether a reference has ended (as the semicolon\n      // is not strictly needed).\n      const test =\n        type === 'named'\n          ? isAlphanumerical\n          : type === 'decimal'\n          ? isDecimal\n          : isHexadecimal\n\n      end--\n\n      while (++end <= value.length) {\n        const following = value.charCodeAt(end)\n\n        if (!test(following)) {\n          break\n        }\n\n        characters += fromCharCode(following)\n\n        // Check if we can match a legacy named reference.\n        // If so, we cache that as the last viable named reference.\n        // This ensures we do not need to walk backwards later.\n        if (type === 'named' && characterEntitiesLegacy.includes(characters)) {\n          characterReferenceCharacters = characters\n          // @ts-expect-error: always able to decode.\n          characterReference = decodeNamedCharacterReference(characters)\n        }\n      }\n\n      let terminated = value.charCodeAt(end) === 59 /* `;` */\n\n      if (terminated) {\n        end++\n\n        const namedReference =\n          type === 'named' ? decodeNamedCharacterReference(characters) : false\n\n        if (namedReference) {\n          characterReferenceCharacters = characters\n          characterReference = namedReference\n        }\n      }\n\n      let diff = 1 + end - start\n      let reference = ''\n\n      if (!terminated && options.nonTerminated === false) {\n        // Empty.\n      } else if (!characters) {\n        // An empty (possible) reference is valid, unless it\u2019s numeric (thus an\n        // ampersand followed by an octothorp).\n        if (type !== 'named') {\n          warning(4 /* Empty (numeric) */, diff)\n        }\n      } else if (type === 'named') {\n        // An ampersand followed by anything unknown, and not terminated, is\n        // invalid.\n        if (terminated && !characterReference) {\n          warning(5 /* Unknown (named) */, 1)\n        } else {\n          // If there\u2019s something after an named reference which is not known,\n          // cap the reference.\n          if (characterReferenceCharacters !== characters) {\n            end = begin + characterReferenceCharacters.length\n            diff = 1 + end - begin\n            terminated = false\n          }\n\n          // If the reference is not terminated, warn.\n          if (!terminated) {\n            const reason = characterReferenceCharacters\n              ? 1 /* Non terminated (named) */\n              : 3 /* Empty (named) */\n\n            if (options.attribute) {\n              const following = value.charCodeAt(end)\n\n              if (following === 61 /* `=` */) {\n                warning(reason, diff)\n                characterReference = ''\n              } else if (isAlphanumerical(following)) {\n                characterReference = ''\n              } else {\n                warning(reason, diff)\n              }\n            } else {\n              warning(reason, diff)\n            }\n          }\n        }\n\n        reference = characterReference\n      } else {\n        if (!terminated) {\n          // All nonterminated numeric references are not rendered, and emit a\n          // warning.\n          warning(2 /* Non terminated (numeric) */, diff)\n        }\n\n        // When terminated and numerical, parse as either hexadecimal or\n        // decimal.\n        let referenceCode = Number.parseInt(\n          characters,\n          type === 'hexadecimal' ? 16 : 10\n        )\n\n        // Emit a warning when the parsed number is prohibited, and replace with\n        // replacement character.\n        if (prohibited(referenceCode)) {\n          warning(7 /* Prohibited (numeric) */, diff)\n          reference = fromCharCode(65533 /* `\uFFFD` */)\n        } else if (referenceCode in characterReferenceInvalid) {\n          // Emit a warning when the parsed number is disallowed, and replace by\n          // an alternative.\n          warning(6 /* Disallowed (numeric) */, diff)\n          reference = characterReferenceInvalid[referenceCode]\n        } else {\n          // Parse the number.\n          let output = ''\n\n          // Emit a warning when the parsed number should not be used.\n          if (disallowed(referenceCode)) {\n            warning(6 /* Disallowed (numeric) */, diff)\n          }\n\n          // Serialize the number.\n          if (referenceCode > 0xffff) {\n            referenceCode -= 0x10000\n            output += fromCharCode((referenceCode >>> (10 & 0x3ff)) | 0xd800)\n            referenceCode = 0xdc00 | (referenceCode & 0x3ff)\n          }\n\n          reference = output + fromCharCode(referenceCode)\n        }\n      }\n\n      // Found it!\n      // First eat the queued characters as normal text, then eat a reference.\n      if (reference) {\n        flush()\n\n        previous = now()\n        index = end - 1\n        column += end - start + 1\n        result.push(reference)\n        const next = now()\n        next.offset++\n\n        if (options.reference) {\n          options.reference.call(\n            options.referenceContext,\n            reference,\n            {start: previous, end: next},\n            value.slice(start - 1, end)\n          )\n        }\n\n        previous = next\n      } else {\n        // If we could not find a reference, queue the checked characters (as\n        // normal characters), and move the pointer to their end.\n        // This is possible because we can be certain neither newlines nor\n        // ampersands are included.\n        characters = value.slice(start - 1, end)\n        queue += characters\n        column += characters.length\n        index = end - 1\n      }\n    } else {\n      // Handle anything other than an ampersand, including newlines and EOF.\n      if (character === 10 /* `\\n` */) {\n        line++\n        lines++\n        column = 0\n      }\n\n      if (Number.isNaN(character)) {\n        flush()\n      } else {\n        queue += fromCharCode(character)\n        column++\n      }\n    }\n  }\n\n  // Return the reduced nodes.\n  return result.join('')\n\n  // Get current position.\n  function now() {\n    return {\n      line,\n      column,\n      offset: index + ((point ? point.offset : 0) || 0)\n    }\n  }\n\n  /**\n   * Handle the warning.\n   *\n   * @param {1|2|3|4|5|6|7} code\n   * @param {number} offset\n   */\n  function warning(code, offset) {\n    /** @type {ReturnType<now>} */\n    let position\n\n    if (options.warning) {\n      position = now()\n      position.column += offset\n      position.offset += offset\n\n      options.warning.call(\n        options.warningContext,\n        messages[code],\n        position,\n        code\n      )\n    }\n  }\n\n  /**\n   * Flush `queue` (normal text).\n   * Macro invoked before each reference and at the end of `value`.\n   * Does nothing when `queue` is empty.\n   */\n  function flush() {\n    if (queue) {\n      result.push(queue)\n\n      if (options.text) {\n        options.text.call(options.textContext, queue, {\n          start: previous,\n          end: now()\n        })\n      }\n\n      queue = ''\n    }\n  }\n}\n\n/**\n * Check if `character` is outside the permissible unicode range.\n *\n * @param {number} code\n * @returns {boolean}\n */\nfunction prohibited(code) {\n  return (code >= 0xd800 && code <= 0xdfff) || code > 0x10ffff\n}\n\n/**\n * Check if `character` is disallowed.\n *\n * @param {number} code\n * @returns {boolean}\n */\nfunction disallowed(code) {\n  return (\n    (code >= 0x0001 && code <= 0x0008) ||\n    code === 0x000b ||\n    (code >= 0x000d && code <= 0x001f) ||\n    (code >= 0x007f && code <= 0x009f) ||\n    (code >= 0xfdd0 && code <= 0xfdef) ||\n    (code & 0xffff) === 0xffff ||\n    (code & 0xffff) === 0xfffe\n  )\n}\n", "/**\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['quote'], null | undefined>}\n */\nexport function checkQuote(state) {\n  const marker = state.options.quote || '\"'\n\n  if (marker !== '\"' && marker !== \"'\") {\n    throw new Error(\n      'Cannot serialize title with `' +\n        marker +\n        '` for `options.quote`, expected `\"`, or `\\'`'\n    )\n  }\n\n  return marker\n}\n", "/**\n * @typedef {import('mdast').BlockContent} BlockContent\n * @typedef {import('mdast').DefinitionContent} DefinitionContent\n * @typedef {import('mdast').Paragraph} Paragraph\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-from-markdown').Token} Token\n *\n * @typedef {import('mdast-util-to-markdown').ConstructName} ConstructName\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').State} State\n *\n * @typedef {import('../index.js').LeafDirective} LeafDirective\n * @typedef {import('../index.js').TextDirective} TextDirective\n * @typedef {import('../index.js').Directive} Directive\n */\n\nimport {parseEntities} from 'parse-entities'\nimport {stringifyEntitiesLight} from 'stringify-entities'\nimport {visitParents} from 'unist-util-visit-parents'\nimport {containerFlow} from 'mdast-util-to-markdown/lib/util/container-flow.js'\nimport {containerPhrasing} from 'mdast-util-to-markdown/lib/util/container-phrasing.js'\nimport {checkQuote} from 'mdast-util-to-markdown/lib/util/check-quote.js'\nimport {track} from 'mdast-util-to-markdown/lib/util/track.js'\n\n// To do: next major: replace `containerFlow`, `containerPhrasing`, `track`\n// with `state` methods.\n// To do: next major: expose functions.\n\nconst own = {}.hasOwnProperty\n\nconst shortcut = /^[^\\t\\n\\r \"#'.<=>`}]+$/\n\nhandleDirective.peek = peekDirective\n\n/**\n * Extension for `mdast-util-from-markdown` to enable directives.\n *\n * @type {FromMarkdownExtension}\n */\nexport const directiveFromMarkdown = {\n  canContainEols: ['textDirective'],\n  enter: {\n    directiveContainer: enterContainer,\n    directiveContainerAttributes: enterAttributes,\n    directiveContainerLabel: enterContainerLabel,\n\n    directiveLeaf: enterLeaf,\n    directiveLeafAttributes: enterAttributes,\n\n    directiveText: enterText,\n    directiveTextAttributes: enterAttributes\n  },\n  exit: {\n    directiveContainer: exit,\n    directiveContainerAttributeClassValue: exitAttributeClassValue,\n    directiveContainerAttributeIdValue: exitAttributeIdValue,\n    directiveContainerAttributeName: exitAttributeName,\n    directiveContainerAttributeValue: exitAttributeValue,\n    directiveContainerAttributes: exitAttributes,\n    directiveContainerLabel: exitContainerLabel,\n    directiveContainerName: exitName,\n\n    directiveLeaf: exit,\n    directiveLeafAttributeClassValue: exitAttributeClassValue,\n    directiveLeafAttributeIdValue: exitAttributeIdValue,\n    directiveLeafAttributeName: exitAttributeName,\n    directiveLeafAttributeValue: exitAttributeValue,\n    directiveLeafAttributes: exitAttributes,\n    directiveLeafName: exitName,\n\n    directiveText: exit,\n    directiveTextAttributeClassValue: exitAttributeClassValue,\n    directiveTextAttributeIdValue: exitAttributeIdValue,\n    directiveTextAttributeName: exitAttributeName,\n    directiveTextAttributeValue: exitAttributeValue,\n    directiveTextAttributes: exitAttributes,\n    directiveTextName: exitName\n  }\n}\n\n/**\n * Extension for `mdast-util-to-markdown` to enable directives.\n *\n * @type {ToMarkdownExtension}\n */\nexport const directiveToMarkdown = {\n  unsafe: [\n    {\n      character: '\\r',\n      inConstruct: ['leafDirectiveLabel', 'containerDirectiveLabel']\n    },\n    {\n      character: '\\n',\n      inConstruct: ['leafDirectiveLabel', 'containerDirectiveLabel']\n    },\n    {\n      before: '[^:]',\n      character: ':',\n      after: '[A-Za-z]',\n      inConstruct: ['phrasing']\n    },\n    {atBreak: true, character: ':', after: ':'}\n  ],\n  handlers: {\n    containerDirective: handleDirective,\n    leafDirective: handleDirective,\n    textDirective: handleDirective\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterContainer(token) {\n  enter.call(this, 'containerDirective', token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterLeaf(token) {\n  enter.call(this, 'leafDirective', token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterText(token) {\n  enter.call(this, 'textDirective', token)\n}\n\n/**\n * @this {CompileContext}\n * @param {Directive['type']} type\n * @param {Token} token\n */\nfunction enter(type, token) {\n  this.enter({type, name: '', attributes: {}, children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @param {Token} token\n */\nfunction exitName(token) {\n  const node = /** @type {Directive} */ (this.stack[this.stack.length - 1])\n  node.name = this.sliceSerialize(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterContainerLabel(token) {\n  this.enter(\n    {type: 'paragraph', data: {directiveLabel: true}, children: []},\n    token\n  )\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitContainerLabel(token) {\n  this.exit(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterAttributes() {\n  this.setData('directiveAttributes', [])\n  this.buffer() // Capture EOLs\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitAttributeIdValue(token) {\n  const list = /** @type {Array<[string, string]>} */ (\n    this.getData('directiveAttributes')\n  )\n  list.push([\n    'id',\n    parseEntities(this.sliceSerialize(token), {\n      attribute: true\n    })\n  ])\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitAttributeClassValue(token) {\n  const list = /** @type {Array<[string, string]>} */ (\n    this.getData('directiveAttributes')\n  )\n  list.push([\n    'class',\n    parseEntities(this.sliceSerialize(token), {\n      attribute: true\n    })\n  ])\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitAttributeValue(token) {\n  const list = /** @type {Array<[string, string]>} */ (\n    this.getData('directiveAttributes')\n  )\n  list[list.length - 1][1] = parseEntities(this.sliceSerialize(token), {\n    attribute: true\n  })\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitAttributeName(token) {\n  const list = /** @type {Array<[string, string]>} */ (\n    this.getData('directiveAttributes')\n  )\n\n  // Attribute names in CommonMark are significantly limited, so character\n  // references can\u2019t exist.\n  list.push([this.sliceSerialize(token), ''])\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitAttributes() {\n  const list = /** @type {Array<[string, string]>} */ (\n    this.getData('directiveAttributes')\n  )\n  /** @type {Record<string, string>} */\n  const cleaned = {}\n  let index = -1\n\n  while (++index < list.length) {\n    const attribute = list[index]\n\n    if (attribute[0] === 'class' && cleaned.class) {\n      cleaned.class += ' ' + attribute[1]\n    } else {\n      cleaned[attribute[0]] = attribute[1]\n    }\n  }\n\n  this.setData('directiveAttributes')\n  this.resume() // Drop EOLs\n  const node = /** @type {Directive} */ (this.stack[this.stack.length - 1])\n  node.attributes = cleaned\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exit(token) {\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {Directive} node\n */\nfunction handleDirective(node, _, state, safeOptions) {\n  const tracker = track(safeOptions)\n  const sequence = fence(node)\n  const exit = state.enter(node.type)\n  let value = tracker.move(sequence + (node.name || ''))\n  /** @type {Paragraph | LeafDirective | TextDirective | undefined} */\n  let label\n\n  if (node.type === 'containerDirective') {\n    const head = (node.children || [])[0]\n    label = inlineDirectiveLabel(head) ? head : undefined\n  } else {\n    label = node\n  }\n\n  if (label && label.children && label.children.length > 0) {\n    const exit = state.enter('label')\n    /** @type {ConstructName} */\n    const labelType = `${node.type}Label`\n    const subexit = state.enter(labelType)\n    value += tracker.move('[')\n    value += tracker.move(\n      containerPhrasing(label, state, {\n        ...tracker.current(),\n        before: value,\n        after: ']'\n      })\n    )\n    value += tracker.move(']')\n    subexit()\n    exit()\n  }\n\n  value += tracker.move(attributes(node, state))\n\n  if (node.type === 'containerDirective') {\n    const head = (node.children || [])[0]\n    let shallow = node\n\n    if (inlineDirectiveLabel(head)) {\n      shallow = Object.assign({}, node, {children: node.children.slice(1)})\n    }\n\n    if (shallow && shallow.children && shallow.children.length > 0) {\n      value += tracker.move('\\n')\n      value += tracker.move(containerFlow(shallow, state, tracker.current()))\n    }\n\n    value += tracker.move('\\n' + sequence)\n  }\n\n  exit()\n  return value\n}\n\n/** @type {ToMarkdownHandle} */\nfunction peekDirective() {\n  return ':'\n}\n\n/**\n * @param {Directive} node\n * @param {State} state\n * @returns {string}\n */\nfunction attributes(node, state) {\n  const quote = checkQuote(state)\n  const subset = node.type === 'textDirective' ? [quote] : [quote, '\\n', '\\r']\n  const attrs = node.attributes || {}\n  /** @type {Array<string>} */\n  const values = []\n  /** @type {string | undefined} */\n  let classesFull\n  /** @type {string | undefined} */\n  let classes\n  /** @type {string | undefined} */\n  let id\n  /** @type {string} */\n  let key\n\n  for (key in attrs) {\n    if (\n      own.call(attrs, key) &&\n      attrs[key] !== undefined &&\n      attrs[key] !== null\n    ) {\n      const value = String(attrs[key])\n\n      if (key === 'id') {\n        id = shortcut.test(value) ? '#' + value : quoted('id', value)\n      } else if (key === 'class') {\n        const list = value.split(/[\\t\\n\\r ]+/g)\n        /** @type {Array<string>} */\n        const classesFullList = []\n        /** @type {Array<string>} */\n        const classesList = []\n        let index = -1\n\n        while (++index < list.length) {\n          ;(shortcut.test(list[index]) ? classesList : classesFullList).push(\n            list[index]\n          )\n        }\n\n        classesFull =\n          classesFullList.length > 0\n            ? quoted('class', classesFullList.join(' '))\n            : ''\n        classes = classesList.length > 0 ? '.' + classesList.join('.') : ''\n      } else {\n        values.push(quoted(key, value))\n      }\n    }\n  }\n\n  if (classesFull) {\n    values.unshift(classesFull)\n  }\n\n  if (classes) {\n    values.unshift(classes)\n  }\n\n  if (id) {\n    values.unshift(id)\n  }\n\n  return values.length > 0 ? '{' + values.join(' ') + '}' : ''\n\n  /**\n   * @param {string} key\n   * @param {string} value\n   * @returns {string}\n   */\n  function quoted(key, value) {\n    return (\n      key +\n      (value\n        ? '=' + quote + stringifyEntitiesLight(value, {subset}) + quote\n        : '')\n    )\n  }\n}\n\n/**\n * @param {BlockContent | DefinitionContent} node\n * @returns {node is Paragraph & {data: {directiveLabel: boolean}}}\n */\nfunction inlineDirectiveLabel(node) {\n  return Boolean(\n    node && node.type === 'paragraph' && node.data && node.data.directiveLabel\n  )\n}\n\n/**\n * @param {Directive} node\n * @returns {string}\n */\nfunction fence(node) {\n  let size = 0\n\n  if (node.type === 'containerDirective') {\n    visitParents(node, function (node, parents) {\n      if (node.type === 'containerDirective') {\n        let index = parents.length\n        let nesting = 0\n\n        while (index--) {\n          if (parents[index].type === 'containerDirective') {\n            nesting++\n          }\n        }\n\n        if (nesting > size) size = nesting\n      }\n    })\n    size += 3\n  } else if (node.type === 'leafDirective') {\n    size = 2\n  } else {\n    size = 1\n  }\n\n  return ':'.repeat(size)\n}\n", "/**\n * @typedef {import('mdast').Root} Root\n *\n * @typedef {import('mdast-util-directive')} DoNotTouchAsThisImportIncludesDirectivesInTree\n */\n\nimport {directive} from 'micromark-extension-directive'\nimport {directiveFromMarkdown, directiveToMarkdown} from 'mdast-util-directive'\n\n/**\n * Plugin to support the generic directives proposal (`:cite[smith04]`,\n * `::youtube[Video of a cat in a box]{v=01ab2cd3efg}`, and such).\n *\n * @type {import('unified').Plugin<void[], Root>}\n */\nexport default function remarkDirective() {\n  const data = this.data()\n\n  add('micromarkExtensions', directive())\n  add('fromMarkdownExtensions', directiveFromMarkdown)\n  add('toMarkdownExtensions', directiveToMarkdown)\n\n  /**\n   * @param {string} field\n   * @param {unknown} value\n   */\n  function add(field, value) {\n    const list = /** @type {unknown[]} */ (\n      // Other extensions\n      /* c8 ignore next 2 */\n      data[field] ? data[field] : (data[field] = [])\n    )\n\n    list.push(value)\n  }\n}\n", "import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst env = typeof self === 'object' ? self : globalThis;\n\nconst deserializer = ($, _) => {\n  const as = (out, index) => {\n    $.set(index, out);\n    return out;\n  };\n\n  const unpair = index => {\n    if ($.has(index))\n      return $.get(index);\n\n    const [type, value] = _[index];\n    switch (type) {\n      case PRIMITIVE:\n      case VOID:\n        return as(value, index);\n      case ARRAY: {\n        const arr = as([], index);\n        for (const index of value)\n          arr.push(unpair(index));\n        return arr;\n      }\n      case OBJECT: {\n        const object = as({}, index);\n        for (const [key, index] of value)\n          object[unpair(key)] = unpair(index);\n        return object;\n      }\n      case DATE:\n        return as(new Date(value), index);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as(new RegExp(source, flags), index);\n      }\n      case MAP: {\n        const map = as(new Map, index);\n        for (const [key, index] of value)\n          map.set(unpair(key), unpair(index));\n        return map;\n      }\n      case SET: {\n        const set = as(new Set, index);\n        for (const index of value)\n          set.add(unpair(index));\n        return set;\n      }\n      case ERROR: {\n        const {name, message} = value;\n        return as(new env[name](message), index);\n      }\n      case BIGINT:\n        return as(BigInt(value), index);\n      case 'BigInt':\n        return as(Object(BigInt(value)), index);\n    }\n    return as(new env[type](value), index);\n  };\n\n  return unpair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns a deserialized value from a serialized array of Records.\n * @param {Record[]} serialized a previously serialized value.\n * @returns {any}\n */\nexport const deserialize = serialized => deserializer(new Map, serialized)(0);\n", "import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst EMPTY = '';\n\nconst {toString} = {};\nconst {keys} = Object;\n\nconst typeOf = value => {\n  const type = typeof value;\n  if (type !== 'object' || !value)\n    return [PRIMITIVE, type];\n\n  const asString = toString.call(value).slice(8, -1);\n  switch (asString) {\n    case 'Array':\n      return [ARRAY, EMPTY];\n    case 'Object':\n      return [OBJECT, EMPTY];\n    case 'Date':\n      return [DATE, EMPTY];\n    case 'RegExp':\n      return [REGEXP, EMPTY];\n    case 'Map':\n      return [MAP, EMPTY];\n    case 'Set':\n      return [SET, EMPTY];\n  }\n\n  if (asString.includes('Array'))\n    return [ARRAY, asString];\n\n  if (asString.includes('Error'))\n    return [ERROR, asString];\n\n  return [OBJECT, asString];\n};\n\nconst shouldSkip = ([TYPE, type]) => (\n  TYPE === PRIMITIVE &&\n  (type === 'function' || type === 'symbol')\n);\n\nconst serializer = (strict, json, $, _) => {\n\n  const as = (out, value) => {\n    const index = _.push(out) - 1;\n    $.set(value, index);\n    return index;\n  };\n\n  const pair = value => {\n    if ($.has(value))\n      return $.get(value);\n\n    let [TYPE, type] = typeOf(value);\n    switch (TYPE) {\n      case PRIMITIVE: {\n        let entry = value;\n        switch (type) {\n          case 'bigint':\n            TYPE = BIGINT;\n            entry = value.toString();\n            break;\n          case 'function':\n          case 'symbol':\n            if (strict)\n              throw new TypeError('unable to serialize ' + type);\n            entry = null;\n            break;\n          case 'undefined':\n            return as([VOID], value);\n        }\n        return as([TYPE, entry], value);\n      }\n      case ARRAY: {\n        if (type)\n          return as([type, [...value]], value);\n  \n        const arr = [];\n        const index = as([TYPE, arr], value);\n        for (const entry of value)\n          arr.push(pair(entry));\n        return index;\n      }\n      case OBJECT: {\n        if (type) {\n          switch (type) {\n            case 'BigInt':\n              return as([type, value.toString()], value);\n            case 'Boolean':\n            case 'Number':\n            case 'String':\n              return as([type, value.valueOf()], value);\n          }\n        }\n\n        if (json && ('toJSON' in value))\n          return pair(value.toJSON());\n\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const key of keys(value)) {\n          if (strict || !shouldSkip(typeOf(value[key])))\n            entries.push([pair(key), pair(value[key])]);\n        }\n        return index;\n      }\n      case DATE:\n        return as([TYPE, value.toISOString()], value);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as([TYPE, {source, flags}], value);\n      }\n      case MAP: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const [key, entry] of value) {\n          if (strict || !(shouldSkip(typeOf(key)) || shouldSkip(typeOf(entry))))\n            entries.push([pair(key), pair(entry)]);\n        }\n        return index;\n      }\n      case SET: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const entry of value) {\n          if (strict || !shouldSkip(typeOf(entry)))\n            entries.push(pair(entry));\n        }\n        return index;\n      }\n    }\n\n    const {message} = value;\n    return as([TYPE, {name: type, message}], value);\n  };\n\n  return pair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} value a serializable value.\n * @param {{json?: boolean, lossy?: boolean}?} options an object with a `lossy` or `json` property that,\n *  if `true`, will not throw errors on incompatible types, and behave more\n *  like JSON stringify would behave. Symbol and Function will be discarded.\n * @returns {Record[]}\n */\n export const serialize = (value, {json, lossy} = {}) => {\n  const _ = [];\n  return serializer(!(json || lossy), !!json, new Map, _)(value), _;\n};\n", "import {deserialize} from './deserialize.js';\nimport {serialize} from './serialize.js';\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} any a serializable value.\n * @param {{transfer?: any[], json?: boolean, lossy?: boolean}?} options an object with\n * a transfer option (ignored when polyfilled) and/or non standard fields that\n * fallback to the polyfill if present.\n * @returns {Record[]}\n */\nexport default typeof structuredClone === \"function\" ?\n  /* c8 ignore start */\n  (any, options) => (\n    options && ('json' in options || 'lossy' in options) ?\n      deserialize(serialize(any, options)) : structuredClone(any)\n  ) :\n  (any, options) => deserialize(serialize(any, options));\n  /* c8 ignore stop */\n\nexport {deserialize, serialize};\n", "/**\n * Throw a given error.\n *\n * @param {Error|null|undefined} [error]\n *   Maybe error.\n * @returns {asserts error is null|undefined}\n */\nexport function bail(error) {\n  if (error) {\n    throw error\n  }\n}\n", "export default function isPlainObject(value) {\n\tif (typeof value !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\n}\n", "/**\n * @typedef {(error?: Error|null|undefined, ...output: Array<any>) => void} Callback\n * @typedef {(...input: Array<any>) => any} Middleware\n *\n * @typedef {(...input: Array<any>) => void} Run\n *   Call all middleware.\n * @typedef {(fn: Middleware) => Pipeline} Use\n *   Add `fn` (middleware) to the list.\n * @typedef {{run: Run, use: Use}} Pipeline\n *   Middleware.\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n */\nexport function trough() {\n  /** @type {Array<Middleware>} */\n  const fns = []\n  /** @type {Pipeline} */\n  const pipeline = {run, use}\n\n  return pipeline\n\n  /** @type {Run} */\n  function run(...values) {\n    let middlewareIndex = -1\n    /** @type {Callback} */\n    const callback = values.pop()\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback)\n    }\n\n    next(null, ...values)\n\n    /**\n     * Run the next `fn`, or we\u2019re done.\n     *\n     * @param {Error|null|undefined} error\n     * @param {Array<any>} output\n     */\n    function next(error, ...output) {\n      const fn = fns[++middlewareIndex]\n      let index = -1\n\n      if (error) {\n        callback(error)\n        return\n      }\n\n      // Copy non-nullish input into values.\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index]\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next)(...output)\n      } else {\n        callback(null, ...output)\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError(\n        'Expected `middelware` to be a function, not ' + middelware\n      )\n    }\n\n    fns.push(middelware)\n    return pipeline\n  }\n}\n\n/**\n * Wrap `middleware`.\n * Can be sync or async; return a promise, receive a callback, or return new\n * values and errors.\n *\n * @param {Middleware} middleware\n * @param {Callback} callback\n */\nexport function wrap(middleware, callback) {\n  /** @type {boolean} */\n  let called\n\n  return wrapped\n\n  /**\n   * Call `middleware`.\n   * @this {any}\n   * @param {Array<any>} parameters\n   * @returns {void}\n   */\n  function wrapped(...parameters) {\n    const fnExpectsCallback = middleware.length > parameters.length\n    /** @type {any} */\n    let result\n\n    if (fnExpectsCallback) {\n      parameters.push(done)\n    }\n\n    try {\n      result = middleware.apply(this, parameters)\n    } catch (error) {\n      const exception = /** @type {Error} */ (error)\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception\n      }\n\n      return done(exception)\n    }\n\n    if (!fnExpectsCallback) {\n      if (result instanceof Promise) {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   * @type {Callback}\n   */\n  function done(error, ...output) {\n    if (!called) {\n      called = true\n      callback(error, ...output)\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value)\n  }\n}\n", "/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n */\n\n/**\n * Serialize the positional info of a point, position (start and end points),\n * or node.\n *\n * @param {Node | NodeLike | Point | PointLike | Position | PositionLike | null | undefined} [value]\n *   Node, position, or point.\n * @returns {string}\n *   Pretty printed positional info of a node (`string`).\n *\n *   In the format of a range `ls:cs-le:ce` (when given `node` or `position`)\n *   or a point `l:c` (when given `point`), where `l` stands for line, `c` for\n *   column, `s` for `start`, and `e` for end.\n *   An empty string (`''`) is returned if the given value is neither `node`,\n *   `position`, nor `point`.\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point | PointLike | null | undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position | PositionLike | null | undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number | null | undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n", "/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n *\n * @typedef Options\n *   Configuration.\n * @property {Array<Node> | null | undefined} [ancestors]\n *   Stack of (inclusive) ancestor nodes surrounding the message (optional).\n * @property {Error | null | undefined} [cause]\n *   Original error cause of the message (optional).\n * @property {Point | Position | null | undefined} [place]\n *   Place of message (optional).\n * @property {string | null | undefined} [ruleId]\n *   Category of message (optional, example: `'my-rule'`).\n * @property {string | null | undefined} [source]\n *   Namespace of who sent the message (optional, example: `'my-package'`).\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\n/**\n * Message.\n */\nexport class VFileMessage extends Error {\n  /**\n   * Create a message for `reason`.\n   *\n   * > \uD83E\uDEA6 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Options | null | undefined} [options]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | Options | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns\n   *   Instance of `VFileMessage`.\n   */\n  // eslint-disable-next-line complexity\n  constructor(causeOrReason, optionsOrParentOrPlace, origin) {\n    super()\n\n    if (typeof optionsOrParentOrPlace === 'string') {\n      origin = optionsOrParentOrPlace\n      optionsOrParentOrPlace = undefined\n    }\n\n    /** @type {string} */\n    let reason = ''\n    /** @type {Options} */\n    let options = {}\n    let legacyCause = false\n\n    if (optionsOrParentOrPlace) {\n      // Point.\n      if (\n        'line' in optionsOrParentOrPlace &&\n        'column' in optionsOrParentOrPlace\n      ) {\n        options = {place: optionsOrParentOrPlace}\n      }\n      // Position.\n      else if (\n        'start' in optionsOrParentOrPlace &&\n        'end' in optionsOrParentOrPlace\n      ) {\n        options = {place: optionsOrParentOrPlace}\n      }\n      // Node.\n      else if ('type' in optionsOrParentOrPlace) {\n        options = {\n          ancestors: [optionsOrParentOrPlace],\n          place: optionsOrParentOrPlace.position\n        }\n      }\n      // Options.\n      else {\n        options = {...optionsOrParentOrPlace}\n      }\n    }\n\n    if (typeof causeOrReason === 'string') {\n      reason = causeOrReason\n    }\n    // Error.\n    else if (!options.cause && causeOrReason) {\n      legacyCause = true\n      reason = causeOrReason.message\n      options.cause = causeOrReason\n    }\n\n    if (!options.ruleId && !options.source && typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        options.ruleId = origin\n      } else {\n        options.source = origin.slice(0, index)\n        options.ruleId = origin.slice(index + 1)\n      }\n    }\n\n    if (!options.place && options.ancestors && options.ancestors) {\n      const parent = options.ancestors[options.ancestors.length - 1]\n\n      if (parent) {\n        options.place = parent.position\n      }\n    }\n\n    const start =\n      options.place && 'start' in options.place\n        ? options.place.start\n        : options.place\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Stack of ancestor nodes surrounding the message.\n     *\n     * @type {Array<Node> | undefined}\n     */\n    this.ancestors = options.ancestors || undefined\n\n    /**\n     * Original error cause of the message.\n     *\n     * @type {Error | undefined}\n     */\n    this.cause = options.cause || undefined\n\n    /**\n     * Starting column of message.\n     *\n     * @type {number | undefined}\n     */\n    this.column = start ? start.column : undefined\n\n    /**\n     * State of problem.\n     *\n     * * `true` \u2014 error, file not usable\n     * * `false` \u2014 warning, change may be needed\n     * * `undefined` \u2014 change likely not needed\n     *\n     * @type {boolean | null | undefined}\n     */\n    this.fatal = undefined\n\n    /**\n     * Path of a file (used throughout the `VFile` ecosystem).\n     *\n     * @type {string | undefined}\n     */\n    this.file\n\n    // Field from `Error`.\n    /**\n     * Reason for message.\n     *\n     * @type {string}\n     */\n    this.message = reason\n\n    /**\n     * Starting line of error.\n     *\n     * @type {number | undefined}\n     */\n    this.line = start ? start.line : undefined\n\n    // Field from `Error`.\n    /**\n     * Serialized positional info of message.\n     *\n     * On normal errors, this would be something like `ParseError`, buit in\n     * `VFile` messages we use this space to show where an error happened.\n     */\n    this.name = stringifyPosition(options.place) || '1:1'\n\n    /**\n     * Place of message.\n     *\n     * @type {Point | Position | undefined}\n     */\n    this.place = options.place || undefined\n\n    /**\n     * Reason for message, should use markdown.\n     *\n     * @type {string}\n     */\n    this.reason = this.message\n\n    /**\n     * Category of message (example: `'my-rule'`).\n     *\n     * @type {string | undefined}\n     */\n    this.ruleId = options.ruleId || undefined\n\n    /**\n     * Namespace of message (example: `'my-package'`).\n     *\n     * @type {string | undefined}\n     */\n    this.source = options.source || undefined\n\n    // Field from `Error`.\n    /**\n     * Stack of message.\n     *\n     * This is used by normal errors to show where something happened in\n     * programming code, irrelevant for `VFile` messages,\n     *\n     * @type {string}\n     */\n    this.stack =\n      legacyCause && options.cause && typeof options.cause.stack === 'string'\n        ? options.cause.stack\n        : ''\n\n    // The following fields are \u201Cwell known\u201D.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /**\n     * Specify the source value that\u2019s being reported, which is deemed\n     * incorrect.\n     *\n     * @type {string | undefined}\n     */\n    this.actual\n\n    /**\n     * Suggest acceptable values that can be used instead of `actual`.\n     *\n     * @type {Array<string> | undefined}\n     */\n    this.expected\n\n    /**\n     * Long form description of the message (you should use markdown).\n     *\n     * @type {string | undefined}\n     */\n    this.note\n\n    /**\n     * Link to docs for the message.\n     *\n     * > \uD83D\uDC49 **Note**: this must be an absolute URL that can be passed as `x`\n     * > to `new URL(x)`.\n     *\n     * @type {string | undefined}\n     */\n    this.url\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.column = undefined\nVFileMessage.prototype.line = undefined\nVFileMessage.prototype.ancestors = undefined\nVFileMessage.prototype.cause = undefined\nVFileMessage.prototype.fatal = undefined\nVFileMessage.prototype.place = undefined\nVFileMessage.prototype.ruleId = undefined\nVFileMessage.prototype.source = undefined\n", "// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node\u2019s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexport const path = {basename, dirname, extname, join, sep: '/'}\n\n/* eslint-disable max-depth, complexity */\n\n/**\n * Get the basename from a path.\n *\n * @param {string} path\n *   File path.\n * @param {string | null | undefined} [ext]\n *   Extension to strip.\n * @returns {string}\n *   Stem or basename.\n */\nfunction basename(path, ext) {\n  if (ext !== undefined && typeof ext !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  let start = 0\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let seenNonSlash\n\n  if (ext === undefined || ext.length === 0 || ext.length > path.length) {\n    while (index--) {\n      if (path.codePointAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (ext === path) {\n    return ''\n  }\n\n  let firstNonSlashEnd = -1\n  let extIndex = ext.length - 1\n\n  while (index--) {\n    if (path.codePointAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.codePointAt(index) === ext.codePointAt(extIndex--)) {\n          if (extIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\n/**\n * Get the dirname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\nfunction dirname(path) {\n  assertPath(path)\n\n  if (path.length === 0) {\n    return '.'\n  }\n\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.codePointAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.codePointAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.codePointAt(0) === 47 /* `/` */\n    ? '//'\n    : path.slice(0, end)\n}\n\n/**\n * Get an extname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   Extname.\n */\nfunction extname(path) {\n  assertPath(path)\n\n  let index = path.length\n\n  let end = -1\n  let startPart = 0\n  let startDot = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  let preDotState = 0\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  while (index--) {\n    const code = path.codePointAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\n/**\n * Join segments from a path.\n *\n * @param {Array<string>} segments\n *   Path segments.\n * @returns {string}\n *   File path.\n */\nfunction join(...segments) {\n  let index = -1\n  /** @type {string | undefined} */\n  let joined\n\n  while (++index < segments.length) {\n    assertPath(segments[index])\n\n    if (segments[index]) {\n      joined =\n        joined === undefined ? segments[index] : joined + '/' + segments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n/**\n * Normalize a basic file path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\n// Note: `normalize` is not exposed as `path.normalize`, so some code is\n// manually removed from it.\nfunction normalize(path) {\n  assertPath(path)\n\n  const absolute = path.codePointAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  let value = normalizeString(path, !absolute)\n\n  if (value.length === 0 && !absolute) {\n    value = '.'\n  }\n\n  if (value.length > 0 && path.codePointAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n/**\n * Resolve `.` and `..` elements in a path with directory names.\n *\n * @param {string} path\n *   File path.\n * @param {boolean} allowAboveRoot\n *   Whether `..` can move above root.\n * @returns {string}\n *   File path.\n */\nfunction normalizeString(path, allowAboveRoot) {\n  let result = ''\n  let lastSegmentLength = 0\n  let lastSlash = -1\n  let dots = 0\n  let index = -1\n  /** @type {number | undefined} */\n  let code\n  /** @type {number} */\n  let lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.codePointAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.codePointAt(result.length - 1) !== 46 /* `.` */ ||\n          result.codePointAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length > 0) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length > 0 ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length > 0) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\n/**\n * Make sure `path` is a string.\n *\n * @param {string} path\n *   File path.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n\n/* eslint-enable max-depth, complexity */\n", "// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don\u2019t think one tiny line of code can be copyrighted. \uD83D\uDE05\nexport const proc = {cwd}\n\nfunction cwd() {\n  return '/'\n}\n", "/**\n * Checks if a value has the shape of a WHATWG URL object.\n *\n * Using a symbol or instanceof would not be able to recognize URL objects\n * coming from other implementations (e.g. in Electron), so instead we are\n * checking some well known properties for a lack of a better test.\n *\n * We use `href` and `protocol` as they are the only properties that are\n * easy to retrieve and calculate due to the lazy nature of the getters.\n *\n * We check for auth attribute to distinguish legacy url instance with\n * WHATWG URL instance.\n *\n * @param {unknown} fileUrlOrPath\n *   File path or URL.\n * @returns {fileUrlOrPath is URL}\n *   Whether it\u2019s a URL.\n */\n// From: <https://github.com/nodejs/node/blob/6a3403c/lib/internal/url.js#L720>\nexport function isUrl(fileUrlOrPath) {\n  return Boolean(\n    fileUrlOrPath !== null &&\n      typeof fileUrlOrPath === 'object' &&\n      'href' in fileUrlOrPath &&\n      fileUrlOrPath.href &&\n      'protocol' in fileUrlOrPath &&\n      fileUrlOrPath.protocol &&\n      // @ts-expect-error: indexing is fine.\n      fileUrlOrPath.auth === undefined\n  )\n}\n", "import {isUrl} from './minurl.shared.js'\n\nexport {isUrl} from './minurl.shared.js'\n\n// See: <https://github.com/nodejs/node/blob/6a3403c/lib/internal/url.js>\n\n/**\n * @param {URL | string} path\n *   File URL.\n * @returns {string}\n *   File URL.\n */\nexport function urlToPath(path) {\n  if (typeof path === 'string') {\n    path = new URL(path)\n  } else if (!isUrl(path)) {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'The \"path\" argument must be of type string or an instance of URL. Received `' +\n        path +\n        '`'\n    )\n    error.code = 'ERR_INVALID_ARG_TYPE'\n    throw error\n  }\n\n  if (path.protocol !== 'file:') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError('The URL must be of scheme file')\n    error.code = 'ERR_INVALID_URL_SCHEME'\n    throw error\n  }\n\n  return getPathFromURLPosix(path)\n}\n\n/**\n * Get a path from a POSIX URL.\n *\n * @param {URL} url\n *   URL.\n * @returns {string}\n *   File path.\n */\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'File URL host must be \"localhost\" or empty on darwin'\n    )\n    error.code = 'ERR_INVALID_FILE_URL_HOST'\n    throw error\n  }\n\n  const pathname = url.pathname\n  let index = -1\n\n  while (++index < pathname.length) {\n    if (\n      pathname.codePointAt(index) === 37 /* `%` */ &&\n      pathname.codePointAt(index + 1) === 50 /* `2` */\n    ) {\n      const third = pathname.codePointAt(index + 2)\n      if (third === 70 /* `F` */ || third === 102 /* `f` */) {\n        /** @type {NodeJS.ErrnoException} */\n        const error = new TypeError(\n          'File URL path must not include encoded / characters'\n        )\n        error.code = 'ERR_INVALID_FILE_URL_PATH'\n        throw error\n      }\n    }\n  }\n\n  return decodeURIComponent(pathname)\n}\n", "/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n * @typedef {import('vfile-message').Options} MessageOptions\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Value} Value\n */\n\n/**\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n *\n * @typedef {Options | URL | VFile | Value} Compatible\n *   Things that can be passed to the constructor.\n *\n * @typedef VFileCoreOptions\n *   Set multiple values.\n * @property {string | null | undefined} [basename]\n *   Set `basename` (name).\n * @property {string | null | undefined} [cwd]\n *   Set `cwd` (working directory).\n * @property {Data | null | undefined} [data]\n *   Set `data` (associated info).\n * @property {string | null | undefined} [dirname]\n *   Set `dirname` (path w/o basename).\n * @property {string | null | undefined} [extname]\n *   Set `extname` (extension with dot).\n * @property {Array<string> | null | undefined} [history]\n *   Set `history` (paths the file moved between).\n * @property {URL | string | null | undefined} [path]\n *   Set `path` (current path).\n * @property {string | null | undefined} [stem]\n *   Set `stem` (name without extension).\n * @property {Value | null | undefined} [value]\n *   Set `value` (the contents of the file).\n *\n * @typedef Map\n *   Raw source map.\n *\n *   See:\n *   <https://github.com/mozilla/source-map/blob/60adcb0/source-map.d.ts#L15-L23>.\n * @property {number} version\n *   Which version of the source map spec this map is following.\n * @property {Array<string>} sources\n *   An array of URLs to the original source files.\n * @property {Array<string>} names\n *   An array of identifiers which can be referenced by individual mappings.\n * @property {string | undefined} [sourceRoot]\n *   The URL root from which all sources are relative.\n * @property {Array<string> | undefined} [sourcesContent]\n *   An array of contents of the original source files.\n * @property {string} mappings\n *   A string of base64 VLQs which contain the actual mappings.\n * @property {string} file\n *   The generated file this source map is associated with.\n *\n * @typedef {Record<string, unknown> & VFileCoreOptions} Options\n *   Configuration.\n *\n *   A bunch of keys that will be shallow copied over to the new file.\n *\n * @typedef {Record<string, unknown>} ReporterSettings\n *   Configuration for reporters.\n */\n\n/**\n * @template [Settings=ReporterSettings]\n *   Options type.\n * @callback Reporter\n *   Type for a reporter.\n * @param {Array<VFile>} files\n *   Files to report.\n * @param {Settings} options\n *   Configuration.\n * @returns {string}\n *   Report.\n */\n\nimport {VFileMessage} from 'vfile-message'\nimport {path} from 'vfile/do-not-use-conditional-minpath'\nimport {proc} from 'vfile/do-not-use-conditional-minproc'\nimport {urlToPath, isUrl} from 'vfile/do-not-use-conditional-minurl'\n\n/**\n * Order of setting (least specific to most), we need this because otherwise\n * `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n * stem can be set.\n */\nconst order = /** @type {const} */ ([\n  'history',\n  'path',\n  'basename',\n  'stem',\n  'extname',\n  'dirname'\n])\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * `options` is treated as:\n   *\n   * *   `string` or `Uint8Array` \u2014 `{value: options}`\n   * *   `URL` \u2014 `{path: options}`\n   * *   `VFile` \u2014 shallow copies its data over to the new file\n   * *   `object` \u2014 all fields are shallow copied over to the new file\n   *\n   * Path related fields are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * You cannot set `dirname` or `extname` without setting either `history`,\n   * `path`, `basename`, or `stem` too.\n   *\n   * @param {Compatible | null | undefined} [value]\n   *   File value.\n   * @returns\n   *   New instance.\n   */\n  constructor(value) {\n    /** @type {Options | VFile} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else if (typeof value === 'string' || isUint8Array(value)) {\n      options = {value}\n    } else {\n      options = value\n    }\n\n    /* eslint-disable no-unused-expressions */\n\n    /**\n     * Base of `path` (default: `process.cwd()` or `'/'` in browsers).\n     *\n     * @type {string}\n     */\n    this.cwd = proc.cwd()\n\n    /**\n     * Place to store custom info (default: `{}`).\n     *\n     * It\u2019s OK to store custom data directly on the file but moving it to\n     * `data` is recommended.\n     *\n     * @type {Data}\n     */\n    this.data = {}\n\n    /**\n     * List of file paths the file moved between.\n     *\n     * The first is the original path and the last is the current path.\n     *\n     * @type {Array<string>}\n     */\n    this.history = []\n\n    /**\n     * List of messages associated with the file.\n     *\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * Raw value.\n     *\n     * @type {Value}\n     */\n    this.value\n\n    // The below are non-standard, they are \u201Cwell-known\u201D.\n    // As in, used in several tools.\n    /**\n     * Source map.\n     *\n     * This type is equivalent to the `RawSourceMap` type from the `source-map`\n     * module.\n     *\n     * @type {Map | null | undefined}\n     */\n    this.map\n\n    /**\n     * Custom, non-string, compiled, representation.\n     *\n     * This is used by unified to store non-string results.\n     * One example is when turning markdown into React nodes.\n     *\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Whether a file was saved to disk.\n     *\n     * This is used by vfile reporters.\n     *\n     * @type {boolean}\n     */\n    this.stored\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const prop = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (\n        prop in options &&\n        options[prop] !== undefined &&\n        options[prop] !== null\n      ) {\n        // @ts-expect-error: TS doesn\u2019t understand basic reality.\n        this[prop] = prop === 'history' ? [...options[prop]] : options[prop]\n      }\n    }\n\n    /** @type {string} */\n    let prop\n\n    // Set non-path related properties.\n    for (prop in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(prop)) {\n        // @ts-expect-error: fine to set other things.\n        this[prop] = options[prop]\n      }\n    }\n  }\n\n  /**\n   * Get the basename (including extname) (example: `'index.min.js'`).\n   *\n   * @returns {string | undefined}\n   *   Basename.\n   */\n  get basename() {\n    return typeof this.path === 'string' ? path.basename(this.path) : undefined\n  }\n\n  /**\n   * Set basename (including extname) (`'index.min.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   *\n   * @param {string} basename\n   *   Basename.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = path.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Get the parent path (example: `'~'`).\n   *\n   * @returns {string | undefined}\n   *   Dirname.\n   */\n  get dirname() {\n    return typeof this.path === 'string' ? path.dirname(this.path) : undefined\n  }\n\n  /**\n   * Set the parent path (example: `'~'`).\n   *\n   * Cannot be set if there\u2019s no `path` yet.\n   *\n   * @param {string | undefined} dirname\n   *   Dirname.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname')\n    this.path = path.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Get the extname (including dot) (example: `'.js'`).\n   *\n   * @returns {string | undefined}\n   *   Extname.\n   */\n  get extname() {\n    return typeof this.path === 'string' ? path.extname(this.path) : undefined\n  }\n\n  /**\n   * Set the extname (including dot) (example: `'.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be set if there\u2019s no `path` yet.\n   *\n   * @param {string | undefined} extname\n   *   Extname.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.codePointAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = path.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Get the full path (example: `'~/index.min.js'`).\n   *\n   * @returns {string}\n   *   Path.\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set the full path (example: `'~/index.min.js'`).\n   *\n   * Cannot be nullified.\n   * You can set a file URL (a `URL` object with a `file:` protocol) which will\n   * be turned into a path with `url.fileURLToPath`.\n   *\n   * @param {URL | string} path\n   *   Path.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Get the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * @returns {string | undefined}\n   *   Stem.\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? path.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   *\n   * @param {string} stem\n   *   Stem.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = path.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  // Normal prototypal methods.\n  /**\n   * Create a fatal message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `true` (error; file not usable)\n   * and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > \uD83E\uDEA6 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {never}\n   *   Never.\n   * @throws {VFileMessage}\n   *   Message.\n   */\n  fail(causeOrReason, optionsOrParentOrPlace, origin) {\n    // @ts-expect-error: the overloads are fine.\n    const message = this.message(causeOrReason, optionsOrParentOrPlace, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n\n  /**\n   * Create an info message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `undefined` (info; change\n   * likely not needed) and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > \uD83E\uDEA6 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  info(causeOrReason, optionsOrParentOrPlace, origin) {\n    // @ts-expect-error: the overloads are fine.\n    const message = this.message(causeOrReason, optionsOrParentOrPlace, origin)\n\n    message.fatal = undefined\n\n    return message\n  }\n\n  /**\n   * Create a message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `false` (warning; change may be\n   * needed) and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > \uD83E\uDEA6 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  message(causeOrReason, optionsOrParentOrPlace, origin) {\n    const message = new VFileMessage(\n      // @ts-expect-error: the overloads are fine.\n      causeOrReason,\n      optionsOrParentOrPlace,\n      origin\n    )\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * > **Note**: which encodings are supported depends on the engine.\n   * > For info on Node.js, see:\n   * > <https://nodejs.org/api/util.html#whatwg-supported-encodings>.\n   *\n   * @param {string | null | undefined} [encoding='utf8']\n   *   Character encoding to understand `value` as when it\u2019s a `Uint8Array`\n   *   (default: `'utf-8'`).\n   * @returns {string}\n   *   Serialized file.\n   */\n  toString(encoding) {\n    if (this.value === undefined) {\n      return ''\n    }\n\n    if (typeof this.value === 'string') {\n      return this.value\n    }\n\n    const decoder = new TextDecoder(encoding || undefined)\n    return decoder.decode(this.value)\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string | null | undefined} part\n *   File path part.\n * @param {string} name\n *   Part name.\n * @returns {undefined}\n *   Nothing.\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(path.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + path.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string | undefined} part\n *   Thing.\n * @param {string} name\n *   Part name.\n * @returns {asserts part is string}\n *   Nothing.\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string | undefined} path\n *   Path.\n * @param {string} name\n *   Dependency name.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n\n/**\n * Assert `value` is an `Uint8Array`.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Uint8Array}\n *   Whether `value` is an `Uint8Array`.\n */\nfunction isUint8Array(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'byteLength' in value &&\n      'byteOffset' in value\n  )\n}\n", "export const CallableInstance =\n  /**\n   * @type {new <Parameters extends Array<unknown>, Result>(property: string | symbol) => (...parameters: Parameters) => Result}\n   */\n  (\n    /** @type {unknown} */\n    (\n      /**\n       * @this {Function}\n       * @param {string | symbol} property\n       * @returns {(...parameters: Array<unknown>) => unknown}\n       */\n      function (property) {\n        const self = this\n        const constr = self.constructor\n        const proto = /** @type {Record<string | symbol, Function>} */ (\n          // Prototypes do exist.\n          // type-coverage:ignore-next-line\n          constr.prototype\n        )\n        const func = proto[property]\n        /** @type {(...parameters: Array<unknown>) => unknown} */\n        const apply = function () {\n          return func.apply(apply, arguments)\n        }\n\n        Object.setPrototypeOf(apply, proto)\n\n        const names = Object.getOwnPropertyNames(func)\n\n        for (const p of names) {\n          const descriptor = Object.getOwnPropertyDescriptor(func, p)\n          if (descriptor) Object.defineProperty(apply, p, descriptor)\n        }\n\n        return apply\n      }\n    )\n  )\n", "/**\n * @typedef {import('trough').Pipeline} Pipeline\n *\n * @typedef {import('unist').Node} Node\n *\n * @typedef {import('vfile').Compatible} Compatible\n * @typedef {import('vfile').Value} Value\n *\n * @typedef {import('../index.js').CompileResultMap} CompileResultMap\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Settings} Settings\n */\n\n/**\n * @typedef {CompileResultMap[keyof CompileResultMap]} CompileResults\n *   Acceptable results from compilers.\n *\n *   To register custom results, add them to\n *   {@link CompileResultMap `CompileResultMap`}.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The node that the compiler receives (default: `Node`).\n * @template {CompileResults} [Result=CompileResults]\n *   The thing that the compiler yields (default: `CompileResults`).\n * @callback Compiler\n *   A **compiler** handles the compiling of a syntax tree to something else\n *   (in most cases, text) (TypeScript type).\n *\n *   It is used in the stringify phase and called with a {@link Node `Node`}\n *   and {@link VFile `VFile`} representation of the document to compile.\n *   It should return the textual representation of the given tree (typically\n *   `string`).\n *\n *   > \uD83D\uDC49 **Note**: unified typically compiles by serializing: most compilers\n *   > return `string` (or `Uint8Array`).\n *   > Some compilers, such as the one configured with\n *   > [`rehype-react`][rehype-react], return other values (in this case, a\n *   > React tree).\n *   > If you\u2019re using a compiler that doesn\u2019t serialize, expect different\n *   > result values.\n *   >\n *   > To register custom results in TypeScript, add them to\n *   > {@link CompileResultMap `CompileResultMap`}.\n *\n *   [rehype-react]: https://github.com/rehypejs/rehype-react\n * @param {Tree} tree\n *   Tree to compile.\n * @param {VFile} file\n *   File associated with `tree`.\n * @returns {Result}\n *   New content: compiled text (`string` or `Uint8Array`, for `file.value`) or\n *   something else (for `file.result`).\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The node that the parser yields (default: `Node`)\n * @callback Parser\n *   A **parser** handles the parsing of text to a syntax tree.\n *\n *   It is used in the parse phase and is called with a `string` and\n *   {@link VFile `VFile`} of the document to parse.\n *   It must return the syntax tree representation of the given file\n *   ({@link Node `Node`}).\n * @param {string} document\n *   Document to parse.\n * @param {VFile} file\n *   File associated with `document`.\n * @returns {Tree}\n *   Node representing the given file.\n */\n\n/**\n * @typedef {(\n *   Plugin<Array<any>, any, any> |\n *   PluginTuple<Array<any>, any, any> |\n *   Preset\n * )} Pluggable\n *   Union of the different ways to add plugins and settings.\n */\n\n/**\n * @typedef {Array<Pluggable>} PluggableList\n *   List of plugins and presets.\n */\n\n// Note: we can\u2019t use `callback` yet as it messes up `this`:\n//  <https://github.com/microsoft/TypeScript/issues/55197>.\n/**\n * @template {Array<unknown>} [PluginParameters=[]]\n *   Arguments passed to the plugin (default: `[]`, the empty tuple).\n * @template {Node | string | undefined} [Input=Node]\n *   Value that is expected as input (default: `Node`).\n *\n *   *   If the plugin returns a {@link Transformer `Transformer`}, this\n *       should be the node it expects.\n *   *   If the plugin sets a {@link Parser `Parser`}, this should be\n *       `string`.\n *   *   If the plugin sets a {@link Compiler `Compiler`}, this should be the\n *       node it expects.\n * @template [Output=Input]\n *   Value that is yielded as output (default: `Input`).\n *\n *   *   If the plugin returns a {@link Transformer `Transformer`}, this\n *       should be the node that that yields.\n *   *   If the plugin sets a {@link Parser `Parser`}, this should be the\n *       node that it yields.\n *   *   If the plugin sets a {@link Compiler `Compiler`}, this should be\n *       result it yields.\n * @typedef {(\n *   (this: Processor, ...parameters: PluginParameters) =>\n *     Input extends string ? // Parser.\n *        Output extends Node | undefined ? undefined | void : never :\n *     Output extends CompileResults ? // Compiler.\n *        Input extends Node | undefined ? undefined | void : never :\n *     Transformer<\n *       Input extends Node ? Input : Node,\n *       Output extends Node ? Output : Node\n *     > | undefined | void\n * )} Plugin\n *   Single plugin.\n *\n *   Plugins configure the processors they are applied on in the following\n *   ways:\n *\n *   *   they change the processor, such as the parser, the compiler, or by\n *       configuring data\n *   *   they specify how to handle trees and files\n *\n *   In practice, they are functions that can receive options and configure the\n *   processor (`this`).\n *\n *   > \uD83D\uDC49 **Note**: plugins are called when the processor is *frozen*, not when\n *   > they are applied.\n */\n\n/**\n * Tuple of a plugin and its configuration.\n *\n * The first item is a plugin, the rest are its parameters.\n *\n * @template {Array<unknown>} [TupleParameters=[]]\n *   Arguments passed to the plugin (default: `[]`, the empty tuple).\n * @template {Node | string | undefined} [Input=undefined]\n *   Value that is expected as input (optional).\n *\n *   *   If the plugin returns a {@link Transformer `Transformer`}, this\n *       should be the node it expects.\n *   *   If the plugin sets a {@link Parser `Parser`}, this should be\n *       `string`.\n *   *   If the plugin sets a {@link Compiler `Compiler`}, this should be the\n *       node it expects.\n * @template [Output=undefined] (optional).\n *   Value that is yielded as output.\n *\n *   *   If the plugin returns a {@link Transformer `Transformer`}, this\n *       should be the node that that yields.\n *   *   If the plugin sets a {@link Parser `Parser`}, this should be the\n *       node that it yields.\n *   *   If the plugin sets a {@link Compiler `Compiler`}, this should be\n *       result it yields.\n * @typedef {(\n *   [\n *     plugin: Plugin<TupleParameters, Input, Output>,\n *     ...parameters: TupleParameters\n *   ]\n * )} PluginTuple\n */\n\n/**\n * @typedef Preset\n *   Sharable configuration.\n *\n *   They can contain plugins and settings.\n * @property {PluggableList | undefined} [plugins]\n *   List of plugins and presets (optional).\n * @property {Settings | undefined} [settings]\n *   Shared settings for parsers and compilers (optional).\n */\n\n/**\n * @template {VFile} [File=VFile]\n *   The file that the callback receives (default: `VFile`).\n * @callback ProcessCallback\n *   Callback called when the process is done.\n *\n *   Called with either an error or a result.\n * @param {Error | undefined} [error]\n *   Fatal error (optional).\n * @param {File | undefined} [file]\n *   Processed file (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The tree that the callback receives (default: `Node`).\n * @callback RunCallback\n *   Callback called when transformers are done.\n *\n *   Called with either an error or results.\n * @param {Error | undefined} [error]\n *   Fatal error (optional).\n * @param {Tree | undefined} [tree]\n *   Transformed tree (optional).\n * @param {VFile | undefined} [file]\n *   File (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Output=Node]\n *   Node type that the transformer yields (default: `Node`).\n * @callback TransformCallback\n *   Callback passed to transforms.\n *\n *   If the signature of a `transformer` accepts a third argument, the\n *   transformer may perform asynchronous operations, and must call it.\n * @param {Error | undefined} [error]\n *   Fatal error to stop the process (optional).\n * @param {Output | undefined} [tree]\n *   New, changed, tree (optional).\n * @param {VFile | undefined} [file]\n *   New, changed, file (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Input=Node]\n *   Node type that the transformer expects (default: `Node`).\n * @template {Node} [Output=Input]\n *   Node type that the transformer yields (default: `Input`).\n * @callback Transformer\n *   Transformers handle syntax trees and files.\n *\n *   They are functions that are called each time a syntax tree and file are\n *   passed through the run phase.\n *   When an error occurs in them (either because it\u2019s thrown, returned,\n *   rejected, or passed to `next`), the process stops.\n *\n *   The run phase is handled by [`trough`][trough], see its documentation for\n *   the exact semantics of these functions.\n *\n *   > \uD83D\uDC49 **Note**: you should likely ignore `next`: don\u2019t accept it.\n *   > it supports callback-style async work.\n *   > But promises are likely easier to reason about.\n *\n *   [trough]: https://github.com/wooorm/trough#function-fninput-next\n * @param {Input} tree\n *   Tree to handle.\n * @param {VFile} file\n *   File to handle.\n * @param {TransformCallback<Output>} next\n *   Callback.\n * @returns {(\n *   Promise<Output | undefined | void> |\n *   Promise<never> | // For some reason this is needed separately.\n *   Output |\n *   Error |\n *   undefined |\n *   void\n * )}\n *   If you accept `next`, nothing.\n *   Otherwise:\n *\n *   *   `Error` \u2014 fatal error to stop the process\n *   *   `Promise<undefined>` or `undefined` \u2014 the next transformer keeps using\n *       same tree\n *   *   `Promise<Node>` or `Node` \u2014 new, changed, tree\n */\n\n/**\n * @template {Node | undefined} ParseTree\n *   Output of `parse`.\n * @template {Node | undefined} HeadTree\n *   Input for `run`.\n * @template {Node | undefined} TailTree\n *   Output for `run`.\n * @template {Node | undefined} CompileTree\n *   Input of `stringify`.\n * @template {CompileResults | undefined} CompileResult\n *   Output of `stringify`.\n * @template {Node | string | undefined} Input\n *   Input of plugin.\n * @template Output\n *   Output of plugin (optional).\n * @typedef {(\n *   Input extends string\n *     ? Output extends Node | undefined\n *       ? // Parser.\n *         Processor<\n *           Output extends undefined ? ParseTree : Output,\n *           HeadTree,\n *           TailTree,\n *           CompileTree,\n *           CompileResult\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : Output extends CompileResults\n *     ? Input extends Node | undefined\n *       ? // Compiler.\n *         Processor<\n *           ParseTree,\n *           HeadTree,\n *           TailTree,\n *           Input extends undefined ? CompileTree : Input,\n *           Output extends undefined ? CompileResult : Output\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : Input extends Node | undefined\n *     ? Output extends Node | undefined\n *       ? // Transform.\n *         Processor<\n *           ParseTree,\n *           HeadTree extends undefined ? Input : HeadTree,\n *           Output extends undefined ? TailTree : Output,\n *           CompileTree,\n *           CompileResult\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : // Unknown.\n *       Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n * )} UsePlugin\n *   Create a processor based on the input/output of a {@link Plugin plugin}.\n */\n\n/**\n * @template {CompileResults | undefined} Result\n *   Node type that the transformer yields.\n * @typedef {(\n *   Result extends Value | undefined ?\n *     VFile :\n *     VFile & {result: Result}\n *   )} VFileWithOutput\n *   Type to generate a {@link VFile `VFile`} corresponding to a compiler result.\n *\n *   If a result that is not acceptable on a `VFile` is used, that will\n *   be stored on the `result` field of {@link VFile `VFile`}.\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {bail} from 'bail'\nimport {ok as assert} from 'devlop'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\nimport {CallableInstance} from './callable-instance.js'\n\n// To do: next major: drop `Compiler`, `Parser`: prefer lowercase.\n\n// To do: we could start yielding `never` in TS when a parser is missing and\n// `parse` is called.\n// Currently, we allow directly setting `processor.parser`, which is untyped.\n\nconst own = {}.hasOwnProperty\n\n/**\n * @template {Node | undefined} [ParseTree=undefined]\n *   Output of `parse` (optional).\n * @template {Node | undefined} [HeadTree=undefined]\n *   Input for `run` (optional).\n * @template {Node | undefined} [TailTree=undefined]\n *   Output for `run` (optional).\n * @template {Node | undefined} [CompileTree=undefined]\n *   Input of `stringify` (optional).\n * @template {CompileResults | undefined} [CompileResult=undefined]\n *   Output of `stringify` (optional).\n * @extends {CallableInstance<[], Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>>}\n */\nexport class Processor extends CallableInstance {\n  /**\n   * Create a processor.\n   */\n  constructor() {\n    // If `Processor()` is called (w/o new), `copy` is called instead.\n    super('copy')\n\n    /**\n     * Compiler to use (deprecated).\n     *\n     * @deprecated\n     *   Use `compiler` instead.\n     * @type {(\n     *   Compiler<\n     *     CompileTree extends undefined ? Node : CompileTree,\n     *     CompileResult extends undefined ? CompileResults : CompileResult\n     *   > |\n     *   undefined\n     * )}\n     */\n    this.Compiler = undefined\n\n    /**\n     * Parser to use (deprecated).\n     *\n     * @deprecated\n     *   Use `parser` instead.\n     * @type {(\n     *   Parser<ParseTree extends undefined ? Node : ParseTree> |\n     *   undefined\n     * )}\n     */\n    this.Parser = undefined\n\n    // Note: the following fields are considered private.\n    // However, they are needed for tests, and TSC generates an untyped\n    // `private freezeIndex` field for, which trips `type-coverage` up.\n    // Instead, we use `@deprecated` to visualize that they shouldn\u2019t be used.\n    /**\n     * Internal list of configured plugins.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Array<PluginTuple<Array<unknown>>>}\n     */\n    this.attachers = []\n\n    /**\n     * Compiler to use.\n     *\n     * @type {(\n     *   Compiler<\n     *     CompileTree extends undefined ? Node : CompileTree,\n     *     CompileResult extends undefined ? CompileResults : CompileResult\n     *   > |\n     *   undefined\n     * )}\n     */\n    this.compiler = undefined\n\n    /**\n     * Internal state to track where we are while freezing.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {number}\n     */\n    this.freezeIndex = -1\n\n    /**\n     * Internal state to track whether we\u2019re frozen.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {boolean | undefined}\n     */\n    this.frozen = undefined\n\n    /**\n     * Internal state.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Data}\n     */\n    this.namespace = {}\n\n    /**\n     * Parser to use.\n     *\n     * @type {(\n     *   Parser<ParseTree extends undefined ? Node : ParseTree> |\n     *   undefined\n     * )}\n     */\n    this.parser = undefined\n\n    /**\n     * Internal list of configured transformers.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Pipeline}\n     */\n    this.transformers = trough()\n  }\n\n  /**\n   * Copy a processor.\n   *\n   * @deprecated\n   *   This is a private internal method and should not be used.\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   New *unfrozen* processor ({@link Processor `Processor`}) that is\n   *   configured to work the same as its ancestor.\n   *   When the descendant processor is configured in the future it does not\n   *   affect the ancestral processor.\n   */\n  copy() {\n    // Cast as the type parameters will be the same after attaching.\n    const destination =\n      /** @type {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>} */ (\n        new Processor()\n      )\n    let index = -1\n\n    while (++index < this.attachers.length) {\n      const attacher = this.attachers[index]\n      destination.use(...attacher)\n    }\n\n    destination.data(structuredClone(this.namespace))\n\n    return destination\n  }\n\n  /**\n   * Configure the processor with info available to all plugins.\n   * Information is stored in an object.\n   *\n   * Typically, options can be given to a specific plugin, but sometimes it\n   * makes sense to have information shared with several plugins.\n   * For example, a list of HTML elements that are self-closing, which is\n   * needed during all phases.\n   *\n   * > \uD83D\uDC49 **Note**: setting information cannot occur on *frozen* processors.\n   * > Call the processor first to create a new unfrozen processor.\n   *\n   * > \uD83D\uDC49 **Note**: to register custom data in TypeScript, augment the\n   * > {@link Data `Data`} interface.\n   *\n   * @example\n   *   This example show how to get and set info:\n   *\n   *   ```js\n   *   import {unified} from 'unified'\n   *\n   *   const processor = unified().data('alpha', 'bravo')\n   *\n   *   processor.data('alpha') // => 'bravo'\n   *\n   *   processor.data() // => {alpha: 'bravo'}\n   *\n   *   processor.data({charlie: 'delta'})\n   *\n   *   processor.data() // => {charlie: 'delta'}\n   *   ```\n   *\n   * @template {keyof Data} Key\n   *\n   * @overload\n   * @returns {Data}\n   *\n   * @overload\n   * @param {Data} dataset\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {Key} key\n   * @returns {Data[Key]}\n   *\n   * @overload\n   * @param {Key} key\n   * @param {Data[Key]} value\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @param {Data | Key} [key]\n   *   Key to get or set, or entire dataset to set, or nothing to get the\n   *   entire dataset (optional).\n   * @param {Data[Key]} [value]\n   *   Value to set (optional).\n   * @returns {unknown}\n   *   The current processor when setting, the value at `key` when getting, or\n   *   the entire dataset when getting without key.\n   */\n  data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', this.frozen)\n        this.namespace[key] = value\n        return this\n      }\n\n      // Get `key`.\n      return (own.call(this.namespace, key) && this.namespace[key]) || undefined\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', this.frozen)\n      this.namespace = key\n      return this\n    }\n\n    // Get space.\n    return this.namespace\n  }\n\n  /**\n   * Freeze a processor.\n   *\n   * Frozen processors are meant to be extended and not to be configured\n   * directly.\n   *\n   * When a processor is frozen it cannot be unfrozen.\n   * New processors working the same way can be created by calling the\n   * processor.\n   *\n   * It\u2019s possible to freeze processors explicitly by calling `.freeze()`.\n   * Processors freeze automatically when `.parse()`, `.run()`, `.runSync()`,\n   * `.stringify()`, `.process()`, or `.processSync()` are called.\n   *\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   The current processor.\n   */\n  freeze() {\n    if (this.frozen) {\n      return this\n    }\n\n    // Cast so that we can type plugins easier.\n    // Plugins are supposed to be usable on different processors, not just on\n    // this exact processor.\n    const self = /** @type {Processor} */ (/** @type {unknown} */ (this))\n\n    while (++this.freezeIndex < this.attachers.length) {\n      const [attacher, ...options] = this.attachers[this.freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[0] = undefined\n      }\n\n      const transformer = attacher.call(self, ...options)\n\n      if (typeof transformer === 'function') {\n        this.transformers.use(transformer)\n      }\n    }\n\n    this.frozen = true\n    this.freezeIndex = Number.POSITIVE_INFINITY\n\n    return this\n  }\n\n  /**\n   * Parse text to a syntax tree.\n   *\n   * > \uD83D\uDC49 **Note**: `parse` freezes the processor if not already *frozen*.\n   *\n   * > \uD83D\uDC49 **Note**: `parse` performs the parse phase, not the run phase or other\n   * > phases.\n   *\n   * @param {Compatible | undefined} [file]\n   *   file to parse (optional); typically `string` or `VFile`; any value\n   *   accepted as `x` in `new VFile(x)`.\n   * @returns {ParseTree extends undefined ? Node : ParseTree}\n   *   Syntax tree representing `file`.\n   */\n  parse(file) {\n    this.freeze()\n    const realFile = vfile(file)\n    const parser = this.parser || this.Parser\n    assertParser('parse', parser)\n    return parser(String(realFile), realFile)\n  }\n\n  /**\n   * Process the given file as configured on the processor.\n   *\n   * > \uD83D\uDC49 **Note**: `process` freezes the processor if not already *frozen*.\n   *\n   * > \uD83D\uDC49 **Note**: `process` performs the parse, run, and stringify phases.\n   *\n   * @overload\n   * @param {Compatible | undefined} file\n   * @param {ProcessCallback<VFileWithOutput<CompileResult>>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {Compatible | undefined} [file]\n   * @returns {Promise<VFileWithOutput<CompileResult>>}\n   *\n   * @param {Compatible | undefined} [file]\n   *   File (optional); typically `string` or `VFile`]; any value accepted as\n   *   `x` in `new VFile(x)`.\n   * @param {ProcessCallback<VFileWithOutput<CompileResult>> | undefined} [done]\n   *   Callback (optional).\n   * @returns {Promise<VFile> | undefined}\n   *   Nothing if `done` is given.\n   *   Otherwise a promise, rejected with a fatal error or resolved with the\n   *   processed file.\n   *\n   *   The parsed, transformed, and compiled value is available at\n   *   `file.value` (see note).\n   *\n   *   > \uD83D\uDC49 **Note**: unified typically compiles by serializing: most\n   *   > compilers return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you\u2019re using a compiler that doesn\u2019t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@link CompileResultMap `CompileResultMap`}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  process(file, done) {\n    const self = this\n\n    this.freeze()\n    assertParser('process', this.parser || this.Parser)\n    assertCompiler('process', this.compiler || this.Compiler)\n\n    return done ? executor(undefined, done) : new Promise(executor)\n\n    // Note: `void`s needed for TS.\n    /**\n     * @param {((file: VFileWithOutput<CompileResult>) => undefined | void) | undefined} resolve\n     * @param {(error: Error | undefined) => undefined | void} reject\n     * @returns {undefined}\n     */\n    function executor(resolve, reject) {\n      const realFile = vfile(file)\n      // Assume `ParseTree` (the result of the parser) matches `HeadTree` (the\n      // input of the first transform).\n      const parseTree =\n        /** @type {HeadTree extends undefined ? Node : HeadTree} */ (\n          /** @type {unknown} */ (self.parse(realFile))\n        )\n\n      self.run(parseTree, realFile, function (error, tree, file) {\n        if (error || !tree || !file) {\n          return realDone(error)\n        }\n\n        // Assume `TailTree` (the output of the last transform) matches\n        // `CompileTree` (the input of the compiler).\n        const compileTree =\n          /** @type {CompileTree extends undefined ? Node : CompileTree} */ (\n            /** @type {unknown} */ (tree)\n          )\n\n        const compileResult = self.stringify(compileTree, file)\n\n        if (looksLikeAValue(compileResult)) {\n          file.value = compileResult\n        } else {\n          file.result = compileResult\n        }\n\n        realDone(error, /** @type {VFileWithOutput<CompileResult>} */ (file))\n      })\n\n      /**\n       * @param {Error | undefined} error\n       * @param {VFileWithOutput<CompileResult> | undefined} [file]\n       * @returns {undefined}\n       */\n      function realDone(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          assert(done, '`done` is defined if `resolve` is not')\n          done(undefined, file)\n        }\n      }\n    }\n  }\n\n  /**\n   * Process the given file as configured on the processor.\n   *\n   * An error is thrown if asynchronous transforms are configured.\n   *\n   * > \uD83D\uDC49 **Note**: `processSync` freezes the processor if not already *frozen*.\n   *\n   * > \uD83D\uDC49 **Note**: `processSync` performs the parse, run, and stringify phases.\n   *\n   * @param {Compatible | undefined} [file]\n   *   File (optional); typically `string` or `VFile`; any value accepted as\n   *   `x` in `new VFile(x)`.\n   * @returns {VFileWithOutput<CompileResult>}\n   *   The processed file.\n   *\n   *   The parsed, transformed, and compiled value is available at\n   *   `file.value` (see note).\n   *\n   *   > \uD83D\uDC49 **Note**: unified typically compiles by serializing: most\n   *   > compilers return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you\u2019re using a compiler that doesn\u2019t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@link CompileResultMap `CompileResultMap`}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  processSync(file) {\n    /** @type {boolean} */\n    let complete = false\n    /** @type {VFileWithOutput<CompileResult> | undefined} */\n    let result\n\n    this.freeze()\n    assertParser('processSync', this.parser || this.Parser)\n    assertCompiler('processSync', this.compiler || this.Compiler)\n\n    this.process(file, realDone)\n    assertDone('processSync', 'process', complete)\n    assert(result, 'we either bailed on an error or have a tree')\n\n    return result\n\n    /**\n     * @type {ProcessCallback<VFileWithOutput<CompileResult>>}\n     */\n    function realDone(error, file) {\n      complete = true\n      bail(error)\n      result = file\n    }\n  }\n\n  /**\n   * Run *transformers* on a syntax tree.\n   *\n   * > \uD83D\uDC49 **Note**: `run` freezes the processor if not already *frozen*.\n   *\n   * > \uD83D\uDC49 **Note**: `run` performs the run phase, not other phases.\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {Compatible | undefined} file\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {Compatible | undefined} [file]\n   * @returns {Promise<TailTree extends undefined ? Node : TailTree>}\n   *\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   *   Tree to transform and inspect.\n   * @param {(\n   *   RunCallback<TailTree extends undefined ? Node : TailTree> |\n   *   Compatible\n   * )} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} [done]\n   *   Callback (optional).\n   * @returns {Promise<TailTree extends undefined ? Node : TailTree> | undefined}\n   *   Nothing if `done` is given.\n   *   Otherwise, a promise rejected with a fatal error or resolved with the\n   *   transformed tree.\n   */\n  run(tree, file, done) {\n    assertNode(tree)\n    this.freeze()\n\n    const transformers = this.transformers\n\n    if (!done && typeof file === 'function') {\n      done = file\n      file = undefined\n    }\n\n    return done ? executor(undefined, done) : new Promise(executor)\n\n    // Note: `void`s needed for TS.\n    /**\n     * @param {(\n     *   ((tree: TailTree extends undefined ? Node : TailTree) => undefined | void) |\n     *   undefined\n     * )} resolve\n     * @param {(error: Error) => undefined | void} reject\n     * @returns {undefined}\n     */\n    function executor(resolve, reject) {\n      assert(\n        typeof file !== 'function',\n        '`file` can\u2019t be a `done` anymore, we checked'\n      )\n      const realFile = vfile(file)\n      transformers.run(tree, realFile, realDone)\n\n      /**\n       * @param {Error | undefined} error\n       * @param {Node} outputTree\n       * @param {VFile} file\n       * @returns {undefined}\n       */\n      function realDone(error, outputTree, file) {\n        const resultingTree =\n          /** @type {TailTree extends undefined ? Node : TailTree} */ (\n            outputTree || tree\n          )\n\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(resultingTree)\n        } else {\n          assert(done, '`done` is defined if `resolve` is not')\n          done(undefined, resultingTree, file)\n        }\n      }\n    }\n  }\n\n  /**\n   * Run *transformers* on a syntax tree.\n   *\n   * An error is thrown if asynchronous transforms are configured.\n   *\n   * > \uD83D\uDC49 **Note**: `runSync` freezes the processor if not already *frozen*.\n   *\n   * > \uD83D\uDC49 **Note**: `runSync` performs the run phase, not other phases.\n   *\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   *   Tree to transform and inspect.\n   * @param {Compatible | undefined} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @returns {TailTree extends undefined ? Node : TailTree}\n   *   Transformed tree.\n   */\n  runSync(tree, file) {\n    /** @type {boolean} */\n    let complete = false\n    /** @type {(TailTree extends undefined ? Node : TailTree) | undefined} */\n    let result\n\n    this.run(tree, file, realDone)\n\n    assertDone('runSync', 'run', complete)\n    assert(result, 'we either bailed on an error or have a tree')\n    return result\n\n    /**\n     * @type {RunCallback<TailTree extends undefined ? Node : TailTree>}\n     */\n    function realDone(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * Compile a syntax tree.\n   *\n   * > \uD83D\uDC49 **Note**: `stringify` freezes the processor if not already *frozen*.\n   *\n   * > \uD83D\uDC49 **Note**: `stringify` performs the stringify phase, not the run phase\n   * > or other phases.\n   *\n   * @param {CompileTree extends undefined ? Node : CompileTree} tree\n   *   Tree to compile.\n   * @param {Compatible | undefined} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @returns {CompileResult extends undefined ? Value : CompileResult}\n   *   Textual representation of the tree (see note).\n   *\n   *   > \uD83D\uDC49 **Note**: unified typically compiles by serializing: most compilers\n   *   > return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you\u2019re using a compiler that doesn\u2019t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@link CompileResultMap `CompileResultMap`}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  stringify(tree, file) {\n    this.freeze()\n    const realFile = vfile(file)\n    const compiler = this.compiler || this.Compiler\n    assertCompiler('stringify', compiler)\n    assertNode(tree)\n\n    return compiler(tree, realFile)\n  }\n\n  /**\n   * Configure the processor to use a plugin, a list of usable values, or a\n   * preset.\n   *\n   * If the processor is already using a plugin, the previous plugin\n   * configuration is changed based on the options that are passed in.\n   * In other words, the plugin is not added a second time.\n   *\n   * > \uD83D\uDC49 **Note**: `use` cannot be called on *frozen* processors.\n   * > Call the processor first to create a new unfrozen processor.\n   *\n   * @example\n   *   There are many ways to pass plugins to `.use()`.\n   *   This example gives an overview:\n   *\n   *   ```js\n   *   import {unified} from 'unified'\n   *\n   *   unified()\n   *     // Plugin with options:\n   *     .use(pluginA, {x: true, y: true})\n   *     // Passing the same plugin again merges configuration (to `{x: true, y: false, z: true}`):\n   *     .use(pluginA, {y: false, z: true})\n   *     // Plugins:\n   *     .use([pluginB, pluginC])\n   *     // Two plugins, the second with options:\n   *     .use([pluginD, [pluginE, {}]])\n   *     // Preset with plugins and settings:\n   *     .use({plugins: [pluginF, [pluginG, {}]], settings: {position: false}})\n   *     // Settings only:\n   *     .use({settings: {position: false}})\n   *   ```\n   *\n   * @template {Array<unknown>} [Parameters=[]]\n   * @template {Node | string | undefined} [Input=undefined]\n   * @template [Output=Input]\n   *\n   * @overload\n   * @param {Preset | null | undefined} [preset]\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {PluggableList} list\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {Plugin<Parameters, Input, Output>} plugin\n   * @param {...(Parameters | [boolean])} parameters\n   * @returns {UsePlugin<ParseTree, HeadTree, TailTree, CompileTree, CompileResult, Input, Output>}\n   *\n   * @param {PluggableList | Plugin | Preset | null | undefined} value\n   *   Usable value.\n   * @param {...unknown} parameters\n   *   Parameters, when a plugin is given as a usable value.\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   Current processor.\n   */\n  use(value, ...parameters) {\n    const attachers = this.attachers\n    const namespace = this.namespace\n\n    assertUnfrozen('use', this.frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, parameters)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    return this\n\n    /**\n     * @param {Pluggable} value\n     * @returns {undefined}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value, [])\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...parameters] =\n            /** @type {PluginTuple<Array<unknown>>} */ (value)\n          addPlugin(plugin, parameters)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {undefined}\n     */\n    function addPreset(result) {\n      if (!('plugins' in result) && !('settings' in result)) {\n        throw new Error(\n          'Expected usable value but received an empty preset, which is probably a mistake: presets typically come with `plugins` and sometimes with `settings`, but this has neither'\n        )\n      }\n\n      addList(result.plugins)\n\n      if (result.settings) {\n        namespace.settings = {\n          ...namespace.settings,\n          ...structuredClone(result.settings)\n        }\n      }\n    }\n\n    /**\n     * @param {PluggableList | null | undefined} plugins\n     * @returns {undefined}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {Array<unknown>} parameters\n     * @returns {undefined}\n     */\n    function addPlugin(plugin, parameters) {\n      let index = -1\n      let entryIndex = -1\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entryIndex = index\n          break\n        }\n      }\n\n      if (entryIndex === -1) {\n        attachers.push([plugin, ...parameters])\n      }\n      // Only set if there was at least a `primary` value, otherwise we\u2019d change\n      // `arguments.length`.\n      else if (parameters.length > 0) {\n        let [primary, ...rest] = parameters\n        const currentPrimary = attachers[entryIndex][1]\n        if (isPlainObj(currentPrimary) && isPlainObj(primary)) {\n          primary = structuredClone({...currentPrimary, ...primary})\n        }\n\n        attachers[entryIndex] = [plugin, primary, ...rest]\n      }\n    }\n  }\n}\n\n// Note: this returns a *callable* instance.\n// That\u2019s why it\u2019s documented as a function.\n/**\n * Create a new processor.\n *\n * @example\n *   This example shows how a new processor can be created (from `remark`) and linked\n *   to **stdin**(4) and **stdout**(4).\n *\n *   ```js\n *   import process from 'node:process'\n *   import concatStream from 'concat-stream'\n *   import {remark} from 'remark'\n *\n *   process.stdin.pipe(\n *     concatStream(function (buf) {\n *       process.stdout.write(String(remark().processSync(buf)))\n *     })\n *   )\n *   ```\n *\n * @returns\n *   New *unfrozen* processor (`processor`).\n *\n *   This processor is configured to work the same as its ancestor.\n *   When the descendant processor is configured in the future it does not\n *   affect the ancestral processor.\n */\nexport const unified = new Processor().freeze()\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {Compatible | undefined} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {Compatible | undefined} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is Value}\n */\nfunction looksLikeAValue(value) {\n  return typeof value === 'string' || isUint8Array(value)\n}\n\n/**\n * Assert `value` is an `Uint8Array`.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Uint8Array}\n *   Whether `value` is an `Uint8Array`.\n */\nfunction isUint8Array(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'byteLength' in value &&\n      'byteOffset' in value\n  )\n}\n", "/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @template Fn\n * @template Fallback\n * @typedef {Fn extends (value: any) => value is infer Thing ? Thing : Fallback} Predicate\n */\n\n/**\n * @callback Check\n *   Check that an arbitrary value is a node.\n * @param {unknown} this\n *   The given context.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node\u2019s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node\u2019s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n *\n * @typedef {Record<string, unknown> | Node} Props\n *   Object to check for equivalence.\n *\n *   Note: `Node` is included as it is common but is not indexable.\n *\n * @typedef {Array<Props | TestFunction | string> | Props | TestFunction | string | null | undefined} Test\n *   Check for an arbitrary node.\n *\n * @callback TestFunction\n *   Check if a node passes a test.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | undefined} [index]\n *   The node\u2019s position in its parent.\n * @param {Parent | undefined} [parent]\n *   The node\u2019s parent.\n * @returns {boolean | undefined | void}\n *   Whether this node passes the test.\n *\n *   Note: `void` is included until TS sees no return as `undefined`.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param {unknown} node\n *   Thing to check, typically `Node`.\n * @param {Test} test\n *   A check for a specific node.\n * @param {number | null | undefined} index\n *   The node\u2019s position in its parent.\n * @param {Parent | null | undefined} parent\n *   The node\u2019s parent.\n * @param {unknown} context\n *   Context object (`this`) to pass to `test` functions.\n * @returns {boolean}\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  // Note: overloads in JSDoc can\u2019t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((node?: null | undefined) => false) &\n   *   ((node: unknown, test?: null | undefined, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((node: unknown, test?: Test, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function (node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      return looksLikeANode(node)\n        ? check.call(context, node, index, parent)\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you\u2019re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param {Test} test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns {Check}\n *   An assertion.\n */\nexport const convert =\n  // Note: overloads in JSDoc can\u2019t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((test?: null | undefined) => (node?: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((test?: Test) => Check)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {Check}\n     */\n    function (test) {\n      if (test === null || test === undefined) {\n        return ok\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<Props | TestFunction | string>} tests\n * @returns {Check}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<Check>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @type {TestFunction}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].apply(this, parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {Check}\n */\nfunction propsFactory(check) {\n  const checkAsRecord = /** @type {Record<string, unknown>} */ (check)\n\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    const nodeAsRecord = /** @type {Record<string, unknown>} */ (\n      /** @type {unknown} */ (node)\n    )\n\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      if (nodeAsRecord[key] !== checkAsRecord[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {Check}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunction} testFunction\n * @returns {Check}\n */\nfunction castFactory(testFunction) {\n  return check\n\n  /**\n   * @this {unknown}\n   * @type {Check}\n   */\n  function check(value, index, parent) {\n    return Boolean(\n      looksLikeANode(value) &&\n        testFunction.call(\n          this,\n          value,\n          typeof index === 'number' ? index : undefined,\n          parent || undefined\n        )\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n\n/**\n * @param {unknown} value\n * @returns {value is Node}\n */\nfunction looksLikeANode(value) {\n  return value !== null && typeof value === 'object' && 'type' in value\n}\n", "/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn\u2019t work when publishing on npm.\n */\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {InternalAncestor<InclusiveDescendant<Tree>, Child>} Ancestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > \uD83D\uDC49 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn\u2019t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn\u2019t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {'skip' | boolean} Action\n *   Union of the action types.\n *\n * @typedef {number} Index\n *   Move to the sibling at `index` next (after node itself is completely\n *   traversed).\n *\n *   Useful if mutating the tree, such as removing the node the visitor is\n *   currently on, or any of its previous siblings.\n *   Results less than 0 or greater than or equal to `children.length` stop\n *   traversing the parent.\n *\n * @typedef {[(Action | null | undefined | void)?, (Index | null | undefined)?]} ActionTuple\n *   List with one or two values, the first an action, the second an index.\n *\n * @typedef {Action | ActionTuple | Index | null | undefined | void} VisitorResult\n *   Any value that can be returned from a visitor.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform the parent of node (the last of `ancestors`).\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of an ancestor still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Array<VisitedParents>} ancestors\n *   Ancestors of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [VisitedParents=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Matches<InclusiveDescendant<Tree>, Check>, Ancestor<Tree, Matches<InclusiveDescendant<Tree>, Check>>>} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parents`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Tree type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from 'unist-util-visit-parents/do-not-use-color'\n\n/** @type {Readonly<ActionTuple>} */\nconst empty = []\n\n/**\n * Continue traversing as normal.\n */\nexport const CONTINUE = true\n\n/**\n * Stop traversing immediately.\n */\nexport const EXIT = false\n\n/**\n * Do not traverse this node\u2019s children.\n */\nexport const SKIP = 'skip'\n\n/**\n * Visit nodes, with ancestral information.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} test\n *   `unist-util-is`-compatible test\n * @param {Visitor | boolean | null | undefined} [visitor]\n *   Handle each node.\n * @param {boolean | null | undefined} [reverse]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visitParents(tree, test, visitor, reverse) {\n  /** @type {Test} */\n  let check\n\n  if (typeof test === 'function' && typeof visitor !== 'function') {\n    reverse = visitor\n    // @ts-expect-error no visitor given, so `visitor` is test.\n    visitor = test\n  } else {\n    // @ts-expect-error visitor given, so `test` isn\u2019t a visitor.\n    check = test\n  }\n\n  const is = convert(check)\n  const step = reverse ? -1 : 1\n\n  factory(tree, undefined, [])()\n\n  /**\n   * @param {UnistNode} node\n   * @param {number | undefined} index\n   * @param {Array<UnistParent>} parents\n   */\n  function factory(node, index, parents) {\n    const value = /** @type {Record<string, unknown>} */ (\n      node && typeof node === 'object' ? node : {}\n    )\n\n    if (typeof value.type === 'string') {\n      const name =\n        // `hast`\n        typeof value.tagName === 'string'\n          ? value.tagName\n          : // `xast`\n          typeof value.name === 'string'\n          ? value.name\n          : undefined\n\n      Object.defineProperty(visit, 'name', {\n        value:\n          'node (' + color(node.type + (name ? '<' + name + '>' : '')) + ')'\n      })\n    }\n\n    return visit\n\n    function visit() {\n      /** @type {Readonly<ActionTuple>} */\n      let result = empty\n      /** @type {Readonly<ActionTuple>} */\n      let subresult\n      /** @type {number} */\n      let offset\n      /** @type {Array<UnistParent>} */\n      let grandparents\n\n      if (!test || is(node, index, parents[parents.length - 1] || undefined)) {\n        // @ts-expect-error: `visitor` is now a visitor.\n        result = toResult(visitor(node, parents))\n\n        if (result[0] === EXIT) {\n          return result\n        }\n      }\n\n      if ('children' in node && node.children) {\n        const nodeAsParent = /** @type {UnistParent} */ (node)\n\n        if (nodeAsParent.children && result[0] !== SKIP) {\n          offset = (reverse ? nodeAsParent.children.length : -1) + step\n          grandparents = parents.concat(nodeAsParent)\n\n          while (offset > -1 && offset < nodeAsParent.children.length) {\n            const child = nodeAsParent.children[offset]\n\n            subresult = factory(child, offset, grandparents)()\n\n            if (subresult[0] === EXIT) {\n              return subresult\n            }\n\n            offset =\n              typeof subresult[1] === 'number' ? subresult[1] : offset + step\n          }\n        }\n      }\n\n      return result\n    }\n  }\n}\n\n/**\n * Turn a return value into a clean result.\n *\n * @param {VisitorResult} value\n *   Valid return values from visitors.\n * @returns {Readonly<ActionTuple>}\n *   Clean result.\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return value === null || value === undefined ? empty : [value]\n}\n", "/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn\u2019t work when publishing on npm.\n */\n\n// To do: use types from `unist-util-visit-parents` when it\u2019s released.\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > \uD83D\uDC49 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn\u2019t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn\u2019t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends UnistNode ? number | undefined : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends UnistParent ? Ancestor | undefined : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [Ancestor=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Visited, Parent<Ancestor, Visited>>} BuildVisitorFromMatch\n *   Build a typed `Visitor` function from a node and all possible parents.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Visited\n *   Node type.\n * @template {UnistParent} Ancestor\n *   Parent type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     Matches<Descendant, Check>,\n *     Extract<Descendant, UnistParent>\n *   >\n * )} BuildVisitorFromDescendants\n *   Build a typed `Visitor` function from a list of descendants and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Node type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} testOrVisitor\n *   `unist-util-is`-compatible test (optional, omit to pass a visitor).\n * @param {Visitor | boolean | null | undefined} [visitorOrReverse]\n *   Handle each node (when test is omitted, pass `reverse`).\n * @param {boolean | null | undefined} [maybeReverse=false]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visit(tree, testOrVisitor, visitorOrReverse, maybeReverse) {\n  /** @type {boolean | null | undefined} */\n  let reverse\n  /** @type {Test} */\n  let test\n  /** @type {Visitor} */\n  let visitor\n\n  if (\n    typeof testOrVisitor === 'function' &&\n    typeof visitorOrReverse !== 'function'\n  ) {\n    test = undefined\n    visitor = testOrVisitor\n    reverse = visitorOrReverse\n  } else {\n    // @ts-expect-error: assume the overload with test was given.\n    test = testOrVisitor\n    // @ts-expect-error: assume the overload with test was given.\n    visitor = visitorOrReverse\n    reverse = maybeReverse\n  }\n\n  visitParents(tree, test, overload, reverse)\n\n  /**\n   * @param {UnistNode} node\n   * @param {Array<UnistParent>} parents\n   */\n  function overload(node, parents) {\n    const parent = parents[parents.length - 1]\n    const index = parent ? parent.children.indexOf(node) : undefined\n    return visitor(node, index, parent)\n  }\n}\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n */\n\n/**\n * @template {string} SimpleSelector\n *   Selector type.\n * @template {string} DefaultTagName\n *   Default tag name.\n * @typedef {(\n *   SimpleSelector extends ''\n *     ? DefaultTagName\n *     : SimpleSelector extends `${infer TagName}.${infer Rest}`\n *     ? ExtractTagName<TagName, DefaultTagName>\n *     : SimpleSelector extends `${infer TagName}#${infer Rest}`\n *     ? ExtractTagName<TagName, DefaultTagName>\n *     : SimpleSelector extends string\n *     ? SimpleSelector\n *     : DefaultTagName\n * )} ExtractTagName\n *   Extract tag name from a simple selector.\n */\n\nconst search = /[#.]/g\n\n/**\n * Create a hast element from a simple CSS selector.\n *\n * @template {string} Selector\n *   Type of selector.\n * @template {string} [DefaultTagName='div']\n *   Type of default tag name (default: `'div'`).\n * @param {Selector | null | undefined} [selector]\n *   Simple CSS selector (optional).\n *\n *   Can contain a tag name (`foo`), classes (`.bar`), and an ID (`#baz`).\n *   Multiple classes are allowed.\n *   Uses the last ID if multiple IDs are found.\n * @param {DefaultTagName | null | undefined} [defaultTagName='div']\n *   Tag name to use if `selector` does not specify one (default: `'div'`).\n * @returns {Element & {tagName: ExtractTagName<Selector, DefaultTagName>}}\n *   Built element.\n */\nexport function parseSelector(selector, defaultTagName) {\n  const value = selector || ''\n  /** @type {Properties} */\n  const props = {}\n  let start = 0\n  /** @type {string | undefined} */\n  let previous\n  /** @type {string | undefined} */\n  let tagName\n\n  while (start < value.length) {\n    search.lastIndex = start\n    const match = search.exec(value)\n    const subvalue = value.slice(start, match ? match.index : value.length)\n\n    if (subvalue) {\n      if (!previous) {\n        tagName = subvalue\n      } else if (previous === '#') {\n        props.id = subvalue\n      } else if (Array.isArray(props.className)) {\n        props.className.push(subvalue)\n      } else {\n        props.className = [subvalue]\n      }\n\n      start += subvalue.length\n    }\n\n    if (match) {\n      previous = match[0]\n      start++\n    }\n  }\n\n  return {\n    type: 'element',\n    // @ts-expect-error: tag name is parsed.\n    tagName: tagName || defaultTagName || 'div',\n    properties: props,\n    children: []\n  }\n}\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').RootContent} RootContent\n *\n * @typedef {import('property-information').Info} Info\n * @typedef {import('property-information').Schema} Schema\n */\n\n/**\n * @typedef {Element | Root} Result\n *   Result from a `h` (or `s`) call.\n *\n * @typedef {number | string} StyleValue\n *   Value for a CSS style field.\n * @typedef {Record<string, StyleValue>} Style\n *   Supported value of a `style` prop.\n * @typedef {boolean | number | string | null | undefined} PrimitiveValue\n *   Primitive property value.\n * @typedef {Array<number | string>} ArrayValue\n *   List of property values for space- or comma separated values (such as `className`).\n * @typedef {ArrayValue | PrimitiveValue} PropertyValue\n *   Primitive value or list value.\n * @typedef {{[property: string]: PropertyValue | Style}} Properties\n *   Acceptable value for element properties.\n *\n * @typedef {number | string | null | undefined} PrimitiveChild\n *   Primitive children, either ignored (nullish), or turned into text nodes.\n * @typedef {Array<ArrayChildNested | Nodes | PrimitiveChild>} ArrayChild\n *   List of children.\n * @typedef {Array<Nodes | PrimitiveChild>} ArrayChildNested\n *   List of children (deep).\n * @typedef {ArrayChild | Nodes | PrimitiveChild} Child\n *   Acceptable child value.\n */\n\nimport {parse as commas} from 'comma-separated-tokens'\nimport {parseSelector} from 'hast-util-parse-selector'\nimport {find, normalize} from 'property-information'\nimport {parse as spaces} from 'space-separated-tokens'\n\nconst buttonTypes = new Set(['button', 'menu', 'reset', 'submit'])\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Schema} schema\n *   Schema to use.\n * @param {string} defaultTagName\n *   Default tag name.\n * @param {Array<string> | undefined} [caseSensitive]\n *   Case-sensitive tag names (default: `undefined`).\n * @returns\n *   `h`.\n */\nexport function createH(schema, defaultTagName, caseSensitive) {\n  const adjust = caseSensitive && createAdjustMap(caseSensitive)\n\n  /**\n   * Hyperscript compatible DSL for creating virtual hast trees.\n   *\n   * @overload\n   * @param {null | undefined} [selector]\n   * @param {...Child} children\n   * @returns {Root}\n   *\n   * @overload\n   * @param {string} selector\n   * @param {Properties} properties\n   * @param {...Child} children\n   * @returns {Element}\n   *\n   * @overload\n   * @param {string} selector\n   * @param {...Child} children\n   * @returns {Element}\n   *\n   * @param {string | null | undefined} [selector]\n   *   Selector.\n   * @param {Child | Properties | null | undefined} [properties]\n   *   Properties (or first child) (default: `undefined`).\n   * @param {...Child} children\n   *   Children.\n   * @returns {Result}\n   *   Result.\n   */\n  function h(selector, properties, ...children) {\n    let index = -1\n    /** @type {Result} */\n    let node\n\n    if (selector === undefined || selector === null) {\n      node = {type: 'root', children: []}\n      // Properties are not supported for roots.\n      const child = /** @type {Child} */ (properties)\n      children.unshift(child)\n    } else {\n      node = parseSelector(selector, defaultTagName)\n      // Normalize the name.\n      node.tagName = node.tagName.toLowerCase()\n      if (adjust && own.call(adjust, node.tagName)) {\n        node.tagName = adjust[node.tagName]\n      }\n\n      // Handle props.\n      if (isProperties(properties, node.tagName)) {\n        /** @type {string} */\n        let key\n\n        for (key in properties) {\n          if (own.call(properties, key)) {\n            addProperty(schema, node.properties, key, properties[key])\n          }\n        }\n      } else {\n        children.unshift(properties)\n      }\n    }\n\n    // Handle children.\n    while (++index < children.length) {\n      addChild(node.children, children[index])\n    }\n\n    if (node.type === 'element' && node.tagName === 'template') {\n      node.content = {type: 'root', children: node.children}\n      node.children = []\n    }\n\n    return node\n  }\n\n  return h\n}\n\n/**\n * Check if something is properties or a child.\n *\n * @param {Child | Properties} value\n *   Value to check.\n * @param {string} name\n *   Tag name.\n * @returns {value is Properties}\n *   Whether `value` is a properties object.\n */\nfunction isProperties(value, name) {\n  if (\n    value === null ||\n    value === undefined ||\n    typeof value !== 'object' ||\n    Array.isArray(value)\n  ) {\n    return false\n  }\n\n  if (name === 'input' || !value.type || typeof value.type !== 'string') {\n    return true\n  }\n\n  if ('children' in value && Array.isArray(value.children)) {\n    return false\n  }\n\n  if (name === 'button') {\n    return buttonTypes.has(value.type.toLowerCase())\n  }\n\n  return !('value' in value)\n}\n\n/**\n * @param {Schema} schema\n *   Schema.\n * @param {Properties} properties\n *   Properties object.\n * @param {string} key\n *   Property name.\n * @param {PropertyValue | Style} value\n *   Property value.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addProperty(schema, properties, key, value) {\n  const info = find(schema, key)\n  let index = -1\n  /** @type {PropertyValue} */\n  let result\n\n  // Ignore nullish and NaN values.\n  if (value === undefined || value === null) return\n\n  if (typeof value === 'number') {\n    // Ignore NaN.\n    if (Number.isNaN(value)) return\n\n    result = value\n  }\n  // Booleans.\n  else if (typeof value === 'boolean') {\n    result = value\n  }\n  // Handle list values.\n  else if (typeof value === 'string') {\n    if (info.spaceSeparated) {\n      result = spaces(value)\n    } else if (info.commaSeparated) {\n      result = commas(value)\n    } else if (info.commaOrSpaceSeparated) {\n      result = spaces(commas(value).join(' '))\n    } else {\n      result = parsePrimitive(info, info.property, value)\n    }\n  } else if (Array.isArray(value)) {\n    result = value.concat()\n  } else {\n    result = info.property === 'style' ? style(value) : String(value)\n  }\n\n  if (Array.isArray(result)) {\n    /** @type {Array<number | string>} */\n    const finalResult = []\n\n    while (++index < result.length) {\n      // Assume no booleans in array.\n      const value = /** @type {number | string} */ (\n        parsePrimitive(info, info.property, result[index])\n      )\n      finalResult[index] = value\n    }\n\n    result = finalResult\n  }\n\n  // Class names (which can be added both on the `selector` and here).\n  if (info.property === 'className' && Array.isArray(properties.className)) {\n    // Assume no booleans in `className`.\n    const value = /** @type {number | string} */ (result)\n    result = properties.className.concat(value)\n  }\n\n  properties[info.property] = result\n}\n\n/**\n * @param {Array<RootContent>} nodes\n *   Children.\n * @param {Child} value\n *   Child.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addChild(nodes, value) {\n  let index = -1\n\n  if (value === undefined || value === null) {\n    // Empty.\n  } else if (typeof value === 'string' || typeof value === 'number') {\n    nodes.push({type: 'text', value: String(value)})\n  } else if (Array.isArray(value)) {\n    while (++index < value.length) {\n      addChild(nodes, value[index])\n    }\n  } else if (typeof value === 'object' && 'type' in value) {\n    if (value.type === 'root') {\n      addChild(nodes, value.children)\n    } else {\n      nodes.push(value)\n    }\n  } else {\n    throw new Error('Expected node, nodes, or string, got `' + value + '`')\n  }\n}\n\n/**\n * Parse a single primitives.\n *\n * @param {Info} info\n *   Property information.\n * @param {string} name\n *   Property name.\n * @param {PrimitiveValue} value\n *   Property value.\n * @returns {PrimitiveValue}\n *   Property value.\n */\nfunction parsePrimitive(info, name, value) {\n  if (typeof value === 'string') {\n    if (info.number && value && !Number.isNaN(Number(value))) {\n      return Number(value)\n    }\n\n    if (\n      (info.boolean || info.overloadedBoolean) &&\n      (value === '' || normalize(value) === normalize(name))\n    ) {\n      return true\n    }\n  }\n\n  return value\n}\n\n/**\n * Serialize a `style` object as a string.\n *\n * @param {Style} value\n *   Style object.\n * @returns {string}\n *   CSS string.\n */\nfunction style(value) {\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {string} */\n  let key\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      result.push([key, value[key]].join(': '))\n    }\n  }\n\n  return result.join('; ')\n}\n\n/**\n * Create a map to adjust casing.\n *\n * @param {Array<string>} values\n *   List of properly cased keys.\n * @returns {Record<string, string>}\n *   Map of lowercase keys to uppercase keys.\n */\nfunction createAdjustMap(values) {\n  /** @type {Record<string, string>} */\n  const result = {}\n  let index = -1\n\n  while (++index < values.length) {\n    result[values[index].toLowerCase()] = values[index]\n  }\n\n  return result\n}\n", "export const svgCaseSensitiveTagNames = [\n  'altGlyph',\n  'altGlyphDef',\n  'altGlyphItem',\n  'animateColor',\n  'animateMotion',\n  'animateTransform',\n  'clipPath',\n  'feBlend',\n  'feColorMatrix',\n  'feComponentTransfer',\n  'feComposite',\n  'feConvolveMatrix',\n  'feDiffuseLighting',\n  'feDisplacementMap',\n  'feDistantLight',\n  'feDropShadow',\n  'feFlood',\n  'feFuncA',\n  'feFuncB',\n  'feFuncG',\n  'feFuncR',\n  'feGaussianBlur',\n  'feImage',\n  'feMerge',\n  'feMergeNode',\n  'feMorphology',\n  'feOffset',\n  'fePointLight',\n  'feSpecularLighting',\n  'feSpotLight',\n  'feTile',\n  'feTurbulence',\n  'foreignObject',\n  'glyphRef',\n  'linearGradient',\n  'radialGradient',\n  'solidColor',\n  'textArea',\n  'textPath'\n]\n", "/**\n * @typedef {import('./create-h.js').Child} Child\n *   Acceptable child value.\n * @typedef {import('./create-h.js').Properties} Properties\n *   Acceptable value for element properties.\n * @typedef {import('./create-h.js').Result} Result\n *   Result from a `h` (or `s`) call.\n */\n\n// Register the JSX namespace on `h`.\n/**\n * @typedef {import('./jsx-classic.js').Element} h.JSX.Element\n * @typedef {import('./jsx-classic.js').ElementChildrenAttribute} h.JSX.ElementChildrenAttribute\n * @typedef {import('./jsx-classic.js').IntrinsicAttributes} h.JSX.IntrinsicAttributes\n * @typedef {import('./jsx-classic.js').IntrinsicElements} h.JSX.IntrinsicElements\n */\n\n// Register the JSX namespace on `s`.\n/**\n * @typedef {import('./jsx-classic.js').Element} s.JSX.Element\n * @typedef {import('./jsx-classic.js').ElementChildrenAttribute} s.JSX.ElementChildrenAttribute\n * @typedef {import('./jsx-classic.js').IntrinsicAttributes} s.JSX.IntrinsicAttributes\n * @typedef {import('./jsx-classic.js').IntrinsicElements} s.JSX.IntrinsicElements\n */\n\nimport {html, svg} from 'property-information'\nimport {createH} from './create-h.js'\nimport {svgCaseSensitiveTagNames} from './svg-case-sensitive-tag-names.js'\n\n// Note: this explicit type is needed, otherwise TS creates broken types.\n/** @type {ReturnType<createH>} */\nexport const h = createH(html, 'div')\n\n// Note: this explicit type is needed, otherwise TS creates broken types.\n/** @type {ReturnType<createH>} */\nexport const s = createH(svg, 'g', svgCaseSensitiveTagNames)\n", "// parser.js is a async markdown-to-html parser.\r\n\r\nimport markdown from \"remark-parse\";\r\nimport remark2rehype from \"remark-rehype\";\r\nimport stringify from \"rehype-stringify\";\r\nimport gfm from \"remark-gfm\";\r\nimport slug from \"remark-slug\";\r\nimport toc from \"remark-toc\";\r\nimport emoji from \"remark-emoji\";\r\nimport remarkImages from \"remark-images\";\r\nimport directive from \"remark-directive\";\r\nimport { unified } from \"unified\";\r\nimport { visit } from \"unist-util-visit\";\r\nimport { h } from \"hastscript\";\r\n\r\n// TODO - A simple, lightweight parser that is custom to TTE would probably bring the\r\n// TODO -   total JS size to >100kb. That would probably make styling easier too.\r\n\r\n// --- Functions related to file parsing\r\nfunction loadFile(filePath) {\r\n  return new Promise(function (resolve, reject) {\r\n    let xhr = new XMLHttpRequest();\r\n    xhr.open(\"GET\", filePath, true);\r\n    xhr.onload = function () {\r\n      if (this.status >= 200 && this.status < 300) {\r\n        resolve(xhr.response);\r\n      } else {\r\n        reject({\r\n          status: this.status,\r\n          statusText: xhr.statusText,\r\n        });\r\n      }\r\n    };\r\n    xhr.onerror = function () {\r\n      reject({\r\n        status: this.status,\r\n        statusText: xhr.statusText,\r\n      });\r\n    };\r\n    xhr.send();\r\n  });\r\n}\r\n\r\nexport async function parseGFM(file) {\r\n  //Read GFM file\r\n  let fileData = await loadFile(file + \".md\");\r\n  if (fileData.length <= 1 || fileData == null) {\r\n    return \"\";\r\n  }\r\n  let content = \"\";\r\n  //Using the unified environment, transform the text GFM format to HTML to be injected into the page\r\n  //Also supports LaTeX-like math, Table of Contents, custom directives, emojis...\r\n  unified()\r\n    .use(toc, { parents: [\"root\", \"containerDirective\"] })\r\n    .use(markdown)\r\n    .use(directive)\r\n    .use(htmlDirectives)\r\n    .use(gfm)\r\n    .use(slug)\r\n    .use(remarkImages)\r\n    .use(remark2rehype)\r\n    .use(emoji)\r\n    .use(stringify)\r\n    .process(fileData, function (err, file) {\r\n      if (err) {\r\n        console.log(err);\r\n      } else {\r\n        content = file;\r\n      }\r\n    });\r\n  //Return the HTML data\r\n  return content;\r\n}\r\n\r\n// --- Functions related to custom directives\r\nfunction htmlDirectives() {\r\n  return transform;\r\n\r\n  function transform(tree) {\r\n    //For different directives on the tree, run onDirective()\r\n    visit(\r\n      tree,\r\n      [\"textDirective\", \"leafDirective\", \"containerDirective\"],\r\n      onDirective\r\n    );\r\n  }\r\n\r\n  function onDirective(node) {\r\n    //Gets data from the node\r\n    let data = node.data || (node.data = {});\r\n    let hast = h(node.name, node.attributes);\r\n\r\n    //From that data, a new div will be created (or paragraph if no properties were given)\r\n    if (hast.properties.length > 0) {\r\n      data.hName = \"div\";\r\n    } else {\r\n      data.hName = \"span\";\r\n    }\r\n    //Assign tags and properties from node to the div, which will be used by other functions\r\n    hast.properties = Object.assign({ class: hast.tagName }, hast.properties);\r\n    data.hProperties = hast.properties;\r\n  }\r\n}\r\n"],
  "mappings": "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KAAQ,qBACR,kBAAqB,GACrB,SAAY,OACd,EACA,cAAiB,CACf,SAAY,CAAC,SAAU,SAAU,OAAQ,SAAU,UAAW,QAAQ,EACtE,KAAQ,qBACR,kBAAqB,GACrB,SAAY,OACd,EACA,eAAkB,CAChB,SAAY,CAAC,UAAW,SAAU,OAAQ,SAAU,UAAW,QAAQ,EACvE,KAAQ,qBACR,kBAAqB,GACrB,SAAY,OACd,EACA,MAAS,CACP,SAAY,CAAC,KAAM,OAAQ,SAAU,UAAW,QAAQ,EACxD,KAAQ,qBACR,kBAAqB,GACrB,SAAY,OACd,EACA,OAAU,CACR,SAAY,CAAC,KAAM,OAAQ,SAAU,UAAW,QAAQ,EACxD,KAAQ,qBACR,kBAAqB,GACrB,SAAY,OACd,EACA,SAAY,CACV,SAAY,CAAC,KAAM,OAAQ,SAAU,UAAW,QAAQ,EACxD,KAAQ,qBACR,kBAAqB,GACrB,SAAY,OACd,EACA,eAAkB,CAChB,SAAY,CAAC,KAAM,OAAQ,QAAQ,EACnC,KAAQ,qBACR,kBAAqB,GACrB,SAAY,OACd,EACA,YAAe,CACb,SAAY,CAAC,QAAS,aAAc,OAAQ,QAAQ,EACpD,KAAQ,8BACR,kBAAqB,GACrB,SAAY,OACd,CACF,IC7sSA,IAAAC,GAAAC,GAAA,CAAAC,GAAAC,KAAA,CAAAA,GAAA,SACE,WACA,SACA,QACA,OACA,WACA,cACA,MACA,OACA,UACA,QACA,WACA,wBACA,mBACA,OACA,WACA,aACA,iCACA,gBACA,UACA,uBACA,sBACA,MACA,mBACA,+BACA,+BACA,OACA,iBACA,UACA,YACA,aACA,cACA,WACA,QACA,WACA,eACA,UACA,UACA,WACA,yBACA,gBACA,YACA,aACA,aACA,QACA,WACA,MACA,MACA,UACA,QACA,OACA,qBACA,iBACA,UACA,MACA,OACA,SACA,UACA,aACA,wBACA,QACA,OACA,WACA,kBACA,WACA,aACA,WACA,eACA,iBACA,YACA,YACA,SACA,WACA,YACA,aACA,aACA,WACA,gBACA,SACA,aACA,oBACA,QACA,iBACA,WACA,gBACA,OACA,wBACA,yBACA,mBACA,kBACA,cACA,MACA,gBACA,kBACA,aACA,OACA,QACA,QACA,uBACA,QACA,gBACA,QACA,iBACA,aACA,YACA,UACA,iBACA,YACA,cACA,aACA,kBACA,cACA,WACA,aACA,eACA,OACA,YACA,KACA,KACA,YACA,OACA,YACA,aACA,kBACA,IACA,WACA,QACA,UACA,aACA,cACA,WACA,aACA,aACA,cACA,sBACA,mCACA,gBACA,OACA,eACA,SACA,KACA,eACA,OACA,OACA,MACA,OACA,WACA,OACA,OACA,QACA,SACA,MACA,OACA,aACA,MACA,OACA,QACA,gBACA,qBACA,sBACA,OACA,OACA,QACA,MACA,QACA,QACA,MACA,eACA,aACA,iBACA,cACA,cACA,YACA,sBACA,uBACA,oBACA,kBACA,cACA,YACA,4BACA,0BACA,cACA,YACA,mBACA,iBACA,sBACA,oBACA,eACA,aACA,aACA,WACA,gBACA,cACA,eACA,aACA,gBACA,cACA,uBACA,qBACA,qBACA,mBACA,sBACA,oBACA,iBACA,eACA,kBACA,gBACA,eACA,aACA,oBACA,kBACA,cACA,YACA,kBACA,gBACA,cACA,YACA,kBACA,gBACA,WACA,SACA,kBACA,gBACA,qBACA,mBACA,YACA,QACA,YACA,SACA,YACA,UACA,gBACA,cACA,eACA,aACA,cACA,YACA,UACA,SACA,cACA,YACA,QACA,iBACA,gBACA,eACA,aACA,qBACA,mBACA,gBACA,cACA,WACA,SACA,qBACA,mBACA,oBACA,kBACA,kBACA,gBACA,gBACA,cACA,iBACA,eACA,gBACA,cACA,gBACA,cACA,uBACA,qBACA,YACA,SACA,SACA,cACA,gBACA,cACA,2BACA,gBACA,cACA,gBACA,cACA,SACA,0BACA,wBACA,8BACA,gCACA,4BACA,uBACA,yBACA,qBACA,uBACA,wBACA,4BACA,2BACA,6BACA,yBACA,0BACA,8BACA,6BACA,+BACA,qBACA,sBACA,0BACA,yBACA,2BACA,mBACA,oBACA,wBACA,uBACA,yBACA,iBACA,kBACA,sBACA,qBACA,uBACA,OACA,SACA,OACA,UACA,iBACA,SACA,QACA,UACA,QACA,SACA,SACA,YACA,YACA,SACA,OACA,YACA,gBACA,cACA,QACA,SACA,QACA,SACA,aACA,aACA,eACA,uBACA,QACA,QACA,QACA,UACA,YACA,iBACA,UACA,aACA,kBACA,UACA,kBACA,MACA,MACA,QACA,UACA,SACA,WACA,OACA,aACA,QACA,QACA,OACA,MACA,MACA,WACA,OACA,cACA,cACA,eACA,gBACA,SACA,UACA,UACA,OACA,aACA,iBACA,gBACA,OACA,QACA,MACA,MACA,OACA,OACA,QACA,UACA,WACA,MACA,YACA,QACA,QACA,SACA,MACA,WACA,cACA,SACA,aACA,WACA,SACA,QACA,SACA,QACA,WACA,UACA,QACA,SACA,UACA,OACA,WACA,gBACA,OACA,UACA,QACA,SACA,QACA,YACA,SACA,UACA,QACA,UACA,WACA,eACA,aACA,kBACA,UACA,WACA,QACA,gBACA,KACA,OACA,YACA,OACA,MACA,QACA,QACA,OACA,OACA,OACA,SACA,OACA,UACA,SACA,UACA,SACA,OACA,OACA,UACA,UACA,SACA,MACA,SACA,WACA,WACA,aACA,SACA,cACA,SACA,iBACA,iBACA,iBACA,YACA,WACA,OACA,WACA,mBACA,SACA,gBACA,SACA,cACA,aACA,cACA,WACA,YACA,OACA,gBACA,QACA,UACA,iBACA,UACA,WACA,iBACA,eACA,aACA,YACA,sBACA,oBACA,uBACA,WACA,uBACA,qBACA,sBACA,qBACA,sBACA,+BACA,8BACA,gBACA,gBACA,OACA,QACA,QACA,WACA,QACA,QACA,yBACA,eACA,yBACA,wBACA,QACA,kBACA,gCACA,uBACA,MACA,OACA,OACA,YACA,kBACA,UACA,oBACA,YACA,OACA,UACA,MACA,gBACA,WACA,UACA,cACA,QACA,cACA,QACA,OACA,YACA,QACA,SACA,aACA,SACA,aACA,QACA,WACA,QACA,QACA,YACA,UACA,aACA,SACA,WACA,UACA,WACA,eACA,WACA,aACA,OACA,SACA,SACA,eACA,YACA,QACA,QACA,iBACA,UACA,SACA,MACA,YACA,WACA,QACA,QACA,cACA,eACA,OACA,SACA,YACA,QACA,QACA,WACA,oBACA,OACA,UACA,cACA,sBACA,cACA,YACA,QACA,OACA,QACA,QACA,QACA,eACA,YACA,OACA,eACA,YACA,iBACA,YACA,OACA,QACA,aACA,YACA,WACA,MACA,UACA,OACA,WACA,UACA,WACA,QACA,gBACA,UACA,WACA,WACA,SACA,WACA,UACA,YACA,aACA,cACA,SACA,MACA,iBACA,OACA,OACA,QACA,mBACA,aACA,gBACA,WACA,iBACA,YACA,QACA,iBACA,qBACA,kBACA,cACA,aACA,OACA,SACA,aACA,WACA,WACA,WACA,SACA,aACA,iBACA,cACA,QACA,OACA,gBACA,cACA,YACA,YACA,WACA,aACA,eACA,WACA,UACA,MACA,QACA,cACA,iBACA,kBACA,gBACA,qBACA,mBACA,yBACA,uBACA,YACA,gBACA,aACA,OACA,gBACA,wBACA,eACA,uBACA,eACA,aACA,iBACA,eACA,iBACA,eACA,2BACA,yBACA,0BACA,wBACA,gBACA,cACA,mBACA,iBACA,uBACA,qBACA,eACA,aACA,wBACA,sBACA,eACA,SACA,0BACA,eACA,iBACA,kBACA,kBACA,kBACA,kBACA,UACA,SACA,UACA,kBACA,MACA,cACA,iBACA,eACA,aACA,aACA,gBACA,mBACA,OACA,YACA,UACA,SACA,SACA,UACA,aACA,OACA,WACA,aACA,eACA,SACA,UACA,UACA,OACA,WACA,MACA,aACA,aACA,aACA,YACA,cACA,UACA,QACA,oBACA,UACA,eACA,aACA,OACA,gBACA,iBACA,sBACA,eACA,sBACA,gBACA,iBACA,oBACA,qBACA,cACA,QACA,WACA,mBACA,oBACA,aACA,mBACA,mBACA,SACA,QACA,OACA,UACA,gBACA,aACA,iBACA,WACA,mBACA,iBACA,WACA,aACA,YACA,QACA,iBACA,SACA,uBACA,OACA,QACA,SACA,eACA,WACA,UACA,yBACA,gBACA,OACA,eACA,iBACA,iBACA,wBACA,QACA,cACA,UACA,WACA,aACA,WACA,gBACA,aACA,UACA,QACA,UACA,OACA,gBACA,WACA,gBACA,UACA,yBACA,SACA,iBACA,gBACA,eACA,cACA,YACA,mBACA,kBACA,YACA,QACA,WACA,YACA,UACA,SACA,kBACA,kBACA,UACA,oBACA,QACA,oBACA,iBACA,SACA,mBACA,cACA,uBACA,WACA,OACA,QACA,oBACA,SACA,aACA,UACA,qBACA,SACA,SACA,YACA,QACA,gBACA,QACA,SACA,UACA,WACA,WACA,mBACA,UACA,iBACA,YACA,WACA,QACA,WACA,cACA,KACA,MACA,MACA,SACA,eACA,eACA,eACA,iBACA,aACA,qBACA,QACA,QACA,MACA,KACA,QACA,oBACA,eACA,gBACA,UACA,YACA,cACA,cACA,oBACA,yBACA,YACA,YACA,UACA,gBACA,OACA,aACA,SACA,oBACA,cACA,WACA,mBACA,SACA,MACA,OACA,QACA,WACA,cACA,MACA,gBACA,UACA,SACA,SACA,kBACA,oBACA,OACA,eACA,OACA,QACA,SACA,SACA,MACA,OACA,cACA,QACA,SACA,iBACA,SACA,UACA,SACA,cACA,UACA,eACA,eACA,eACA,SACA,UACA,YACA,aACA,OACA,OACA,UACA,MACA,UACA,aACA,YACA,cACA,QACA,SACA,eACA,QACA,WACA,SACA,SACA,UACA,OACA,OACA,SACA,gBACA,MACA,UACA,iBACA,eACA,MACA,OACA,eACA,aACA,iBACA,YACA,oBACA,QACA,WACA,gBACA,UACA,QACA,SACA,OACA,gBACA,OACA,QACA,aACA,gBACA,kBACA,eACA,QACA,sBACA,oBACA,SACA,cACA,UACA,iBACA,UACA,oBACA,uBACA,UACA,cACA,aACA,cACA,SACA,iBACA,gBACA,UACA,YACA,2BACA,6BACA,iBACA,OACA,WACA,kBACA,aACA,gBACA,aACA,eACA,YACA,iBACA,cACA,mBACA,sBACA,iBACA,YACA,WACA,cACA,aACA,YACA,cACA,iCACA,SACA,QACA,YACA,aACA,OACA,YACA,aACA,WACA,mBACA,iBACA,SACA,UACA,gBACA,uBACA,OACA,SACA,oBACA,MACA,eACA,YACA,OACA,UACA,SACA,aACA,MACA,YACA,QACA,eACA,eACA,cACA,aACA,eACA,cACA,eACA,0BACA,aACA,mBACA,YACA,aACA,kBACA,QACA,aACA,mBACA,eACA,cACA,oBACA,KACA,kBACA,gBACA,mBACA,UACA,WACA,iBACA,mBACA,YACA,QACA,SACA,SACA,SACA,MACA,QACA,QACA,WACA,cACA,YACA,WACA,SACA,KACA,cACA,QACA,QACA,cACA,YACA,mBACA,iBACA,QACA,QACA,QACA,QACA,QACA,2BACA,KACA,SACA,eACA,sBACA,SACA,kBACA,QACA,QACA,QACA,IACA,IACA,KACA,KACA,KACA,MACA,WACA,aACA,gBACA,IACA,IACA,YACA,QACA,aACA,iBACA,gBACA,cACA,oBACA,WACA,mBACA,cACA,mBACA,WACA,gBACA,WACA,cACA,MACA,iBACA,kBACA,UACA,eACA,wBACA,UACA,oBACA,WACA,UACA,QACA,QACA,UACA,wBACA,8BACA,mBACA,kCACA,UACA,OACA,uBACA,IACA,MACA,MACA,KACA,mBACA,UACA,gBACA,eACA,aACA,aACA,KACA,UACA,gBACA,OACA,SACA,cACA,WACA,0BACA,SACA,kBACA,OACA,KACA,KACA,KACA,OACA,MACA,OACA,OACA,MACA,MACA,QACA,OACA,OACA,MACA,QACA,QACA,OACA,aACA,WACA,OACA,eACA,gBACA,eACA,oBACA,cACA,gBACA,uBACA,wBACA,eACA,SACA,4BACA,SACA,aACA,iBACA,iBACA,mBACA,kBACA,oBACA,cACA,aACA,WACA,aACA,oBACA,oBACA,mBACA,mBACA,gBACA,mBACA,0BACA,mBACA,4BACA,mBACA,qBACA,OACA,qBACA,MACA,OACA,eACA,UACA,eACA,QACA,YACA,aACA,mBACA,mBACA,kBACA,mBACA,sBACA,yBACA,WACA,oBACA,oBACA,YACA,aACA,KACA,MACA,OACA,KACA,MACA,OACA,wBACA,eACA,eACA,eACA,aACA,oBACA,uBACA,qBACA,uBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,0BACA,sBACA,sBACA,4BACA,4BACA,sBACA,sBACA,UACA,QACA,aACA,OACA,OACA,cACA,OACA,UACA,cACA,UACA,SACA,QACA,SACA,WACA,uBACA,kBACA,qBACA,iBACA,qBACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,UACA,UACA,UACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,YACA,YACA,YACA,aACA,aACA,cACA,iBACA,0BACA,eACA,iBACA,cACA,gBACA,UACA,UACA,iBACA,UACA,SACA,WACA,aACA,kBACA,YACA,UACA,QACA,YACA,UACA,aACA,UACA,UACA,aACA,WACA,UACA,UACA,SACA,QACA,UACA,SACA,UACA,wBACA,qBACA,WACA,SACA,iCACA,yBACA,SACA,WACA,eACA,UACA,aACA,WACA,WACA,SACA,iBACA,iBACA,2BACA,OACA,QACA,KACA,mBACA,gBACA,WACA,UACA,oBACA,iBACA,eACA,aACA,UACA,OACA,UACA,SACA,iBACA,UACA,WACA,WACA,qBACA,UACA,QACA,cACA,oBACA,UACA,UACA,WACA,KACA,mBACA,gBACA,OACA,UACA,KACA,gBACA,mBACA,8BACA,QACA,SACA,UACA,KACA,QACA,YACA,SACA,YACA,UACA,aACA,OACA,YACA,WACA,SACA,gBACA,SACA,QACA,WACA,YACA,UACA,UACA,QACA,YACA,OACA,OACA,UACA,cACA,SACA,KACA,eACA,UACA,KACA,SACA,SACA,aACA,QACA,WACA,SACA,SACA,aACA,OACA,SACA,UACA,UACA,UACA,QACA,gBACA,YACA,aACA,QACA,YACA,aACA,SACA,WACA,WACA,OACA,QACA,mBACA,aACA,aACA,YACA,UACA,SACA,aACA,UACA,SACA,WACA,aACA,aACA,UACA,aACA,UACA,UACA,QACA,QACA,cACA,gBACA,cACA,YACA,QACA,UACA,OACA,iBACA,2BACA,cACA,SACA,OACA,WACA,QACA,0BACA,SACA,mBACA,WACA,OACA,cACA,mBACA,SACA,WACA,cACA,QACA,UACA,UACA,KACA,SACA,gBACA,YACA,iBACA,WACA,qBACA,wBACA,QACA,aACA,oBACA,eACA,UACA,SACA,aACA,eACA,YACA,eACA,WACA,WACA,kBACA,UACA,eACA,uCACA,KACA,cACA,KACA,YACA,QACA,WACA,YACA,SACA,cACA,QACA,SACA,aACA,WACA,WACA,cACA,OACA,UACA,QACA,kBACA,UACA,KACA,eACA,uBACA,SACA,SACA,UACA,uBACA,KACA,UACA,WACA,QACA,KACA,oBACA,UACA,aACA,UACA,eACA,YACA,UACA,gBACA,iBACA,QACA,SACA,UACF,ICniDA,IAAAC,GAAAC,GAAA,CAAAC,GAAAC,KAAA,CAAAA,GAAO,QAAU,CACf,IAAK,KACL,QAAS,KACT,4BAA6B,CAAC,YAAM,YAAM,YAAM,YAAM,WAAI,CAC5D,ICJA,IAAAC,GAAAC,GAAA,CAAAC,GAAAC,KAAA,cAIAA,GAAO,QAAU,IAAM,CAEtB,IAAMC,EAAc,kBACdC,EAAkB,kBAClBC,EAAsB,kBACtBC,EAAoB,kBACpBC,EAA0B,kBAC1BC,EAA4B,kBAC5BC,EAAaL,EAAkBC,EAAsBC,EAAoBC,EAA0BC,EACnGE,EAAW,iBACXC,EAAc,oDAGdC,EAAS,IAAIT,CAAW,IACxBU,EAAQ,IAAIJ,CAAU,IACtBK,EAAO,2BACPC,EAAW,MAAMF,CAAK,IAAIC,CAAI,IAC9BE,EAAY,KAAKb,CAAW,IAC5Bc,EAAW,kCACXC,EAAgB,qCAChBC,EAAM,UACNC,EAAY,qKACZC,EAAS,IAAIV,CAAW,IAGxBW,EAAc,GAAGP,CAAQ,IACzBQ,EAAS,IAAIb,CAAQ,KACrBc,EAAU,MAA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,CAAK,CAClD,CAOA,SAAShF,IAAa,CACpB,MAAO,CACL,KAAM,aACN,SAAU,CAAC,CACb,CACF,CAGA,SAASC,IAAW,CAClB,MAAO,CACL,KAAM,OACN,KAAM,KACN,KAAM,KACN,MAAO,EACT,CACF,CAGA,SAASE,IAAW,CAClB,MAAO,CACL,KAAM,aACN,MAAO,EACT,CACF,CAGA,SAASC,IAAa,CACpB,MAAO,CACL,KAAM,aACN,WAAY,GACZ,MAAO,KACP,MAAO,KACP,IAAK,EACP,CACF,CAGA,SAASC,IAAW,CAClB,MAAO,CACL,KAAM,WACN,SAAU,CAAC,CACb,CACF,CAGA,SAASN,IAAU,CAEjB,MAAO,CACL,KAAM,UACN,MAAO,OACP,SAAU,CAAC,CACb,CACF,CAGA,SAASO,IAAY,CACnB,MAAO,CACL,KAAM,OACR,CACF,CAGA,SAASC,IAAO,CACd,MAAO,CACL,KAAM,OACN,MAAO,EACT,CACF,CAGA,SAASC,IAAQ,CACf,MAAO,CACL,KAAM,QACN,MAAO,KACP,IAAK,GACL,IAAK,IACP,CACF,CAGA,SAASX,IAAO,CACd,MAAO,CACL,KAAM,OACN,MAAO,KACP,IAAK,GACL,SAAU,CAAC,CACb,CACF,CAMA,SAASc,GAAKqE,EAAO,CACnB,MAAO,CACL,KAAM,OACN,QAASA,EAAM,OAAS,cACxB,MAAO,KACP,OAAQA,EAAM,QACd,SAAU,CAAC,CACb,CACF,CAMA,SAASvE,GAASuE,EAAO,CACvB,MAAO,CACL,KAAM,WACN,OAAQA,EAAM,QACd,QAAS,KACT,SAAU,CAAC,CACb,CACF,CAGA,SAASnE,IAAY,CACnB,MAAO,CACL,KAAM,YACN,SAAU,CAAC,CACb,CACF,CAGA,SAASE,IAAS,CAChB,MAAO,CACL,KAAM,SACN,SAAU,CAAC,CACb,CACF,CAGA,SAAS4E,IAAO,CACd,MAAO,CACL,KAAM,OACN,MAAO,EACT,CACF,CAGA,SAAS3E,IAAgB,CACvB,MAAO,CACL,KAAM,eACR,CACF,CACF,CAUA,SAASiD,GAAMmC,EAAG,CAChB,MAAO,CACL,KAAMA,EAAE,KACR,OAAQA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QACA,QACA,SACA,MACA,QACA,SACA,OACA,SACA,SACA,QACA,OACA,OACA,SACA,MACA,SACA,SACA,QACA,SACA,MACA,OACA,SACA,SACA,SACA,KACA,SACA,QACA,QACA,SACA,SACA,OACA,QACA,KACA,OACA,QACA,SACA,OACA,MACA,SACA,SACA,QACA,SACA,OACA,OACA,SACA,SACA,OACA,OACA,SACA,QACA,OACA,QACA,MACA,OACA,MACA,OACA,OACA,OACA,QACA,QACA,QACA,SACA,QACA,SACA,MACA,OACA,SACA,MACA,MACF,EC3GO,IAAMC,GAAyB,CACpC,KAAM,OACN,MAAO,OACP,KAAM,OACN,MAAO,OACP,OAAQ,OACR,IAAK,OACL,OAAQ,OACR,KAAM,OACN,IAAK,OACL,KAAM,OACN,KAAM,OACN,MAAO,OACP,IAAK,OACL,IAAK,OACL,IAAK,OACL,KAAM,OACN,IAAK,OACL,OAAQ,OACR,KAAM,OACN,KAAM,OACN,MAAO,OACP,MAAO,OACP,KAAM,OACN,OAAQ,OACR,MAAO,OACP,KAAM,OACN,KAAM,OACN,MAAO,OACP,OAAQ,OACR,OAAQ,OACR,OAAQ,OACR,OAAQ,OACR,OAAQ,OACR,OAAQ,OACR,MAAO,OACP,OAAQ,OACR,KAAM,OACN,MAAO,OACP,MAAO,OACP,OAAQ,OACR,OAAQ,OACR,OAAQ,OACR,MAAO,OACP,KAAM,OACN,OAAQ,OACR,OAAQ,OACR,MAAO,OACP,KAAM,OACN,IAAK,OACL,OAAQ,OACR,OAAQ,OACR,OAAQ,OACR,MAAO,OACP,OAAQ,OACR,KAAM,OACN,MAAO,OACP,OAAQ,OACR,OAAQ,OACR,OAAQ,OACR,MAAO,OACP,KAAM,OACN,OAAQ,OACR,MAAO,OACP,MAAO,OACP,OAAQ,OACR,OAAQ,OACR,MAAO,OACP,OAAQ,OACR,KAAM,OACN,MAAO,OACP,MAAO,OACP,OAAQ,OACR,OAAQ,OACR,OAAQ,OACR,MAAO,OACP,KAAM,OACN,OAAQ,OACR,OAAQ,OACR,MAAO,OACP,KAAM,OACN,IAAK,OACL,OAAQ,OACR,OAAQ,OACR,OAAQ,O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AAM,CACxE,EACA,CACE,KAAM,QACN,MAAO,YACP,KAAM,CAAC,OAAO,EACd,YAAa,iCACb,UAAW,CACT,MACA,MACA,MACA,OACA,OACA,OACA,MACA,MACA,MACA,OACA,OACA,MACF,CACF,EACA,CACE,KAAM,eACN,MAAO,YACP,KAAM,CAAC,EACP,YAAa,eACb,UAAW,CAAC,OAAQ,KAAK,CAC3B,EACA,CACE,KAAM,WACN,MAAO,YACP,KAAM,CAAC,EACP,YAAa,gBACb,UAAW,CAAC,KAAM,MAAO,MAAO,OAAQ,KAAM,MAAO,MAAO,MAAM,CACpE,EACA,CACE,KAAM,MACN,MAAO,YACP,KAAM,CAAC,MAAO,MAAM,EACpB,YAAa,cACb,UAAW,CACT,MACA,MACA,MACA,OACA,OACA,OACA,MACA,MACA,MACA,OACA,OACA,OACA,MACA,MACA,MACA,OACA,OACA,OACA,MACA,MACA,MACA,OACA,OACA,MACF,CACF,EACA,CACE,KAAM,WACN,MAAO,YACP,KAAM,CAAC,EACP,YAAa,gCACb,UAAW,CAAC,KAAM,KAAM,MAAO,MAAO,KAAM,KAAM,MAAO,KAAK,CAChE,EACA,CACE,KAAM,QACN,MAAO,eACP,KAAM,CAAC,MAAM,EACb,YAAa,YACb,UAAW,CAAC,IAAI,CAClB,EACA,CACE,KAAM,MACN,MAAO,YACP,KAAM,CAAC,QAAS,QAAS,OAAQ,OAAO,EACxC,YAAa,wBACb,UAAW,CAAC,MAAO,MAAO,OAAQ,OAAQ,MAAO,MAAO,OAAQ,MAAM,CACxE,EACA,CACE,KAAM,WACN,MAAO,YACP,KAAM,CAAC,OAAO,EACd,YAAa,yBACb,UAAW,CACT,MACA,MACA,MACA,OACA,OACA,OACA,MACA,MACA,MACA,OACA,OACA,OACA,MACA,MACA,MACA,OACA,OACA,OACA,MACA,MACA,MACA,OACA,OACA,OACA,MACA,MACA,MACA,OACA,OACA,OACA,MACA,MACA,MACA,OACA,OACA,MACF,CACF,EACA,CACE,KAAM,MACN,MAAO,YACP,KAAM,CAAC,OAAO,EACd,YAAa,yBACb,UAAW,CACT,MACA,MACA,MACA,OACA,OACA,OACA,MACA,MACA,MACA,OACA,OACA,OACA,MACA,MACA,MACA,OACA,OACA,OACA,MACA,MACA,MACA,OACA,OACA,MACF,CACF,EACA,CACE,KAAM,UACN,MAAO,YACP,KAAM,CAAC,EACP,YAAa,eACb,UAAW,CAAC,KAAM,MAAO,KAAM,KAAK,CACtC,EACA,CACE,KAAM,WACN,MAAO,YACP,KAAM,CAAC,QAAS,MAAM,EACtB,YAAa,0BACb,UAAW,CACT,KACA,KACA,KACA,MACA,MACA,MACA,KACA,KACA,MACA,MACA,KACF,CACF,EACA,CACE,KAAM,MACN,MAAO,YACP,KAAM,CAAC,WAAY,SAAU,KAAK,EAClC,YAAa,MACb,UAAW,CAAC,KAAM,MAAO,KAAM,MAAO,KAAM,MAAO,KAAM,MAAO,KAAM,KAAK,CAC7E,EACA,CACE,KAAM,eACN,MAAO,YACP,KAAM,CAAC,KAAK,EACZ,YAAa,eACb,UAAW,CAAC,KAAM,MAAO,KAAM,KAAK,CACtC,EACA,CACE,KAAM,WACN,MAAO,YACP,KAAM,CAAC,OAAQ,SAAS,EACxB,YAAa,qBACb,UAAW,CAAC,IAAI,CAClB,EACA,CACE,KAAM,aACN,MAAO,YACP,KAAM,CAAC,WAAY,YAAa,KAAK,EACrC,YAAa,uBACb,UAAW,CACT,KACA,KACA,KACA,MACA,MACA,MACA,KACA,KACA,KACA,MACA,MACA,KACF,CACF,EACA,CACE,KAAM,OACN,MAAO,YACP,KAAM,CAAC,OAAO,EACd,YAAa,eACb,UAAW,CAAC,KAAM,MAAO,KAAM,KAAK,CACtC,EACA,CACE,KAAM,QACN,MAAO,YACP,KAAM,CAAC,QAAS,MAAO,QAAS,SAAS,EACzC,YAAa,kCACb,UAAW,CAAC,KAAM,MAAO,KAAM,KAAK,CACtC,EACA,CACE,KAAM,SACN,MAAO,YACP,KAAM,CAAC,QAAS,MAAO,MAAM,EAC7B,YAAa,8BACb,UAAW,CAAC,KAAM,KAAM,MAAO,MAAO,KAAM,KAAM,MAAO,KAAK,CAChE,EACA,CACE,KAAM,cACN,MAAO,YACP,KAAM,CAAC,QAAS,OAAQ,OAAO,EAC/B,YAAa,0BACb,UAAW,CACT,MACA,MACA,MACA,OACA,OACA,OACA,MACA,MACA,MACA,OACA,OACA,MACF,CACF,EACA,CACE,KAAM,MACN,MAAO,YACP,KAAM,CAAC,MAAO,MAAO,SAAS,EAC9B,YAAa,qBACb,UAAW,CACT,OACA,OACA,QACA,QACA,OACA,OACA,QACA,QACA,OACA,OACA,QACA,QACA,OACA,OACA,QACA,OACF,CACF,EACA,CACE,KAAM,mBACN,MAAO,YACP,KAAM,CAAC,EACP,YAAa,mBACb,UAAW,CACT,KACA,KACA,KACA,MACA,MACA,MACA,KACA,KACA,KACA,MACA,MACA,KACF,CACF,EACA,CACE,KAAM,+BACN,MAAO,YACP,KAAM,CAAC,OAAO,EACd,YAAa,6BACb,UAAW,CAAC,KAAM,MAAO,MAAO,MAAO,KAAM,KAAM,MAAO,MAAO,KAAK,CACxE,EACA,CACE,KAAM,+BACN,MAAO,YACP,KAAM,CAAC,QAAS,OAAO,EACvB,YAAa,2BACb,UAAW,CAAC,KAAM,KAAM,KAAM,MAAO,MAAO,KAAK,CACnD,EACA,CACE,KAAM,aACN,MAAO,YACP,KAAM,CAAC,MAAM,EACb,YAAa,+BACb,UAAW,CACT,KACA,KACA,KACA,MACA,MACA,MACA,KACA,KACA,MACA,MACA,KACF,CACF,EACA,CACE,KAAM,QACN,MAAO,YACP,KAAM,CAAC,EACP,YAAa,2BACb,UAAW,CACT,MACA,MACA,OACA,OACA,MACA,MACA,OACA,OACA,MACA,MACA,OACA,OACA,MACA,MACA,OACA,MACF,CACF,EACA,CACE,KAAM,cACN,MAAO,YACP,KAAM,CAAC,KAAK,EACZ,YAAa,2BACb,UAAW,CACT,MACA,MACA,MACA,OACA,OACA,OACA,MACA,MACA,MACA,OACA,OACA,OACA,MACA,MACA,MACA,OACA,OACA,OACA,MACA,MACA,MACA,OACA,OACA,MACF,CACF,EACA,CACE,KAAM,WACN,MAAO,YACP,KAAM,CAAC,KAAK,EACZ,YAAa,gBACb,UAAW,CACT,KACA,KACA,KACA,KA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",
  "names": ["require_regex", "__commonJSMin", "exports", "module", "require_github_slugger", "__commonJSMin", "exports", "module", "regex", "BananaSlug", "own", "self", "value", "maintainCase", "slug", "slugger", "originalSlug", "string", "require_extend", "__commonJSMin", "exports", "module", "hasOwn", "toStr", "defineProperty", "gOPD", "isArray", "arr", "isPlainObject", "obj", "hasOwnConstructor", "hasIsPrototypeOf", "key", "setProperty", "target", "options", "getProperty", "name", "extend", "src", "copy", "copyIsArray", "clone", "i", "length", "deep", "require_dist", "__commonJSMin", "exports", "module", "typedArrayTypeNames", "isTypedArrayName", "name", "objectTypeNames", "isObjectTypeName", "primitiveTypeNames", "isPrimitiveTypeName", "isOfType", "type", "value", "toString", "getObjectType", "objectTypeName", "is", "isObjectOfType", "tagType", "isNumberType", "assertion", "_a", "_b", "_c", "_d", "hasPromiseAPI", "instance", "class_", "prototype", "isValidLength", "range", "NODE_TYPE_ELEMENT", "DOM_PROPERTIES_TO_CHECK", "property", "isAbsoluteMod2", "remainder", "isWhiteSpaceString", "predicateOnArray", "method", "predicate", "values", "singlePredicate", "assertType", "condition", "description", "require_emojis", "__commonJSMin", "exports", "module", "require_ordered", "__commonJSMin", "exports", "module", "require_emojilib", "__commonJSMin", "exports", "module", "require_char_regex", "__commonJSMin", "exports", "module", "astralRange", "comboMarksRange", "comboHalfMarksRange", "comboSymbolsRange", "comboMarksExtendedRange", "comboMarksSupplementRange", "comboRange", "varRange", "familyRange", "astral", "combo", "fitz", "modifier", "nonAstral", "regional", "surrogatePair", "zwj", "blackFlag", "family", "optModifier", "optVar", "optJoin", "seq", "symbol", "require_unicode_emoji_modifier_base", "__commonJSMin", "exports", "module", "require_skin_tone", "__commonJSMin", "exports", "module", "emojiModifierBase", "skinTones", "emoji", "tone", "require_is_url", "__commonJSMin", "exports", "module", "isUrl", "protocolAndDomainRE", "localhostDomainRE", "nonLocalhostDomainRE", "string", "match", "everythingAfterProtocol", "emptyOptions", "toString", "value", "options", "settings", "includeImageAlt", "includeHtml", "one", "node", "all", "values", "result", "index", "splice", "list", "start", "remove", "items", "end", "chunkStart", "parameters", "push", "hasOwnProperty", "combineExtensions", "extensions", "all", "index", "syntaxExtension", "extension", "hook", "left", "right", "code", "value", "constructs", "existing", "list", "before", "splice", "unicodePunctuationRegex", "asciiAlpha", "regexCheck", "asciiAlphanumeric", "asciiAtext", "asciiDigit", "regexCheck", "asciiHexDigit", "asciiPunctuation", "markdownSpace", "code", "unicodePunctuation", "regexCheck", "unicodePunctuationRegex", "unicodeWhitespace", "regex", "check", "factorySpace", "effects", "ok", "type", "max", "limit", "size", "start", "code", "markdownSpace", "prefix", "unicodePunctuationRegex", "asciiAlpha", "regexCheck", "asciiAlphanumeric", "asciiAtext", "asciiDigit", "regexCheck", "asciiHexDigit", "asciiPunctuation", "markdownLineEnding", "code", "unicodePunctuation", "regexCheck", "unicodePunctuationRegex", "unicodeWhitespace", "regex", "check", "code", "content", "initializeContent", "effects", "contentStart", "afterContentStartConstruct", "paragraphInitial", "previous", "code", "factorySpace", "lineStart", "token", "data", "markdownLineEnding", "document", "initializeDocument", "containerConstruct", "tokenizeContainer", "effects", "self", "stack", "continued", "childFlow", "childToken", "lineStartOffset", "start", "code", "item", "documentContinue", "checkNewContainers", "closeFlow", "indexBeforeExits", "indexBeforeFlow", "point", "exitContainers", "index", "splice", "documentContinued", "flowStart", "thereIsANewContainer", "thereIsNoNewContainer", "containerContinue", "flowContinue", "writeToChild", "markdownLineEnding", "token", "eof", "stream", "seen", "size", "entry", "ok", "nok", "factorySpace", "unicodePunctuationRegex", "asciiAlpha", "regexCheck", "asciiAlphanumeric", "asciiAtext", "asciiDigit", "regexCheck", "asciiHexDigit", "asciiPunctuation", "markdownLineEndingOrSpace", "code", "unicodePunctuation", "regexCheck", "unicodePunctuationRegex", "unicodeWhitespace", "regex", "check", "code", "classifyCharacter", "code", "markdownLineEndingOrSpace", "unicodeWhitespace", "unicodePunctuation", "resolveAll", "constructs", "events", "context", "called", "index", "resolve", "attention", "tokenizeAttention", "resolveAllAttention", "events", "context", "index", "open", "group", "text", "openingSequence", "closingSequence", "use", "nextEvents", "offset", "start", "end", "movePoint", "push", "resolveAll", "splice", "effects", "ok", "attentionMarkers", "previous", "before", "classifyCharacter", "marker", "code", "inside", "token", "after", "close", "point", "unicodePunctuationRegex", "asciiAlpha", "regexCheck", "asciiAlphanumeric", "asciiAtext", "asciiControl", "code", "asciiDigit", "asciiHexDigit", "asciiPunctuation", "markdownLineEnding", "markdownLineEndingOrSpace", "markdownSpace", "unicodePunctuation", "unicodePunctuationRegex", "unicodeWhitespace", "regex", "check", "autolink", "tokenizeAutolink", "effects", "ok", "nok", "size", "start", "code", "open", "asciiAlpha", "schemeOrEmailAtext", "emailAtext", "asciiAlphanumeric", "schemeInsideOrEmailAtext", "urlInside", "asciiControl", "emailAtSignOrDot", "asciiAtext", "emailLabel", "emailValue", "next", "blankLine", "tokenizeBlankLine", "effects", "ok", "nok", "start", "code", "markdownSpace", "factorySpace", "after", "markdownLineEnding", "blockQuote", "tokenizeBlockQuoteStart", "tokenizeBlockQuoteContinuation", "exit", "effects", "ok", "nok", "self", "start", "code", "state", "after", "markdownSpace", "contStart", "factorySpace", "contBefore", "characterEscape", "tokenizeCharacterEscape", "effects", "ok", "nok", "start", "code", "inside", "asciiPunctuation", "element", "decodeNamedCharacterReference", "value", "characterReference", "char", "characterReference", "tokenizeCharacterReference", "effects", "ok", "nok", "self", "size", "max", "test", "start", "code", "open", "numeric", "asciiAlphanumeric", "value", "asciiHexDigit", "asciiDigit", "token", "decodeNamedCharacterReference", "nonLazyContinuation", "tokenizeNonLazyContinuation", "codeFenced", "tokenizeCodeFenced", "effects", "ok", "nok", "self", "closeStart", "tokenizeCloseStart", "initialPrefix", "sizeOpen", "marker", "start", "code", "beforeSequenceOpen", "tail", "sequenceOpen", "markdownSpace", "factorySpace", "infoBefore", "markdownLineEnding", "atNonLazyBreak", "after", "info", "metaBefore", "meta", "contentBefore", "contentStart", "beforeContentChunk", "contentChunk", "size", "startBefore", "beforeSequenceClose", "sequenceClose", "sequenceCloseAfter", "lineStart", "codeIndented", "tokenizeCodeIndented", "furtherStart", "tokenizeFurtherStart", "effects", "ok", "nok", "self", "start", "code", "factorySpace", "afterPrefix", "tail", "atBreak", "after", "markdownLineEnding", "inside", "codeText", "tokenizeCodeText", "resolveCodeText", "previous", "events", "tailExitIndex", "headEnterIndex", "index", "enter", "code", "effects", "ok", "nok", "self", "sizeOpen", "size", "token", "start", "sequenceOpen", "between", "sequenceClose", "markdownLineEnding", "data", "subtokenize", "events", "jumps", "index", "event", "lineIndex", "otherIndex", "otherEvent", "parameters", "subevents", "more", "subcontent", "splice", "eventIndex", "token", "context", "startPosition", "startPositions", "tokenizer", "childEvents", "gaps", "stream", "previous", "current", "adjust", "start", "breaks", "slice", "content", "tokenizeContent", "resolveContent", "continuationConstruct", "tokenizeContinuation", "events", "subtokenize", "effects", "ok", "previous", "chunkStart", "code", "chunkInside", "contentEnd", "markdownLineEnding", "contentContinue", "nok", "self", "startLookahead", "factorySpace", "prefixed", "tail", "unicodePunctuationRegex", "asciiAlpha", "regexCheck", "asciiAlphanumeric", "asciiAtext", "asciiControl", "code", "asciiDigit", "asciiHexDigit", "asciiPunctuation", "markdownLineEnding", "markdownLineEndingOrSpace", "unicodePunctuation", "regexCheck", "unicodePunctuationRegex", "unicodeWhitespace", "regex", "check", "code", "factoryDestination", "effects", "ok", "nok", "type", "literalType", "literalMarkerType", "rawType", "stringType", "max", "limit", "balance", "start", "code", "enclosedBefore", "asciiControl", "raw", "enclosed", "markdownLineEnding", "enclosedEscape", "markdownLineEndingOrSpace", "rawEscape", "unicodePunctuationRegex", "asciiAlpha", "regexCheck", "asciiAlphanumeric", "asciiAtext", "asciiDigit", "regexCheck", "asciiHexDigit", "asciiPunctuation", "markdownLineEnding", "code", "markdownSpace", "code", "unicodePunctuation", "regexCheck", "unicodePunctuationRegex", "unicodeWhitespace", "regex", "check", "factoryLabel", "effects", "ok", "nok", "type", "markerType", "stringType", "self", "size", "seen", "start", "code", "atBreak", "markdownLineEnding", "labelInside", "markdownSpace", "labelEscape", "unicodePunctuationRegex", "asciiAlpha", "regexCheck", "asciiAlphanumeric", "asciiAtext", "asciiDigit", "regexCheck", "asciiHexDigit", "asciiPunctuation", "markdownLineEnding", "code", "unicodePunctuation", "regexCheck", "unicodePunctuationRegex", "unicodeWhitespace", "regex", "check", "code", "factoryTitle", "effects", "ok", "nok", "type", "markerType", "stringType", "marker", "start", "code", "begin", "atBreak", "markdownLineEnding", "factorySpace", "inside", "escape", "unicodePunctuationRegex", "asciiAlpha", "regexCheck", "asciiAlphanumeric", "asciiAtext", "asciiDigit", "regexCheck", "asciiHexDigit", "asciiPunctuation", "markdownLineEnding", "code", "markdownSpace", "code", "unicodePunctuation", "regexCheck", "unicodePunctuationRegex", "unicodeWhitespace", "regex", "check", "factoryWhitespace", "effects", "ok", "seen", "start", "code", "markdownLineEnding", "markdownSpace", "factorySpace", "normalizeIdentifier", "value", "definition", "tokenizeDefinition", "titleBefore", "tokenizeTitleBefore", "effects", "ok", "nok", "self", "identifier", "start", "code", "before", "factoryLabel", "labelAfter", "normalizeIdentifier", "markerAfter", "markdownLineEndingOrSpace", "factoryWhitespace", "destinationBefore", "factoryDestination", "destinationAfter", "after", "markdownSpace", "factorySpace", "afterWhitespace", "markdownLineEnding", "beforeMarker", "factoryTitle", "titleAfter", "titleAfterOptionalWhitespace", "hardBreakEscape", "tokenizeHardBreakEscape", "effects", "ok", "nok", "start", "code", "after", "markdownLineEnding", "headingAtx", "tokenizeHeadingAtx", "resolveHeadingAtx", "events", "context", "contentEnd", "contentStart", "content", "text", "splice", "effects", "ok", "nok", "size", "start", "code", "before", "sequenceOpen", "markdownLineEndingOrSpace", "atBreak", "sequenceFurther", "markdownLineEnding", "markdownSpace", "factorySpace", "data", "htmlBlockNames", "htmlRawNames", "htmlFlow", "tokenizeHtmlFlow", "resolveToHtmlFlow", "blankLineBefore", "tokenizeBlankLineBefore", "nonLazyContinuationStart", "tokenizeNonLazyContinuationStart", "events", "index", "effects", "ok", "nok", "self", "marker", "closingTag", "buffer", "markerB", "start", "code", "before", "open", "declarationOpen", "tagCloseStart", "continuationDeclarationInside", "asciiAlpha", "tagName", "commentOpenInside", "cdataOpenInside", "value", "continuation", "markdownLineEndingOrSpace", "slash", "name", "htmlRawNames", "htmlBlockNames", "basicSelfClosing", "completeClosingTagAfter", "completeAttributeNameBefore", "asciiAlphanumeric", "markdownSpace", "completeEnd", "completeAttributeName", "completeAttributeNameAfter", "completeAttributeValueBefore", "completeAttributeValueQuoted", "completeAttributeValueUnquoted", "completeAttributeValueQuotedAfter", "markdownLineEnding", "completeAfter", "continuationCommentInside", "continuationRawTagOpen", "continuationClose", "continuationCdataInside", "continuationAfter", "continuationStart", "continuationStartNonLazy", "continuationBefore", "continuationRawEndTag", "after", "blankLine", "htmlText", "tokenizeHtmlText", "effects", "ok", "nok", "self", "marker", "index", "returnState", "start", "code", "open", "declarationOpen", "tagCloseStart", "instruction", "asciiAlpha", "tagOpen", "commentOpenInside", "cdataOpenInside", "declaration", "commentEnd", "comment", "commentClose", "markdownLineEnding", "lineEndingBefore", "end", "value", "cdata", "cdataClose", "cdataEnd", "instructionClose", "tagClose", "asciiAlphanumeric", "tagCloseBetween", "markdownSpace", "markdownLineEndingOrSpace", "tagOpenBetween", "tagOpenAttributeName", "tagOpenAttributeNameAfter", "tagOpenAttributeValueBefore", "tagOpenAttributeValueQuoted", "tagOpenAttributeValueUnquoted", "tagOpenAttributeValueQuotedAfter", "lineEndingAfter", "factorySpace", "lineEndingAfterPrefix", "labelEnd", "tokenizeLabelEnd", "resolveToLabelEnd", "resolveAllLabelEnd", "resourceConstruct", "tokenizeResource", "referenceFullConstruct", "tokenizeReferenceFull", "referenceCollapsedConstruct", "tokenizeReferenceCollapsed", "events", "index", "token", "context", "offset", "open", "close", "media", "group", "label", "text", "push", "resolveAll", "splice", "effects", "ok", "nok", "self", "labelStart", "defined", "start", "code", "labelEndNok", "normalizeIdentifier", "after", "labelEndOk", "referenceNotFull", "resourceStart", "resourceBefore", "markdownLineEndingOrSpace", "factoryWhitespace", "resourceOpen", "resourceEnd", "factoryDestination", "resourceDestinationAfter", "resourceDestinationMissing", "resourceBetween", "factoryTitle", "resourceTitleAfter", "referenceFull", "factoryLabel", "referenceFullAfter", "referenceFullMissing", "referenceCollapsedStart", "referenceCollapsedOpen", "labelStartImage", "tokenizeLabelStartImage", "labelEnd", "effects", "ok", "nok", "self", "start", "code", "open", "after", "labelStartLink", "tokenizeLabelStartLink", "labelEnd", "effects", "ok", "nok", "self", "start", "code", "after", "lineEnding", "tokenizeLineEnding", "effects", "ok", "start", "code", "factorySpace", "thematicBreak", "tokenizeThematicBreak", "effects", "ok", "nok", "size", "marker", "start", "code", "before", "atBreak", "sequence", "markdownLineEnding", "markdownSpace", "factorySpace", "list", "tokenizeListStart", "tokenizeListContinuation", "tokenizeListEnd", "listItemPrefixWhitespaceConstruct", "tokenizeListItemPrefixWhitespace", "indentConstruct", "tokenizeIndent", "effects", "ok", "nok", "self", "tail", "initialSize", "size", "start", "code", "kind", "asciiDigit", "thematicBreak", "atMarker", "inside", "blankLine", "onBlank", "endOfPrefix", "otherPrefix", "markdownSpace", "notBlank", "factorySpace", "notInCurrentItem", "afterPrefix", "setextUnderline", "tokenizeSetextUnderline", "resolveToSetextUnderline", "events", "context", "index", "content", "text", "definition", "heading", "effects", "ok", "nok", "self", "marker", "start", "code", "paragraph", "before", "inside", "markdownSpace", "factorySpace", "after", "markdownLineEnding", "flow", "initializeFlow", "effects", "self", "initial", "blankLine", "atBlankEnding", "afterConstruct", "factorySpace", "content", "code", "resolver", "createResolver", "string", "initializeFactory", "text", "field", "initializeText", "resolveAllLineSuffixes", "effects", "self", "constructs", "start", "notText", "code", "atBreak", "data", "list", "index", "item", "extraResolver", "resolveAllText", "events", "context", "enter", "eventIndex", "chunks", "bufferIndex", "size", "tabs", "chunk", "token", "createTokenizer", "parser", "initialize", "from", "point", "columnStart", "resolveAllConstructs", "chunks", "stack", "consumed", "effects", "consume", "enter", "exit", "constructFactory", "onsuccessfulconstruct", "onsuccessfulcheck", "context", "sliceStream", "sliceSerialize", "now", "defineSkip", "write", "state", "expectedCode", "slice", "push", "main", "addResult", "resolveAll", "token", "expandTabs", "serializeChunks", "sliceChunks", "line", "column", "offset", "_index", "_bufferIndex", "value", "accountForPotentialSkip", "chunkIndex", "chunk", "go", "code", "markdownLineEnding", "type", "fields", "construct", "info", "_", "onreturn", "hook", "constructs", "returnState", "bogusState", "listOfConstructs", "constructIndex", "currentConstruct", "handleListOfConstructs", "handleMapOfConstructs", "map", "start", "def", "all", "list", "handleConstruct", "store", "nok", "ok", "splice", "startPoint", "startPrevious", "startCurrentConstruct", "startEventsIndex", "startStack", "restore", "startIndex", "startBufferIndex", "endIndex", "endBufferIndex", "view", "head", "index", "result", "atTab", "constructs_exports", "__export", "attentionMarkers", "contentInitial", "disable", "document", "flow", "flowInitial", "insideSpan", "string", "text", "document", "list", "blockQuote", "contentInitial", "definition", "flowInitial", "codeIndented", "flow", "headingAtx", "thematicBreak", "setextUnderline", "htmlFlow", "codeFenced", "string", "characterReference", "characterEscape", "text", "lineEnding", "labelStartImage", "attention", "autolink", "htmlText", "labelStartLink", "hardBreakEscape", "labelEnd", "codeText", "insideSpan", "resolver", "attentionMarkers", "disable", "parse", "options", "constructs", "combineExtensions", "constructs_exports", "parser", "create", "content", "document", "flow", "string", "text", "initial", "creator", "from", "createTokenizer", "search", "preprocess", "column", "buffer", "start", "atCarriageReturn", "preprocessor", "value", "encoding", "end", "chunks", "match", "next", "startPosition", "endPosition", "code", "postprocess", "events", "subtokenize", "decodeNumericCharacterReference", "value", "base", "code", "characterEscapeOrReference", "decodeString", "value", "decode", "$0", "$1", "$2", "head", "hex", "decodeNumericCharacterReference", "decodeNamedCharacterReference", "stringifyPosition", "value", "position", "point", "index", "pos", "own", "fromMarkdown", "value", "encoding", "options", "compiler", "postprocess", "parse", "preprocess", "config", "opener", "link", "onenterdata", "heading", "blockQuote", "codeFlow", "buffer", "codeText", "definition", "emphasis", "hardBreak", "html", "image", "listItem", "onenterlistitemvalue", "list", "onenterlistordered", "paragraph", "onenterreference", "strong", "thematicBreak", "closer", "onexitatxheadingsequence", "onexitautolinkemail", "onexitautolinkprotocol", "onexitdata", "onexitcharacterreferencemarker", "onexitcharacterreferencevalue", "onexitcodefenced", "onexitcodefencedfence", "onexitcodefencedfenceinfo", "onexitcodefencedfencemeta", "onexitcodeindented", "onexitcodetext", "onexitdefinitiondestinationstring", "onexitdefinitionlabelstring", "onexitdefinitiontitlestring", "onexithardbreak", "onexithtmlflow", "onexithtmltext", "onexitimage", "onexitlabel", "onexitlabeltext", "onexitlineending", "onexitlink", "onexitreferencestring", "onexitresourcedestinationstring", "onexitresourcetitlestring", "onexitresource", "onexitsetextheading", "onexitsetextheadinglinesequence", "onexitsetextheadingtext", "configure", "data", "compile", "events", "tree", "context", "enter", "exit", "resume", "setData", "getData", "listStack", "index", "tail", "prepareList", "handler", "defaultOnError", "point", "start", "length", "containerBalance", "listSpread", "lineIndex", "firstBlankLineIndex", "atMarker", "event", "tailIndex", "tailEvent", "key", "create", "and", "open", "token", "node", "errorHandler", "close", "onExitError", "stringifyPosition", "toString", "ancestor", "label", "normalizeIdentifier", "depth", "text", "referenceType", "string", "decodeString", "fragment", "children", "type", "decodeNumericCharacterReference", "decodeNamedCharacterReference", "d", "combined", "extensions", "extension", "right", "left", "remarkParse", "options", "doc", "settings", "fromMarkdown", "blockquote", "state", "node", "result", "hardBreak", "state", "node", "result", "code", "state", "node", "value", "lang", "properties", "result", "strikethrough", "state", "node", "result", "emphasis", "state", "node", "result", "unicodePunctuationRegex", "asciiAlpha", "regexCheck", "asciiAlphanumeric", "asciiAtext", "asciiDigit", "regexCheck", "asciiHexDigit", "asciiPunctuation", "unicodePunctuation", "regexCheck", "unicodePunctuationRegex", "unicodeWhitespace", "regex", "check", "code", "normalizeUri", "value", "result", "index", "start", "skip", "code", "replace", "asciiAlphanumeric", "next", "footnoteReference", "state", "node", "id", "safeId", "normalizeUri", "index", "counter", "reuseCounter", "link", "sup", "footnote", "state", "node", "footnoteById", "no", "identifier", "footnoteReference", "heading", "state", "node", "result", "html", "state", "node", "result", "revert", "state", "node", "subtype", "suffix", "contents", "head", "tail", "imageReference", "state", "node", "def", "revert", "properties", "normalizeUri", "result", "image", "state", "node", "properties", "normalizeUri", "result", "inlineCode", "state", "node", "text", "result", "linkReference", "state", "node", "def", "revert", "properties", "normalizeUri", "result", "link", "state", "node", "properties", "normalizeUri", "result", "listItem", "state", "node", "parent", "results", "loose", "listLoose", "listItemLoose", "properties", "children", "head", "paragraph", "index", "child", "tail", "result", "spread", "list", "state", "node", "properties", "results", "index", "child", "result", "paragraph", "state", "node", "result", "root", "state", "node", "result", "strong", "state", "node", "result", "pointStart", "point", "pointEnd", "position", "node", "type", "table", "state", "node", "rows", "firstRow", "tableContent", "head", "body", "start", "pointStart", "end", "pointEnd", "result", "tableRow", "state", "node", "parent", "siblings", "tagName", "align", "length", "cellIndex", "cells", "cell", "properties", "alignValue", "result", "tableCell", "state", "node", "result", "trimLines", "value", "source", "search", "match", "last", "lines", "trimLine", "start", "end", "startIndex", "endIndex", "code", "text", "state", "node", "result", "trimLines", "thematicBreak", "state", "node", "result", "handlers", "blockquote", "hardBreak", "code", "strikethrough", "emphasis", "footnoteReference", "footnote", "heading", "html", "imageReference", "image", "inlineCode", "linkReference", "link", "listItem", "list", "paragraph", "root", "strong", "table", "tableCell", "tableRow", "text", "thematicBreak", "ignore", "is", "node", "test", "index", "parent", "context", "check", "convert", "ok", "typeFactory", "anyFactory", "propsFactory", "castFactory", "tests", "checks", "any", "parameters", "all", "key", "type", "assertion", "CONTINUE", "EXIT", "SKIP", "visitParents", "tree", "test", "visitor", "reverse", "is", "convert", "step", "factory", "node", "index", "parents", "value", "name", "visit", "result", "subresult", "offset", "grandparents", "toResult", "visit", "tree", "test", "visitor", "reverse", "visitParents", "overload", "node", "parents", "parent", "generated", "node", "visit", "tree", "test", "visitor", "reverse", "visitParents", "overload", "node", "parents", "parent", "own", "definitions", "tree", "cache", "visit", "definition", "id", "clean", "identifier", "value", "own", "createState", "tree", "options", "settings", "dangerous", "footnoteById", "state", "handlers", "definitions", "patch", "applyData", "oneBound", "allBound", "wrap", "augment", "visit", "definition", "id", "left", "right", "data", "ctx", "generated", "pointStart", "pointEnd", "node", "tagName", "props", "children", "parent", "one", "all", "from", "to", "position", "result", "hName", "hChildren", "hProperties", "type", "defaultUnknownHandler", "values", "nodes", "index", "head", "loose", "footer", "state", "listItems", "index", "def", "content", "id", "safeId", "normalizeUri", "referenceIndex", "backReferences", "backReference", "tail", "tailTail", "listItem", "toHast", "tree", "options", "state", "createState", "node", "foot", "footer", "remarkRehype", "destination", "options", "bridge", "mutate", "lib_default", "node", "file", "next", "toHast", "error", "htmlVoidElements", "Schema", "property", "normal", "space", "merge", "definitions", "space", "property", "normal", "index", "Schema", "normalize", "value", "Info", "property", "attribute", "types_exports", "__export", "boolean", "booleanish", "commaOrSpaceSeparated", "commaSeparated", "number", "overloadedBoolean", "spaceSeparated", "powers", "increment", "checks", "types_exports", "DefinedInfo", "Info", "property", "attribute", "mask", "space", "index", "mark", "check", "values", "key", "value", "own", "create", "definition", "property", "normal", "prop", "value", "info", "DefinedInfo", "normalize", "Schema", "xlink", "create", "_", "prop", "xml", "create", "_", "prop", "caseSensitiveTransform", "attributes", "attribute", "caseInsensitiveTransform", "attributes", "property", "caseSensitiveTransform", "xmlns", "create", "caseInsensitiveTransform", "aria", "create", "_", "prop", "booleanish", "number", "spaceSeparated", "html", "create", "caseInsensitiveTransform", "commaSeparated", "spaceSeparated", "boolean", "number", "booleanish", "overloadedBoolean", "svg", "create", "caseSensitiveTransform", "commaOrSpaceSeparated", "number", "spaceSeparated", "boolean", "commaSeparated", "valid", "dash", "cap", "find", "schema", "value", "normal", "normalize", "prop", "Type", "Info", "rest", "camelcase", "dashes", "kebab", "DefinedInfo", "$0", "html", "merge", "xml", "xlink", "xmlns", "aria", "svg", "own", "zwitch", "key", "options", "settings", "one", "value", "parameters", "fn", "handlers", "id", "core", "value", "options", "charactersToExpression", "basic", "surrogate", "pair", "index", "all", "character", "subset", "groups", "toHexadecimal", "code", "next", "omit", "value", "toDecimal", "code", "next", "omit", "value", "characterEntitiesLegacy", "characterEntitiesHtml4", "dangerous", "own", "characters", "key", "characterEntitiesHtml4", "toNamed", "code", "next", "omit", "attribute", "character", "name", "value", "characterEntitiesLegacy", "dangerous", "formatSmart", "code", "next", "options", "numeric", "toHexadecimal", "named", "toNamed", "decimal", "toDecimal", "formatBasic", "code", "stringifyEntities", "value", "options", "core", "formatSmart", "stringifyEntitiesLight", "formatBasic", "comment", "node", "_1", "_2", "state", "stringifyEntities", "encode", "$0", "doctype", "_1", "_2", "_3", "state", "ccount", "value", "character", "source", "count", "index", "parse", "value", "tokens", "input", "index", "start", "end", "token", "stringify", "values", "options", "settings", "parse", "value", "input", "stringify", "values", "re", "whitespace", "thing", "empty", "value", "siblingAfter", "siblings", "siblingBefore", "emptyChildren", "increment", "sibling", "parent", "index", "includeWhitespace", "offset", "next", "whitespace", "own", "omission", "handlers", "omit", "node", "index", "parent", "closing", "omission", "body", "headOrColgroupOrCaption", "dd", "dt", "html", "li", "optgroup", "option", "p", "rubyElement", "tbody", "cells", "tfoot", "thead", "tr", "_", "index", "parent", "next", "siblingAfter", "whitespace", "opening", "omission", "body", "colgroup", "head", "html", "tbody", "node", "siblingAfter", "children", "seen", "index", "child", "whitespace", "parent", "previous", "siblingBefore", "closing", "constants", "element", "node", "index", "parent", "state", "schema", "omit", "selfClosing", "parts", "last", "svg", "attrs", "serializeAttributes", "content", "opening", "closing", "props", "values", "key", "value", "serializeAttribute", "info", "find", "x", "y", "quote", "result", "name", "stringifyEntities", "stringify", "ccount", "text", "node", "_", "parent", "state", "stringifyEntities", "raw", "node", "index", "parent", "state", "text", "root", "node", "_1", "_2", "state", "handle", "zwitch", "invalid", "unknown", "comment", "doctype", "element", "raw", "root", "text", "node", "node_", "emptyOptions", "emptyCharacterReferences", "emptyChildren", "toHtml", "tree", "options", "options_", "quote", "alternative", "one", "all", "htmlVoidElements", "svg", "html", "node", "index", "parent", "handle", "results", "children", "rehypeStringify", "options", "self", "settings", "compiler", "tree", "toHtml", "unicodePunctuationRegex", "asciiAlpha", "regexCheck", "asciiAlphanumeric", "asciiAtext", "asciiControl", "code", "asciiDigit", "asciiHexDigit", "asciiPunctuation", "markdownLineEndingOrSpace", "code", "unicodePunctuation", "regexCheck", "unicodePunctuationRegex", "unicodeWhitespace", "regex", "check", "code", "wwwPrefix", "tokenizeWwwPrefix", "domain", "tokenizeDomain", "path", "tokenizePath", "trail", "tokenizeTrail", "emailDomainDotTrail", "tokenizeEmailDomainDotTrail", "wwwAutolink", "tokenizeWwwAutolink", "previousWww", "protocolAutolink", "tokenizeProtocolAutolink", "previousProtocol", "emailAutolink", "tokenizeEmailAutolink", "previousEmail", "text", "gfmAutolinkLiteral", "code", "effects", "ok", "nok", "self", "dot", "data", "start", "gfmAtext", "previousUnbalanced", "atext", "emailDomain", "emailDomainAfter", "emailDomainDot", "asciiAlphanumeric", "asciiAlpha", "wwwStart", "wwwAfter", "buffer", "seen", "protocolStart", "protocolPrefixInside", "protocol", "protocolSlashesInside", "afterProtocol", "asciiControl", "markdownLineEndingOrSpace", "unicodeWhitespace", "unicodePunctuation", "protocolAfter", "size", "wwwPrefixInside", "wwwPrefixAfter", "underscoreInLastSegment", "underscoreInLastLastSegment", "domainInside", "domainAfter", "domainAtPunctuation", "sizeOpen", "sizeClose", "pathInside", "pathAtPunctuation", "trailCharRefStart", "trailBracketAfter", "trailCharRefInside", "after", "events", "index", "result", "token", "unicodePunctuationRegex", "asciiAlpha", "regexCheck", "asciiAlphanumeric", "asciiAtext", "asciiDigit", "regexCheck", "asciiHexDigit", "asciiPunctuation", "markdownLineEndingOrSpace", "code", "unicodePunctuation", "regexCheck", "unicodePunctuationRegex", "unicodeWhitespace", "regex", "check", "code", "indent", "tokenizeIndent", "gfmFootnote", "tokenizeDefinitionStart", "tokenizeDefinitionContinuation", "gfmFootnoteDefinitionEnd", "tokenizeGfmFootnoteCall", "tokenizePotentialGfmFootnoteCall", "resolveToPotentialGfmFootnoteCall", "effects", "ok", "nok", "self", "index", "defined", "labelStart", "token", "start", "code", "id", "normalizeIdentifier", "events", "context", "call", "marker", "string", "chunk", "replacement", "size", "data", "callStart", "callData", "markdownLineEndingOrSpace", "callEscape", "identifier", "labelAtMarker", "labelInside", "labelAfter", "labelEscape", "factorySpace", "whitespaceAfter", "blankLine", "afterPrefix", "tail", "gfmStrikethrough", "options", "single", "tokenizer", "tokenizeStrikethrough", "resolveAllStrikethrough", "events", "context", "index", "open", "strikethrough", "text", "nextEvents", "insideSpan", "splice", "resolveAll", "effects", "ok", "nok", "previous", "size", "start", "code", "more", "before", "classifyCharacter", "token", "after", "unicodePunctuationRegex", "asciiAlpha", "regexCheck", "asciiAlphanumeric", "asciiAtext", "asciiDigit", "regexCheck", "asciiHexDigit", "asciiPunctuation", "markdownLineEnding", "code", "markdownLineEndingOrSpace", "markdownSpace", "unicodePunctuation", "unicodePunctuationRegex", "unicodeWhitespace", "regex", "check", "EditMap", "index", "remove", "add", "addImpl", "events", "a", "b", "vecs", "slice", "editMap", "at", "gfmTableAlign", "events", "index", "inDelimiterRow", "align", "event", "alignIndex", "gfmTable", "tokenizeTable", "resolveTable", "effects", "ok", "nok", "self", "size", "sizeB", "seen", "start", "code", "index", "type", "tail", "next", "bodyRowStart", "headRowBefore", "headRowStart", "headRowBreak", "markdownLineEnding", "headDelimiterStart", "markdownSpace", "factorySpace", "headRowData", "markdownLineEndingOrSpace", "headRowEscape", "headDelimiterBefore", "headDelimiterValueBefore", "headDelimiterCellBefore", "headDelimiterNok", "headDelimiterLeftAlignmentAfter", "headDelimiterCellAfter", "headDelimiterFiller", "headDelimiterRightAlignmentAfter", "bodyRowBreak", "bodyRowData", "bodyRowEscape", "events", "context", "inFirstCellAwaitingPipe", "rowKind", "lastCell", "cell", "afterHeadAwaitingFirstBodyRow", "lastTableEnd", "currentTable", "currentBody", "currentCell", "map", "EditMap", "event", "token", "flushTableEnd", "flushCell", "gfmTableAlign", "range", "rowEnd", "previousCell", "groupName", "valueName", "getPoint", "now", "relatedStart", "relatedEnd", "valueToken", "end", "a", "table", "tableBody", "exits", "related", "side", "unicodePunctuationRegex", "asciiAlpha", "regexCheck", "asciiAlphanumeric", "asciiAtext", "asciiDigit", "regexCheck", "asciiHexDigit", "asciiPunctuation", "markdownLineEnding", "code", "markdownLineEndingOrSpace", "markdownSpace", "unicodePunctuation", "unicodePunctuationRegex", "unicodeWhitespace", "regex", "check", "tasklistCheck", "tokenizeTasklistCheck", "gfmTaskListItem", "effects", "ok", "nok", "self", "open", "code", "inside", "markdownLineEndingOrSpace", "close", "after", "markdownLineEnding", "markdownSpace", "spaceThenNonSpace", "factorySpace", "gfm", "options", "combineExtensions", "gfmAutolinkLiteral", "gfmFootnote", "gfmStrikethrough", "gfmTable", "gfmTaskListItem", "escapeStringRegexp", "string", "own", "findAndReplace", "tree", "find", "replace", "options", "settings", "schema", "ignored", "convert", "pairs", "toPairs", "pairIndex", "visitParents", "visitor", "node", "parents", "index", "grandparent", "parent", "handler", "start", "change", "nodes", "match", "position", "matchObject", "value", "result", "toExpression", "toFunction", "key", "escapeStringRegexp", "unicodePunctuationRegex", "asciiAlpha", "regexCheck", "asciiAlphanumeric", "asciiAtext", "asciiDigit", "regexCheck", "asciiHexDigit", "asciiPunctuation", "unicodePunctuation", "regexCheck", "unicodePunctuationRegex", "unicodeWhitespace", "regex", "check", "code", "inConstruct", "notInConstruct", "gfmAutolinkLiteralFromMarkdown", "transformGfmAutolinkLiterals", "enterLiteralAutolink", "enterLiteralAutolinkValue", "exitLiteralAutolink", "exitLiteralAutolinkEmail", "exitLiteralAutolinkHttp", "exitLiteralAutolinkWww", "gfmAutolinkLiteralToMarkdown", "token", "node", "tree", "findAndReplace", "findUrl", "findEmail", "_", "protocol", "domain", "path", "match", "prefix", "previous", "isCorrectDomain", "parts", "splitUrl", "result", "atext", "label", "url", "trailExec", "trail", "closingParenIndex", "openingParens", "ccount", "closingParens", "email", "code", "unicodeWhitespace", "unicodePunctuation", "association", "node", "decodeString", "containerFlow", "parent", "state", "info", "indexStack", "children", "tracker", "results", "index", "child", "between", "left", "right", "result", "eol", "indentLines", "value", "map", "result", "start", "line", "match", "one", "patternCompile", "pattern", "before", "patternInScope", "stack", "pattern", "listInScope", "list", "none", "index", "safe", "state", "input", "config", "value", "positions", "result", "infos", "index", "pattern", "patternInScope", "expression", "patternCompile", "match", "before", "after", "position", "numerical", "start", "end", "escapeBackslashes", "a", "b", "results", "whole", "track", "config", "options", "now", "lineShift", "line", "column", "move", "current", "shift", "value", "input", "chunks", "tail", "footnoteReference", "footnoteReferencePeek", "gfmFootnoteFromMarkdown", "enterFootnoteDefinition", "enterFootnoteDefinitionLabelString", "enterFootnoteCall", "enterFootnoteCallString", "exitFootnoteDefinition", "exitFootnoteDefinitionLabelString", "exitFootnoteCall", "exitFootnoteCallString", "gfmFootnoteToMarkdown", "footnoteDefinition", "token", "label", "node", "normalizeIdentifier", "_", "context", "safeOptions", "tracker", "track", "value", "exit", "subexit", "safe", "association", "indentLines", "containerFlow", "map", "line", "index", "blank", "containerPhrasing", "parent", "state", "info", "indexStack", "children", "results", "index", "before", "tracker", "child", "after", "handle", "constructsWithoutStrikethrough", "handleDelete", "peekDelete", "gfmStrikethroughFromMarkdown", "enterStrikethrough", "exitStrikethrough", "gfmStrikethroughToMarkdown", "token", "node", "_", "context", "safeOptions", "tracker", "track", "exit", "value", "containerPhrasing", "inlineCode", "inlineCodePeek", "node", "_", "state", "value", "sequence", "index", "pattern", "expression", "patternCompile", "match", "position", "markdownTable", "table", "options", "align", "stringLength", "defaultStringLength", "alignments", "cellMatrix", "sizeMatrix", "longestCellByColumn", "mostCellsPerRow", "rowIndex", "row", "sizes", "columnIndex", "cell", "serialize", "size", "toAlignment", "code", "before", "after", "lines", "line", "value", "gfmTableFromMarkdown", "enterTable", "enterCell", "enterRow", "exitCodeText", "exitTable", "exit", "token", "align", "d", "value", "replace", "node", "$0", "$1", "gfmTableToMarkdown", "options", "settings", "padding", "alignDelimiters", "stringLength", "around", "handleTable", "handleTableRow", "handleTableCell", "inlineCodeWithTable", "_", "context", "safeOptions", "serializeData", "handleTableAsData", "row", "handleTableRowAsData", "subexit", "containerPhrasing", "matrix", "markdownTable", "children", "index", "result", "parent", "inlineCode", "checkBullet", "state", "marker", "checkListItemIndent", "state", "style", "listItem", "node", "parent", "state", "info", "listItemIndent", "checkListItemIndent", "bullet", "checkBullet", "size", "tracker", "exit", "value", "map", "line", "index", "blank", "gfmTaskListItemFromMarkdown", "exitCheck", "exitParagraphWithTaskListItem", "gfmTaskListItemToMarkdown", "listItemWithTaskListItem", "token", "node", "parent", "head", "siblings", "index", "firstParaghraph", "sibling", "context", "safeOptions", "checkable", "checkbox", "tracker", "track", "value", "listItem", "check", "$0", "gfmFromMarkdown", "gfmAutolinkLiteralFromMarkdown", "gfmFootnoteFromMarkdown", "gfmStrikethroughFromMarkdown", "gfmTableFromMarkdown", "gfmTaskListItemFromMarkdown", "gfmToMarkdown", "options", "gfmAutolinkLiteralToMarkdown", "gfmFootnoteToMarkdown", "gfmStrikethroughToMarkdown", "gfmTableToMarkdown", "gfmTaskListItemToMarkdown", "remarkGfm", "options", "data", "add", "gfm", "gfmFromMarkdown", "gfmToMarkdown", "field", "value", "emptyOptions", "toString", "value", "options", "settings", "includeImageAlt", "includeHtml", "one", "node", "all", "values", "result", "index", "visit", "tree", "test", "visitor", "reverse", "visitParents", "overload", "node", "parents", "parent", "import_github_slugger", "slugs", "BananaSlug", "remarkSlug", "tree", "visit", "node", "data", "props", "id", "toString", "regex", "own", "BananaSlug", "value", "maintainCase", "self", "result", "slug", "originalSlug", "regex", "emptyOptions", "toString", "value", "options", "settings", "includeImageAlt", "includeHtml", "one", "node", "all", "values", "result", "index", "visit", "tree", "test", "visitor", "reverse", "visitParents", "overload", "node", "parents", "parent", "toExpression", "value", "slugs", "BananaSlug", "search", "root", "expression", "settings", "skip", "toExpression", "parents", "convert", "d", "map", "index", "endIndex", "opening", "visit", "node", "position", "parent", "value", "toString", "id", "slug", "import_extend", "contents", "map", "settings", "ordered", "tight", "prefix", "table", "minDepth", "index", "insert", "entry", "parent", "tail", "all", "item", "nodes", "result", "one", "node", "children", "position", "copy", "extend", "toc", "tree", "options", "settings", "heading", "toExpression", "result", "search", "contents", "remarkToc", "options", "node", "result", "toc", "import_emojilib", "import_char_regex", "import_is", "import_skin_tone", "charRegexMatcher", "charRegex", "NON_SPACING_MARK", "nonSpacingRegex", "normalizeCode", "code", "normalizeName", "name", "emojiData", "emojilib", "name", "emoji", "emojiCodesByName", "emojiNamesByCode", "normalizeCode", "get", "codeOrName", "assert4", "emojiCodesByName", "normalizeName", "emoticon", "convert", "test", "ok", "castFactory", "anyFactory", "propsFactory", "typeFactory", "tests", "checks", "index", "any", "parameters", "check", "checkAsRecord", "all", "node", "nodeAsRecord", "key", "type", "testFunction", "value", "parent", "looksLikeANode", "empty", "CONTINUE", "EXIT", "SKIP", "visitParents", "tree", "test", "visitor", "reverse", "check", "is", "convert", "step", "factory", "node", "index", "parents", "value", "name", "visit", "result", "subresult", "offset", "grandparents", "toResult", "nodeAsParent", "child", "findAndReplace", "tree", "list", "options", "ignored", "convert", "pairs", "toPairs", "pairIndex", "visitParents", "visitor", "node", "parents", "index", "grandparent", "parent", "siblings", "handler", "find", "replace", "start", "change", "nodes", "match", "position", "matchObject", "value", "tupleOrList", "result", "tuple", "toExpression", "toFunction", "escapeStringRegexp", "RE_EMOJI", "RE_SHORT", "RE_PUNCT", "DEFAULT_SETTINGS", "plugin", "options", "settings", "pad", "emoticonEnable", "accessible", "aria", "text", "label", "replaceEmoticon", "match", "iconFull", "emoticon", "e", "iconPart", "icon", "trimmedChar", "addPad", "replaced", "replaceEmoji", "got", "get", "replacers", "transformer", "tree", "findAndReplace", "import_is_url", "isImgPath", "value", "defaultImageExtensions", "remarkImages", "imageExtensions", "imgExtRegex", "isImgExt", "tree", "visitParents", "node", "parents", "isUrl", "interactive", "length", "siblings", "index", "is", "image", "next", "unicodePunctuationRegex", "asciiAlpha", "regexCheck", "asciiAlphanumeric", "asciiAtext", "asciiDigit", "regexCheck", "asciiHexDigit", "asciiPunctuation", "markdownLineEnding", "code", "markdownLineEndingOrSpace", "markdownSpace", "unicodePunctuation", "unicodePunctuationRegex", "unicodeWhitespace", "regex", "check", "factoryAttributes", "effects", "ok", "nok", "attributesType", "attributesMarkerType", "attributeType", "attributeIdType", "attributeClassType", "attributeNameType", "attributeInitializerType", "attributeValueLiteralType", "attributeValueType", "attributeValueMarker", "attributeValueData", "disallowEol", "type", "marker", "start", "code", "between", "shortcutStart", "asciiAlpha", "name", "markdownSpace", "factorySpace", "markdownLineEndingOrSpace", "factoryWhitespace", "end", "markerType", "shortcutStartAfter", "valueType", "shortcut", "asciiAlphanumeric", "nameAfter", "valueBefore", "markdownLineEnding", "valueQuotedStart", "valueUnquoted", "valueQuotedAfter", "valueQuotedBetween", "valueQuoted", "factoryLabel", "effects", "ok", "nok", "type", "markerType", "stringType", "disallowEol", "size", "balance", "previous", "start", "code", "afterStart", "lineStart", "atClosingBrace", "token", "data", "markdownLineEnding", "dataEscape", "factoryName", "effects", "ok", "nok", "type", "self", "start", "code", "asciiAlpha", "name", "asciiAlphanumeric", "directiveContainer", "tokenizeDirectiveContainer", "label", "tokenizeLabel", "attributes", "tokenizeAttributes", "nonLazyLine", "tokenizeNonLazyLine", "effects", "ok", "nok", "self", "tail", "initialSize", "sizeOpen", "previous", "start", "code", "sequenceOpen", "factoryName", "afterName", "afterLabel", "afterAttributes", "factorySpace", "openAfter", "afterOpening", "markdownLineEnding", "contentStart", "lineStart", "after", "tokenizeClosingFence", "chunkStart", "token", "contentContinue", "t", "nonLazyLineAfter", "lineAfter", "size", "closingPrefixAfter", "closingSequence", "closingSequenceEnd", "factoryLabel", "factoryAttributes", "directiveLeaf", "tokenizeDirectiveLeaf", "label", "tokenizeLabel", "attributes", "tokenizeAttributes", "effects", "ok", "nok", "self", "start", "code", "inStart", "factoryName", "afterName", "afterLabel", "afterAttributes", "factorySpace", "end", "markdownLineEnding", "factoryLabel", "factoryAttributes", "directiveText", "tokenizeDirectiveText", "previous", "label", "tokenizeLabel", "attributes", "tokenizeAttributes", "code", "effects", "ok", "nok", "self", "start", "factoryName", "afterName", "afterLabel", "afterAttributes", "factoryLabel", "factoryAttributes", "directive", "directiveText", "directiveContainer", "directiveLeaf", "characterReferenceInvalid", "isDecimal", "character", "code", "isHexadecimal", "character", "code", "isAlphabetical", "character", "code", "isAlphanumerical", "character", "isAlphabetical", "isDecimal", "fromCharCode", "messages", "parseEntities", "value", "options", "additional", "result", "index", "lines", "queue", "point", "indent", "line", "column", "previous", "now", "character", "following", "start", "begin", "end", "type", "characterReferenceCharacters", "characterReference", "characters", "test", "isAlphanumerical", "isDecimal", "isHexadecimal", "characterEntitiesLegacy", "decodeNamedCharacterReference", "terminated", "namedReference", "diff", "reference", "warning", "reason", "referenceCode", "prohibited", "characterReferenceInvalid", "output", "disallowed", "flush", "next", "code", "offset", "position", "checkQuote", "state", "marker", "own", "shortcut", "handleDirective", "peekDirective", "directiveFromMarkdown", "enterContainer", "enterAttributes", "enterContainerLabel", "enterLeaf", "enterText", "exit", "exitAttributeClassValue", "exitAttributeIdValue", "exitAttributeName", "exitAttributeValue", "exitAttributes", "exitContainerLabel", "exitName", "directiveToMarkdown", "token", "enter", "type", "node", "parseEntities", "list", "cleaned", "index", "attribute", "_", "state", "safeOptions", "tracker", "track", "sequence", "fence", "value", "label", "head", "inlineDirectiveLabel", "labelType", "subexit", "containerPhrasing", "attributes", "shallow", "containerFlow", "quote", "checkQuote", "subset", "attrs", "values", "classesFull", "classes", "id", "key", "quoted", "classesFullList", "classesList", "stringifyEntitiesLight", "size", "visitParents", "parents", "nesting", "remarkDirective", "data", "add", "directive", "directiveFromMarkdown", "directiveToMarkdown", "field", "value", "env", "deserializer", "$", "_", "as", "out", "index", "unpair", "type", "value", "arr", "object", "key", "source", "flags", "map", "set", "name", "message", "deserialize", "serialized", "EMPTY", "toString", "keys", "typeOf", "value", "type", "asString", "shouldSkip", "TYPE", "serializer", "strict", "json", "$", "_", "as", "out", "index", "pair", "entry", "arr", "entries", "key", "source", "flags", "message", "serialize", "lossy", "esm_default", "any", "options", "deserialize", "serialize", "bail", "error", "isPlainObject", "value", "prototype", "trough", "fns", "pipeline", "run", "use", "values", "middlewareIndex", "callback", "next", "error", "output", "fn", "index", "wrap", "middelware", "middleware", "called", "wrapped", "parameters", "fnExpectsCallback", "result", "done", "exception", "then", "value", "stringifyPosition", "value", "position", "point", "index", "pos", "VFileMessage", "causeOrReason", "optionsOrParentOrPlace", "origin", "reason", "options", "legacyCause", "index", "parent", "start", "stringifyPosition", "path", "basename", "dirname", "extname", "join", "ext", "assertPath", "start", "end", "index", "seenNonSlash", "firstNonSlashEnd", "extIndex", "unmatchedSlash", "startPart", "startDot", "preDotState", "code", "segments", "joined", "normalize", "absolute", "value", "normalizeString", "allowAboveRoot", "result", "lastSegmentLength", "lastSlash", "dots", "lastSlashIndex", "proc", "cwd", "isUrl", "fileUrlOrPath", "urlToPath", "path", "isUrl", "error", "getPathFromURLPosix", "url", "pathname", "index", "third", "order", "VFile", "value", "options", "isUrl", "isUint8Array", "proc", "index", "prop", "path", "basename", "assertNonEmpty", "assertPart", "dirname", "assertPath", "extname", "urlToPath", "stem", "causeOrReason", "optionsOrParentOrPlace", "origin", "message", "VFileMessage", "encoding", "part", "name", "CallableInstance", "property", "proto", "func", "apply", "names", "p", "descriptor", "own", "Processor", "_Processor", "CallableInstance", "trough", "destination", "index", "attacher", "esm_default", "key", "value", "assertUnfrozen", "self", "options", "transformer", "file", "realFile", "vfile", "parser", "assertParser", "done", "assertCompiler", "executor", "resolve", "reject", "parseTree", "error", "tree", "realDone", "compileTree", "compileResult", "looksLikeAValue", "complete", "result", "assertDone", "bail", "assertNode", "transformers", "outputTree", "resultingTree", "compiler", "parameters", "attachers", "namespace", "addPlugin", "addList", "addPreset", "add", "plugin", "plugins", "thing", "entryIndex", "primary", "rest", "currentPrimary", "isPlainObject", "unified", "name", "frozen", "node", "asyncName", "looksLikeAVFile", "VFile", "isUint8Array", "convert", "test", "ok", "castFactory", "anyFactory", "propsFactory", "typeFactory", "tests", "checks", "index", "any", "parameters", "check", "checkAsRecord", "all", "node", "nodeAsRecord", "key", "type", "testFunction", "value", "parent", "looksLikeANode", "empty", "CONTINUE", "EXIT", "SKIP", "visitParents", "tree", "test", "visitor", "reverse", "check", "is", "convert", "step", "factory", "node", "index", "parents", "value", "name", "visit", "result", "subresult", "offset", "grandparents", "toResult", "nodeAsParent", "child", "visit", "tree", "testOrVisitor", "visitorOrReverse", "maybeReverse", "reverse", "test", "visitor", "visitParents", "overload", "node", "parents", "parent", "index", "search", "parseSelector", "selector", "defaultTagName", "value", "props", "start", "previous", "tagName", "match", "subvalue", "buttonTypes", "own", "createH", "schema", "defaultTagName", "caseSensitive", "adjust", "createAdjustMap", "h", "selector", "properties", "children", "index", "node", "child", "parseSelector", "isProperties", "key", "addProperty", "addChild", "value", "name", "info", "find", "result", "parse", "parsePrimitive", "style", "finalResult", "nodes", "normalize", "values", "svgCaseSensitiveTagNames", "h", "createH", "html", "s", "svg", "svgCaseSensitiveTagNames", "loadFile", "filePath", "resolve", "reject", "xhr", "parseGFM", "file", "fileData", "content", "unified", "remarkToc", "remarkParse", "remarkDirective", "htmlDirectives", "remarkGfm", "remarkSlug", "remarkImages", "lib_default", "plugin", "rehypeStringify", "err", "transform", "tree", "visit", "onDirective", "node", "data", "hast", "h"]
}
